// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: disegrpc.proto

package disegrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VG_Type int32

const (
	VG_Type_VG_TYPE_NORMAL VG_Type = 0
	VG_Type_VG_TYPE_FAST   VG_Type = 1
)

// Enum value maps for VG_Type.
var (
	VG_Type_name = map[int32]string{
		0: "VG_TYPE_NORMAL",
		1: "VG_TYPE_FAST",
	}
	VG_Type_value = map[string]int32{
		"VG_TYPE_NORMAL": 0,
		"VG_TYPE_FAST":   1,
	}
)

func (x VG_Type) Enum() *VG_Type {
	p := new(VG_Type)
	*p = x
	return p
}

func (x VG_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VG_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_disegrpc_proto_enumTypes[0].Descriptor()
}

func (VG_Type) Type() protoreflect.EnumType {
	return &file_disegrpc_proto_enumTypes[0]
}

func (x VG_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VG_Type.Descriptor instead.
func (VG_Type) EnumDescriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{0}
}

type CreateVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CapacityBytes int64             `protobuf:"varint,1,opt,name=capacity_bytes,json=capacityBytes,proto3" json:"capacity_bytes,omitempty"`
	VolumeName    string            `protobuf:"bytes,2,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	Parameters    map[string]string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Domain        string            `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *CreateVolumeRequest) Reset() {
	*x = CreateVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRequest) ProtoMessage() {}

func (x *CreateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateVolumeRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVolumeRequest) GetCapacityBytes() int64 {
	if x != nil {
		return x.CapacityBytes
	}
	return 0
}

func (x *CreateVolumeRequest) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *CreateVolumeRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *CreateVolumeRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type CreateVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume *Volume `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *CreateVolumeResponse) Reset() {
	*x = CreateVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeResponse) ProtoMessage() {}

func (x *CreateVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeResponse.ProtoReflect.Descriptor instead.
func (*CreateVolumeResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVolumeResponse) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type DeleteVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeName string `protobuf:"bytes,1,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	VolumeId   string `protobuf:"bytes,2,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
}

func (x *DeleteVolumeRequest) Reset() {
	*x = DeleteVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeRequest) ProtoMessage() {}

func (x *DeleteVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeRequest.ProtoReflect.Descriptor instead.
func (*DeleteVolumeRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteVolumeRequest) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *DeleteVolumeRequest) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

type DeleteVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteVolumeResponse) Reset() {
	*x = DeleteVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeResponse) ProtoMessage() {}

func (x *DeleteVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeResponse.ProtoReflect.Descriptor instead.
func (*DeleteVolumeResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{3}
}

type ListVolumesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVolumesRequest) Reset() {
	*x = ListVolumesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumesRequest) ProtoMessage() {}

func (x *ListVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumesRequest.ProtoReflect.Descriptor instead.
func (*ListVolumesRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{4}
}

type ListVolumesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeList []*Volume `protobuf:"bytes,1,rep,name=volume_list,json=volumeList,proto3" json:"volume_list,omitempty"`
}

func (x *ListVolumesResponse) Reset() {
	*x = ListVolumesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumesResponse) ProtoMessage() {}

func (x *ListVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumesResponse.ProtoReflect.Descriptor instead.
func (*ListVolumesResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{5}
}

func (x *ListVolumesResponse) GetVolumeList() []*Volume {
	if x != nil {
		return x.VolumeList
	}
	return nil
}

type GetVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeId   string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	VolumeName string `protobuf:"bytes,2,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
}

func (x *GetVolumeRequest) Reset() {
	*x = GetVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeRequest) ProtoMessage() {}

func (x *GetVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeRequest.ProtoReflect.Descriptor instead.
func (*GetVolumeRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{6}
}

func (x *GetVolumeRequest) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *GetVolumeRequest) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

type GetVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume *Volume `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *GetVolumeResponse) Reset() {
	*x = GetVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeResponse) ProtoMessage() {}

func (x *GetVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeResponse.ProtoReflect.Descriptor instead.
func (*GetVolumeResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{7}
}

func (x *GetVolumeResponse) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type SetQoSOfVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeName string `protobuf:"bytes,1,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	RWQoS      *QoS   `protobuf:"bytes,2,opt,name=RWQoS,proto3" json:"RWQoS,omitempty"`
}

func (x *SetQoSOfVolumeRequest) Reset() {
	*x = SetQoSOfVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQoSOfVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQoSOfVolumeRequest) ProtoMessage() {}

func (x *SetQoSOfVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQoSOfVolumeRequest.ProtoReflect.Descriptor instead.
func (*SetQoSOfVolumeRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{8}
}

func (x *SetQoSOfVolumeRequest) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *SetQoSOfVolumeRequest) GetRWQoS() *QoS {
	if x != nil {
		return x.RWQoS
	}
	return nil
}

type SetQoSOfVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetQoSOfVolumeResponse) Reset() {
	*x = SetQoSOfVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQoSOfVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQoSOfVolumeResponse) ProtoMessage() {}

func (x *SetQoSOfVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQoSOfVolumeResponse.ProtoReflect.Descriptor instead.
func (*SetQoSOfVolumeResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{9}
}

type GetQoSOfVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeName string `protobuf:"bytes,1,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
}

func (x *GetQoSOfVolumeRequest) Reset() {
	*x = GetQoSOfVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQoSOfVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQoSOfVolumeRequest) ProtoMessage() {}

func (x *GetQoSOfVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQoSOfVolumeRequest.ProtoReflect.Descriptor instead.
func (*GetQoSOfVolumeRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{10}
}

func (x *GetQoSOfVolumeRequest) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

type GetQoSOfVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeName string `protobuf:"bytes,1,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	RWQoS      *QoS   `protobuf:"bytes,2,opt,name=RWQoS,proto3" json:"RWQoS,omitempty"`
}

func (x *GetQoSOfVolumeResponse) Reset() {
	*x = GetQoSOfVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQoSOfVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQoSOfVolumeResponse) ProtoMessage() {}

func (x *GetQoSOfVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQoSOfVolumeResponse.ProtoReflect.Descriptor instead.
func (*GetQoSOfVolumeResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{11}
}

func (x *GetQoSOfVolumeResponse) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *GetQoSOfVolumeResponse) GetRWQoS() *QoS {
	if x != nil {
		return x.RWQoS
	}
	return nil
}

type AddStorHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorHost             *Stor_Host                       `protobuf:"bytes,1,opt,name=stor_host,json=storHost,proto3" json:"stor_host,omitempty"`
	OverwriteWhenExisted bool                             `protobuf:"varint,2,opt,name=overwrite_when_existed,json=overwriteWhenExisted,proto3" json:"overwrite_when_existed,omitempty"`
	IcseAgent            *Install_Icse_Agent_To_Stor_Host `protobuf:"bytes,3,opt,name=icse_agent,json=icseAgent,proto3" json:"icse_agent,omitempty"`
}

func (x *AddStorHostRequest) Reset() {
	*x = AddStorHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStorHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStorHostRequest) ProtoMessage() {}

func (x *AddStorHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStorHostRequest.ProtoReflect.Descriptor instead.
func (*AddStorHostRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{12}
}

func (x *AddStorHostRequest) GetStorHost() *Stor_Host {
	if x != nil {
		return x.StorHost
	}
	return nil
}

func (x *AddStorHostRequest) GetOverwriteWhenExisted() bool {
	if x != nil {
		return x.OverwriteWhenExisted
	}
	return false
}

func (x *AddStorHostRequest) GetIcseAgent() *Install_Icse_Agent_To_Stor_Host {
	if x != nil {
		return x.IcseAgent
	}
	return nil
}

type AddStorHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddStorHostResponse) Reset() {
	*x = AddStorHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStorHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStorHostResponse) ProtoMessage() {}

func (x *AddStorHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStorHostResponse.ProtoReflect.Descriptor instead.
func (*AddStorHostResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{13}
}

type RemoveStorHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorHostname string `protobuf:"bytes,1,opt,name=stor_hostname,json=storHostname,proto3" json:"stor_hostname,omitempty"`
}

func (x *RemoveStorHostRequest) Reset() {
	*x = RemoveStorHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStorHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStorHostRequest) ProtoMessage() {}

func (x *RemoveStorHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStorHostRequest.ProtoReflect.Descriptor instead.
func (*RemoveStorHostRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveStorHostRequest) GetStorHostname() string {
	if x != nil {
		return x.StorHostname
	}
	return ""
}

type RemoveStorHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveStorHostResponse) Reset() {
	*x = RemoveStorHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStorHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStorHostResponse) ProtoMessage() {}

func (x *RemoveStorHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStorHostResponse.ProtoReflect.Descriptor instead.
func (*RemoveStorHostResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{15}
}

type ListStorHostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStorHostsRequest) Reset() {
	*x = ListStorHostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStorHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorHostsRequest) ProtoMessage() {}

func (x *ListStorHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorHostsRequest.ProtoReflect.Descriptor instead.
func (*ListStorHostsRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{16}
}

type ListStorHostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorhostList []*Stor_Host `protobuf:"bytes,1,rep,name=storhost_list,json=storhostList,proto3" json:"storhost_list,omitempty"`
}

func (x *ListStorHostsResponse) Reset() {
	*x = ListStorHostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStorHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorHostsResponse) ProtoMessage() {}

func (x *ListStorHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorHostsResponse.ProtoReflect.Descriptor instead.
func (*ListStorHostsResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{17}
}

func (x *ListStorHostsResponse) GetStorhostList() []*Stor_Host {
	if x != nil {
		return x.StorhostList
	}
	return nil
}

type GetStorHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorHostname string `protobuf:"bytes,1,opt,name=stor_hostname,json=storHostname,proto3" json:"stor_hostname,omitempty"`
}

func (x *GetStorHostRequest) Reset() {
	*x = GetStorHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorHostRequest) ProtoMessage() {}

func (x *GetStorHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorHostRequest.ProtoReflect.Descriptor instead.
func (*GetStorHostRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{18}
}

func (x *GetStorHostRequest) GetStorHostname() string {
	if x != nil {
		return x.StorHostname
	}
	return ""
}

type GetStorHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorHost *Stor_Host `protobuf:"bytes,1,opt,name=stor_host,json=storHost,proto3" json:"stor_host,omitempty"`
}

func (x *GetStorHostResponse) Reset() {
	*x = GetStorHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorHostResponse) ProtoMessage() {}

func (x *GetStorHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorHostResponse.ProtoReflect.Descriptor instead.
func (*GetStorHostResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{19}
}

func (x *GetStorHostResponse) GetStorHost() *Stor_Host {
	if x != nil {
		return x.StorHost
	}
	return nil
}

type AddVGRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vg *VG `protobuf:"bytes,1,opt,name=vg,proto3" json:"vg,omitempty"`
}

func (x *AddVGRequest) Reset() {
	*x = AddVGRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVGRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVGRequest) ProtoMessage() {}

func (x *AddVGRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVGRequest.ProtoReflect.Descriptor instead.
func (*AddVGRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{20}
}

func (x *AddVGRequest) GetVg() *VG {
	if x != nil {
		return x.Vg
	}
	return nil
}

type AddVGResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddVGResponse) Reset() {
	*x = AddVGResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVGResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVGResponse) ProtoMessage() {}

func (x *AddVGResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVGResponse.ProtoReflect.Descriptor instead.
func (*AddVGResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{21}
}

type RemoveVGRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VgId string `protobuf:"bytes,1,opt,name=vg_id,json=vgId,proto3" json:"vg_id,omitempty"`
}

func (x *RemoveVGRequest) Reset() {
	*x = RemoveVGRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveVGRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVGRequest) ProtoMessage() {}

func (x *RemoveVGRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVGRequest.ProtoReflect.Descriptor instead.
func (*RemoveVGRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveVGRequest) GetVgId() string {
	if x != nil {
		return x.VgId
	}
	return ""
}

type RemoveVGResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveVGResponse) Reset() {
	*x = RemoveVGResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveVGResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVGResponse) ProtoMessage() {}

func (x *RemoveVGResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVGResponse.ProtoReflect.Descriptor instead.
func (*RemoveVGResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{23}
}

type ListVGsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVGsRequest) Reset() {
	*x = ListVGsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVGsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVGsRequest) ProtoMessage() {}

func (x *ListVGsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVGsRequest.ProtoReflect.Descriptor instead.
func (*ListVGsRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{24}
}

type ListVGsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VgList []*VG `protobuf:"bytes,1,rep,name=vg_list,json=vgList,proto3" json:"vg_list,omitempty"`
}

func (x *ListVGsResponse) Reset() {
	*x = ListVGsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVGsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVGsResponse) ProtoMessage() {}

func (x *ListVGsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVGsResponse.ProtoReflect.Descriptor instead.
func (*ListVGsResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{25}
}

func (x *ListVGsResponse) GetVgList() []*VG {
	if x != nil {
		return x.VgList
	}
	return nil
}

type GetVGRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VgId string `protobuf:"bytes,1,opt,name=vg_id,json=vgId,proto3" json:"vg_id,omitempty"`
}

func (x *GetVGRequest) Reset() {
	*x = GetVGRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVGRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVGRequest) ProtoMessage() {}

func (x *GetVGRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVGRequest.ProtoReflect.Descriptor instead.
func (*GetVGRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{26}
}

func (x *GetVGRequest) GetVgId() string {
	if x != nil {
		return x.VgId
	}
	return ""
}

type GetVGResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vg *VG `protobuf:"bytes,1,opt,name=vg,proto3" json:"vg,omitempty"`
}

func (x *GetVGResponse) Reset() {
	*x = GetVGResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVGResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVGResponse) ProtoMessage() {}

func (x *GetVGResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVGResponse.ProtoReflect.Descriptor instead.
func (*GetVGResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{27}
}

func (x *GetVGResponse) GetVg() *VG {
	if x != nil {
		return x.Vg
	}
	return nil
}

type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CapacityBytes   int64  `protobuf:"varint,1,opt,name=capacity_bytes,json=capacityBytes,proto3" json:"capacity_bytes,omitempty"`
	VolumeId        string `protobuf:"bytes,2,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`       //unique id, but not be lv id on storhost. will be: vid_{volume_name}
	VolumeName      string `protobuf:"bytes,3,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"` //unique. reference name for client
	CreateTimestamp int64  `protobuf:"varint,4,opt,name=create_timestamp,json=createTimestamp,proto3" json:"create_timestamp,omitempty"`
	//parameters be used to locate resource
	Parameters *Volume_Parameters `protobuf:"bytes,5,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Blkdev     *BlockDevice       `protobuf:"bytes,6,opt,name=blkdev,proto3" json:"blkdev,omitempty"`
	NvmfInfo   []*NVMf            `protobuf:"bytes,7,rep,name=nvmf_info,json=nvmfInfo,proto3" json:"nvmf_info,omitempty"`
	Domain     string             `protobuf:"bytes,8,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{28}
}

func (x *Volume) GetCapacityBytes() int64 {
	if x != nil {
		return x.CapacityBytes
	}
	return 0
}

func (x *Volume) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *Volume) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *Volume) GetCreateTimestamp() int64 {
	if x != nil {
		return x.CreateTimestamp
	}
	return 0
}

func (x *Volume) GetParameters() *Volume_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Volume) GetBlkdev() *BlockDevice {
	if x != nil {
		return x.Blkdev
	}
	return nil
}

func (x *Volume) GetNvmfInfo() []*NVMf {
	if x != nil {
		return x.NvmfInfo
	}
	return nil
}

func (x *Volume) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type QoS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadBps   int64 `protobuf:"varint,1,opt,name=read_bps,json=readBps,proto3" json:"read_bps,omitempty"`
	WriteBps  int64 `protobuf:"varint,2,opt,name=write_bps,json=writeBps,proto3" json:"write_bps,omitempty"`
	ReadIops  int64 `protobuf:"varint,3,opt,name=read_iops,json=readIops,proto3" json:"read_iops,omitempty"`
	WriteIops int64 `protobuf:"varint,4,opt,name=write_iops,json=writeIops,proto3" json:"write_iops,omitempty"`
}

func (x *QoS) Reset() {
	*x = QoS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QoS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QoS) ProtoMessage() {}

func (x *QoS) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QoS.ProtoReflect.Descriptor instead.
func (*QoS) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{29}
}

func (x *QoS) GetReadBps() int64 {
	if x != nil {
		return x.ReadBps
	}
	return 0
}

func (x *QoS) GetWriteBps() int64 {
	if x != nil {
		return x.WriteBps
	}
	return 0
}

func (x *QoS) GetReadIops() int64 {
	if x != nil {
		return x.ReadIops
	}
	return 0
}

func (x *QoS) GetWriteIops() int64 {
	if x != nil {
		return x.WriteIops
	}
	return 0
}

type BlockDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataVgId          string `protobuf:"bytes,1,opt,name=data_vg_id,json=dataVgId,proto3" json:"data_vg_id,omitempty"`
	DataLvDevname     string `protobuf:"bytes,2,opt,name=data_lv_devname,json=dataLvDevname,proto3" json:"data_lv_devname,omitempty"`
	DataCapacityBytes int64  `protobuf:"varint,3,opt,name=data_capacity_bytes,json=dataCapacityBytes,proto3" json:"data_capacity_bytes,omitempty"`
	//let it empty if no cache speeding-up
	CacheVgId string `protobuf:"bytes,4,opt,name=cache_vg_id,json=cacheVgId,proto3" json:"cache_vg_id,omitempty"`
	//let it empty if no cache speeding-up
	CacheLvDevname string `protobuf:"bytes,5,opt,name=cache_lv_devname,json=cacheLvDevname,proto3" json:"cache_lv_devname,omitempty"`
	//let it empty if no cache speeding-up
	CacheCapacityBytes int64 `protobuf:"varint,6,opt,name=cache_capacity_bytes,json=cacheCapacityBytes,proto3" json:"cache_capacity_bytes,omitempty"`
	//host device filepath
	TargetDevname string `protobuf:"bytes,7,opt,name=target_devname,json=targetDevname,proto3" json:"target_devname,omitempty"`
	TargetUuid    string `protobuf:"bytes,8,opt,name=target_uuid,json=targetUuid,proto3" json:"target_uuid,omitempty"`
	Domain        string `protobuf:"bytes,9,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *BlockDevice) Reset() {
	*x = BlockDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDevice) ProtoMessage() {}

func (x *BlockDevice) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDevice.ProtoReflect.Descriptor instead.
func (*BlockDevice) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{30}
}

func (x *BlockDevice) GetDataVgId() string {
	if x != nil {
		return x.DataVgId
	}
	return ""
}

func (x *BlockDevice) GetDataLvDevname() string {
	if x != nil {
		return x.DataLvDevname
	}
	return ""
}

func (x *BlockDevice) GetDataCapacityBytes() int64 {
	if x != nil {
		return x.DataCapacityBytes
	}
	return 0
}

func (x *BlockDevice) GetCacheVgId() string {
	if x != nil {
		return x.CacheVgId
	}
	return ""
}

func (x *BlockDevice) GetCacheLvDevname() string {
	if x != nil {
		return x.CacheLvDevname
	}
	return ""
}

func (x *BlockDevice) GetCacheCapacityBytes() int64 {
	if x != nil {
		return x.CacheCapacityBytes
	}
	return 0
}

func (x *BlockDevice) GetTargetDevname() string {
	if x != nil {
		return x.TargetDevname
	}
	return ""
}

func (x *BlockDevice) GetTargetUuid() string {
	if x != nil {
		return x.TargetUuid
	}
	return ""
}

func (x *BlockDevice) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

//VG usage be restrict by domain. A VG only belonged to one domain
type VG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//unique globally. always be overwrite to be {stor_hostname}_{vg_name}
	VgId         string `protobuf:"bytes,1,opt,name=vg_id,json=vgId,proto3" json:"vg_id,omitempty"`
	StorHostname string `protobuf:"bytes,2,opt,name=stor_hostname,json=storHostname,proto3" json:"stor_hostname,omitempty"`
	//unqique on storhost, which is the real vg name
	VgName                    string  `protobuf:"bytes,3,opt,name=vg_name,json=vgName,proto3" json:"vg_name,omitempty"`
	VgTotalSize               int64   `protobuf:"varint,4,opt,name=vg_total_size,json=vgTotalSize,proto3" json:"vg_total_size,omitempty"`
	VgFreeSize                int64   `protobuf:"varint,5,opt,name=vg_free_size,json=vgFreeSize,proto3" json:"vg_free_size,omitempty"`
	VgType                    VG_Type `protobuf:"varint,6,opt,name=vg_type,json=vgType,proto3,enum=disegrpc.VG_Type" json:"vg_type,omitempty"`
	LastCreateVolumeTimestamp int64   `protobuf:"varint,7,opt,name=last_create_volume_timestamp,json=lastCreateVolumeTimestamp,proto3" json:"last_create_volume_timestamp,omitempty"`
	//default "". be restricted to clients in same domain
	Domain string `protobuf:"bytes,8,opt,name=domain,proto3" json:"domain,omitempty"`
	//c3alias is a 3-length string
	//recommended format: f99 for flashcard vg, d99 for harddisk vg
	C3Alias string `protobuf:"bytes,9,opt,name=c3alias,proto3" json:"c3alias,omitempty"`
}

func (x *VG) Reset() {
	*x = VG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VG) ProtoMessage() {}

func (x *VG) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VG.ProtoReflect.Descriptor instead.
func (*VG) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{31}
}

func (x *VG) GetVgId() string {
	if x != nil {
		return x.VgId
	}
	return ""
}

func (x *VG) GetStorHostname() string {
	if x != nil {
		return x.StorHostname
	}
	return ""
}

func (x *VG) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

func (x *VG) GetVgTotalSize() int64 {
	if x != nil {
		return x.VgTotalSize
	}
	return 0
}

func (x *VG) GetVgFreeSize() int64 {
	if x != nil {
		return x.VgFreeSize
	}
	return 0
}

func (x *VG) GetVgType() VG_Type {
	if x != nil {
		return x.VgType
	}
	return VG_Type_VG_TYPE_NORMAL
}

func (x *VG) GetLastCreateVolumeTimestamp() int64 {
	if x != nil {
		return x.LastCreateVolumeTimestamp
	}
	return 0
}

func (x *VG) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *VG) GetC3Alias() string {
	if x != nil {
		return x.C3Alias
	}
	return ""
}

type Stor_Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorHostname              string   `protobuf:"bytes,1,opt,name=stor_hostname,json=storHostname,proto3" json:"stor_hostname,omitempty"` //unique
	StorhostStorIp            string   `protobuf:"bytes,2,opt,name=storhost_stor_ip,json=storhostStorIp,proto3" json:"storhost_stor_ip,omitempty"`
	StorhostMngIp             string   `protobuf:"bytes,3,opt,name=storhost_mng_ip,json=storhostMngIp,proto3" json:"storhost_mng_ip,omitempty"`
	LastCreateVolumeTimestamp int64    `protobuf:"varint,4,opt,name=last_create_volume_timestamp,json=lastCreateVolumeTimestamp,proto3" json:"last_create_volume_timestamp,omitempty"`
	AuxStorIps                []string `protobuf:"bytes,5,rep,name=aux_stor_ips,json=auxStorIps,proto3" json:"aux_stor_ips,omitempty"`
	//c3alias is a 3-length string
	//recommended format: s99
	C3Alias string `protobuf:"bytes,6,opt,name=c3alias,proto3" json:"c3alias,omitempty"`
}

func (x *Stor_Host) Reset() {
	*x = Stor_Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stor_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stor_Host) ProtoMessage() {}

func (x *Stor_Host) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stor_Host.ProtoReflect.Descriptor instead.
func (*Stor_Host) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{32}
}

func (x *Stor_Host) GetStorHostname() string {
	if x != nil {
		return x.StorHostname
	}
	return ""
}

func (x *Stor_Host) GetStorhostStorIp() string {
	if x != nil {
		return x.StorhostStorIp
	}
	return ""
}

func (x *Stor_Host) GetStorhostMngIp() string {
	if x != nil {
		return x.StorhostMngIp
	}
	return ""
}

func (x *Stor_Host) GetLastCreateVolumeTimestamp() int64 {
	if x != nil {
		return x.LastCreateVolumeTimestamp
	}
	return 0
}

func (x *Stor_Host) GetAuxStorIps() []string {
	if x != nil {
		return x.AuxStorIps
	}
	return nil
}

func (x *Stor_Host) GetC3Alias() string {
	if x != nil {
		return x.C3Alias
	}
	return ""
}

type Install_Icse_Agent_To_Stor_Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SshUser  string `protobuf:"bytes,1,opt,name=ssh_user,json=sshUser,proto3" json:"ssh_user,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Port     int32  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"` //be used to configs ssh port if not default 22
}

func (x *Install_Icse_Agent_To_Stor_Host) Reset() {
	*x = Install_Icse_Agent_To_Stor_Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Install_Icse_Agent_To_Stor_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Install_Icse_Agent_To_Stor_Host) ProtoMessage() {}

func (x *Install_Icse_Agent_To_Stor_Host) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Install_Icse_Agent_To_Stor_Host.ProtoReflect.Descriptor instead.
func (*Install_Icse_Agent_To_Stor_Host) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{33}
}

func (x *Install_Icse_Agent_To_Stor_Host) GetSshUser() string {
	if x != nil {
		return x.SshUser
	}
	return ""
}

func (x *Install_Icse_Agent_To_Stor_Host) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Install_Icse_Agent_To_Stor_Host) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type NVMf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transport string `protobuf:"bytes,1,opt,name=transport,proto3" json:"transport,omitempty"`
	Traddr    string `protobuf:"bytes,2,opt,name=traddr,proto3" json:"traddr,omitempty"`
	Trsvcid   string `protobuf:"bytes,3,opt,name=trsvcid,proto3" json:"trsvcid,omitempty"`
	Nqn       string `protobuf:"bytes,4,opt,name=nqn,proto3" json:"nqn,omitempty"`
}

func (x *NVMf) Reset() {
	*x = NVMf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NVMf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NVMf) ProtoMessage() {}

func (x *NVMf) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NVMf.ProtoReflect.Descriptor instead.
func (*NVMf) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{34}
}

func (x *NVMf) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *NVMf) GetTraddr() string {
	if x != nil {
		return x.Traddr
	}
	return ""
}

func (x *NVMf) GetTrsvcid() string {
	if x != nil {
		return x.Trsvcid
	}
	return ""
}

func (x *NVMf) GetNqn() string {
	if x != nil {
		return x.Nqn
	}
	return ""
}

//generated block devices will be named automatically with format:
//s99c99f99hd99p99 or s99c99xxx0d99p99
//1st-3rd  -- storhost
//4th-6th  -- controller
//7th-9th  -- fast vg. xxx is keyword which means no cache speeding-up
//10th  -- hexadecimal number to express 5-times cache percents. for example: 3 means 15% cache percents.
//11th-13th  -- normal vg
//14th-16th  -- device file number with format: character 'p' + 2 numbers
type OneControllerMultiBlkDev struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//3 characters. recommended format of stor_hostname: character 's' + 2 numbers
	StorHostnameC3Alias string `protobuf:"bytes,1,opt,name=stor_hostname_c3alias,json=storHostnameC3alias,proto3" json:"stor_hostname_c3alias,omitempty"`
	//3 characters. recommended format of controller_name: character 'c' + 2 numbers
	ControllerNameC3 string `protobuf:"bytes,2,opt,name=controller_name_c3,json=controllerNameC3,proto3" json:"controller_name_c3,omitempty"`
	//number + unit, unit can be k, m, g, t, and ignore case
	CapacityPerBlkdev string `protobuf:"bytes,3,opt,name=capacity_per_blkdev,json=capacityPerBlkdev,proto3" json:"capacity_per_blkdev,omitempty"`
	//d2_range_blkdevs be used to generated block devices,
	//format should be two 2-digits numbers linked by dash. for example "1-12" will create p01, p02 ... p12
	D2RangeBlkdevs string `protobuf:"bytes,4,opt,name=d2_range_blkdevs,json=d2RangeBlkdevs,proto3" json:"d2_range_blkdevs,omitempty"`
	//default 0. cache_percent is a integer between 0 and 100
	//will be convert to a char (from '0' to 'k', scale is 5)
	//and be placed the 10th position of device file name.
	CachePercent int64 `protobuf:"varint,5,opt,name=cache_percent,json=cachePercent,proto3" json:"cache_percent,omitempty"`
	//default "". if cache_percent > 0, fast_vg must be assigned
	//3 characters. recommended format of fast_vg: character 'f' + 2 numbers
	CacheVgC3Alias string `protobuf:"bytes,6,opt,name=cache_vg_c3alias,json=cacheVgC3alias,proto3" json:"cache_vg_c3alias,omitempty"`
	//3 characters. recommended format of normal_vg: character 'd' + 2 numbers
	DataVgC3Alias string `protobuf:"bytes,7,opt,name=data_vg_c3alias,json=dataVgC3alias,proto3" json:"data_vg_c3alias,omitempty"`
	//media_mode is one of "cached", "normal" and "fast". default is "cached"
	MediaMode string `protobuf:"bytes,8,opt,name=media_mode,json=mediaMode,proto3" json:"media_mode,omitempty"`
	//cache_mode is one of "writeback", "writethrough" and "writearound". default is "writeback"
	CacheMode string `protobuf:"bytes,9,opt,name=CacheMode,proto3" json:"CacheMode,omitempty"`
	//one of "4k", "8k", "16k", "32k", "64k". default is "8k"
	CacheBlockSizeInKs string `protobuf:"bytes,10,opt,name=CacheBlockSizeInKs,proto3" json:"CacheBlockSizeInKs,omitempty"`
	Domain             string `protobuf:"bytes,11,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *OneControllerMultiBlkDev) Reset() {
	*x = OneControllerMultiBlkDev{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneControllerMultiBlkDev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneControllerMultiBlkDev) ProtoMessage() {}

func (x *OneControllerMultiBlkDev) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneControllerMultiBlkDev.ProtoReflect.Descriptor instead.
func (*OneControllerMultiBlkDev) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{35}
}

func (x *OneControllerMultiBlkDev) GetStorHostnameC3Alias() string {
	if x != nil {
		return x.StorHostnameC3Alias
	}
	return ""
}

func (x *OneControllerMultiBlkDev) GetControllerNameC3() string {
	if x != nil {
		return x.ControllerNameC3
	}
	return ""
}

func (x *OneControllerMultiBlkDev) GetCapacityPerBlkdev() string {
	if x != nil {
		return x.CapacityPerBlkdev
	}
	return ""
}

func (x *OneControllerMultiBlkDev) GetD2RangeBlkdevs() string {
	if x != nil {
		return x.D2RangeBlkdevs
	}
	return ""
}

func (x *OneControllerMultiBlkDev) GetCachePercent() int64 {
	if x != nil {
		return x.CachePercent
	}
	return 0
}

func (x *OneControllerMultiBlkDev) GetCacheVgC3Alias() string {
	if x != nil {
		return x.CacheVgC3Alias
	}
	return ""
}

func (x *OneControllerMultiBlkDev) GetDataVgC3Alias() string {
	if x != nil {
		return x.DataVgC3Alias
	}
	return ""
}

func (x *OneControllerMultiBlkDev) GetMediaMode() string {
	if x != nil {
		return x.MediaMode
	}
	return ""
}

func (x *OneControllerMultiBlkDev) GetCacheMode() string {
	if x != nil {
		return x.CacheMode
	}
	return ""
}

func (x *OneControllerMultiBlkDev) GetCacheBlockSizeInKs() string {
	if x != nil {
		return x.CacheBlockSizeInKs
	}
	return ""
}

func (x *OneControllerMultiBlkDev) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type CreateOneCtrMulBlkDevRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ocmb *OneControllerMultiBlkDev `protobuf:"bytes,1,opt,name=ocmb,proto3" json:"ocmb,omitempty"`
}

func (x *CreateOneCtrMulBlkDevRequest) Reset() {
	*x = CreateOneCtrMulBlkDevRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOneCtrMulBlkDevRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOneCtrMulBlkDevRequest) ProtoMessage() {}

func (x *CreateOneCtrMulBlkDevRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOneCtrMulBlkDevRequest.ProtoReflect.Descriptor instead.
func (*CreateOneCtrMulBlkDevRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{36}
}

func (x *CreateOneCtrMulBlkDevRequest) GetOcmb() *OneControllerMultiBlkDev {
	if x != nil {
		return x.Ocmb
	}
	return nil
}

type CreateOneCtrMulBlkDevResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exechost *Stor_Host `protobuf:"bytes,1,opt,name=exechost,proto3" json:"exechost,omitempty"`
	Targets  []*NVMf    `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	Volumes  []*Volume  `protobuf:"bytes,3,rep,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *CreateOneCtrMulBlkDevResponse) Reset() {
	*x = CreateOneCtrMulBlkDevResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOneCtrMulBlkDevResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOneCtrMulBlkDevResponse) ProtoMessage() {}

func (x *CreateOneCtrMulBlkDevResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOneCtrMulBlkDevResponse.ProtoReflect.Descriptor instead.
func (*CreateOneCtrMulBlkDevResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{37}
}

func (x *CreateOneCtrMulBlkDevResponse) GetExechost() *Stor_Host {
	if x != nil {
		return x.Exechost
	}
	return nil
}

func (x *CreateOneCtrMulBlkDevResponse) GetTargets() []*NVMf {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *CreateOneCtrMulBlkDevResponse) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type DeleteOneCtrMulBlkDevRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exechost *Stor_Host `protobuf:"bytes,1,opt,name=exechost,proto3" json:"exechost,omitempty"`
	Targets  []*NVMf    `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	Volumes  []*Volume  `protobuf:"bytes,3,rep,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *DeleteOneCtrMulBlkDevRequest) Reset() {
	*x = DeleteOneCtrMulBlkDevRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOneCtrMulBlkDevRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneCtrMulBlkDevRequest) ProtoMessage() {}

func (x *DeleteOneCtrMulBlkDevRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneCtrMulBlkDevRequest.ProtoReflect.Descriptor instead.
func (*DeleteOneCtrMulBlkDevRequest) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteOneCtrMulBlkDevRequest) GetExechost() *Stor_Host {
	if x != nil {
		return x.Exechost
	}
	return nil
}

func (x *DeleteOneCtrMulBlkDevRequest) GetTargets() []*NVMf {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *DeleteOneCtrMulBlkDevRequest) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type DeleteOneCtrMulBlkDevResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteOneCtrMulBlkDevResponse) Reset() {
	*x = DeleteOneCtrMulBlkDevResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOneCtrMulBlkDevResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneCtrMulBlkDevResponse) ProtoMessage() {}

func (x *DeleteOneCtrMulBlkDevResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneCtrMulBlkDevResponse.ProtoReflect.Descriptor instead.
func (*DeleteOneCtrMulBlkDevResponse) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{39}
}

type Volume_Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorhostSelectPolicy string                            `protobuf:"bytes,1,opt,name=StorhostSelectPolicy,proto3" json:"StorhostSelectPolicy,omitempty"`
	StorhostExpression   string                            `protobuf:"bytes,2,opt,name=StorhostExpression,proto3" json:"StorhostExpression,omitempty"`
	MediaMode            string                            `protobuf:"bytes,3,opt,name=MediaMode,proto3" json:"MediaMode,omitempty"`
	DatavgSelectPolicy   *Volume_Parameters_VGSelectPolicy `protobuf:"bytes,4,opt,name=DatavgSelectPolicy,proto3" json:"DatavgSelectPolicy,omitempty"`
	CachevgSelectPolicy  *Volume_Parameters_VGSelectPolicy `protobuf:"bytes,5,opt,name=CachevgSelectPolicy,proto3" json:"CachevgSelectPolicy,omitempty"`
	CachePercents        int32                             `protobuf:"varint,6,opt,name=CachePercents,proto3" json:"CachePercents,omitempty"`
	CacheMode            string                            `protobuf:"bytes,7,opt,name=CacheMode,proto3" json:"CacheMode,omitempty"`
	CacheBlockSizeInKs   string                            `protobuf:"bytes,8,opt,name=CacheBlockSizeInKs,proto3" json:"CacheBlockSizeInKs,omitempty"`
	RWQoS                *QoS                              `protobuf:"bytes,9,opt,name=RWQoS,proto3" json:"RWQoS,omitempty"`
}

func (x *Volume_Parameters) Reset() {
	*x = Volume_Parameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume_Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume_Parameters) ProtoMessage() {}

func (x *Volume_Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume_Parameters.ProtoReflect.Descriptor instead.
func (*Volume_Parameters) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{28, 0}
}

func (x *Volume_Parameters) GetStorhostSelectPolicy() string {
	if x != nil {
		return x.StorhostSelectPolicy
	}
	return ""
}

func (x *Volume_Parameters) GetStorhostExpression() string {
	if x != nil {
		return x.StorhostExpression
	}
	return ""
}

func (x *Volume_Parameters) GetMediaMode() string {
	if x != nil {
		return x.MediaMode
	}
	return ""
}

func (x *Volume_Parameters) GetDatavgSelectPolicy() *Volume_Parameters_VGSelectPolicy {
	if x != nil {
		return x.DatavgSelectPolicy
	}
	return nil
}

func (x *Volume_Parameters) GetCachevgSelectPolicy() *Volume_Parameters_VGSelectPolicy {
	if x != nil {
		return x.CachevgSelectPolicy
	}
	return nil
}

func (x *Volume_Parameters) GetCachePercents() int32 {
	if x != nil {
		return x.CachePercents
	}
	return 0
}

func (x *Volume_Parameters) GetCacheMode() string {
	if x != nil {
		return x.CacheMode
	}
	return ""
}

func (x *Volume_Parameters) GetCacheBlockSizeInKs() string {
	if x != nil {
		return x.CacheBlockSizeInKs
	}
	return ""
}

func (x *Volume_Parameters) GetRWQoS() *QoS {
	if x != nil {
		return x.RWQoS
	}
	return nil
}

type Volume_Parameters_VGSelectPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyType      string `protobuf:"bytes,1,opt,name=policy_type,json=policyType,proto3" json:"policy_type,omitempty"`
	MatchExpression string `protobuf:"bytes,2,opt,name=match_expression,json=matchExpression,proto3" json:"match_expression,omitempty"`
}

func (x *Volume_Parameters_VGSelectPolicy) Reset() {
	*x = Volume_Parameters_VGSelectPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disegrpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume_Parameters_VGSelectPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume_Parameters_VGSelectPolicy) ProtoMessage() {}

func (x *Volume_Parameters_VGSelectPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_disegrpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume_Parameters_VGSelectPolicy.ProtoReflect.Descriptor instead.
func (*Volume_Parameters_VGSelectPolicy) Descriptor() ([]byte, []int) {
	return file_disegrpc_proto_rawDescGZIP(), []int{28, 0, 0}
}

func (x *Volume_Parameters_VGSelectPolicy) GetPolicyType() string {
	if x != nil {
		return x.PolicyType
	}
	return ""
}

func (x *Volume_Parameters_VGSelectPolicy) GetMatchExpression() string {
	if x != nil {
		return x.MatchExpression
	}
	return ""
}

var File_disegrpc_proto protoreflect.FileDescriptor

var file_disegrpc_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x22, 0x83, 0x02, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x40, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x22, 0x53, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x50, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x22, 0x5d, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x51, 0x6f, 0x53, 0x4f, 0x66, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x52, 0x57,
	0x51, 0x6f, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x69, 0x73, 0x65,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x6f, 0x53, 0x52, 0x05, 0x52, 0x57, 0x51, 0x6f, 0x53, 0x22,
	0x18, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x51, 0x6f, 0x53, 0x4f, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x51, 0x6f, 0x53, 0x4f, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x51, 0x6f, 0x53, 0x4f, 0x66, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x52, 0x57, 0x51, 0x6f, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x6f, 0x53, 0x52, 0x05, 0x52, 0x57,
	0x51, 0x6f, 0x53, 0x22, 0xc6, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x5f, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16,
	0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6f, 0x76,
	0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x48, 0x0a, 0x0a, 0x69, 0x63, 0x73, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x49, 0x63, 0x73, 0x65, 0x5f, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x54, 0x6f, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x5f, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x09, 0x69, 0x63, 0x73, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x15, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x74, 0x6f, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x48,
	0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0d,
	0x73, 0x74, 0x6f, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x5f, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x68, 0x6f,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x74, 0x6f, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69,
	0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x5f, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x56, 0x47, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x02, 0x76, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x56, 0x47, 0x52, 0x02, 0x76, 0x67, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x56,
	0x47, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x0f, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x56, 0x47, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05,
	0x76, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x67, 0x49,
	0x64, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x47, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x47, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x47, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x76, 0x67,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x69,
	0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x47, 0x52, 0x06, 0x76, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x23, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x47, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x13, 0x0a, 0x05, 0x76, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x76, 0x67, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56, 0x47, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x02, 0x76, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56,
	0x47, 0x52, 0x02, 0x76, 0x67, 0x22, 0x8b, 0x07, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a,
	0x06, 0x62, 0x6c, 0x6b, 0x64, 0x65, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x62, 0x6c, 0x6b, 0x64, 0x65, 0x76, 0x12, 0x2b, 0x0a, 0x09,
	0x6e, 0x76, 0x6d, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x56, 0x4d, 0x66, 0x52,
	0x08, 0x6e, 0x76, 0x6d, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x1a, 0xbf, 0x04, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x53, 0x74, 0x6f, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x68, 0x6f, 0x73, 0x74,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x76, 0x67, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x56, 0x47, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x12, 0x44, 0x61, 0x74, 0x61,
	0x76, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x5c,
	0x0a, 0x13, 0x43, 0x61, 0x63, 0x68, 0x65, 0x76, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x69,
	0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x56, 0x47, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x13, 0x43, 0x61, 0x63, 0x68, 0x65, 0x76, 0x67,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x43, 0x61, 0x63, 0x68, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x49, 0x6e, 0x4b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x4b, 0x73,
	0x12, 0x23, 0x0a, 0x05, 0x52, 0x57, 0x51, 0x6f, 0x53, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x6f, 0x53, 0x52, 0x05,
	0x52, 0x57, 0x51, 0x6f, 0x53, 0x1a, 0x5c, 0x0a, 0x0e, 0x56, 0x47, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x03, 0x51, 0x6f, 0x53, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65,
	0x61, 0x64, 0x42, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x62,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x72, 0x69, 0x74, 0x65, 0x42,
	0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6f, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6f, 0x70, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x6f, 0x70, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6f, 0x70, 0x73, 0x22, 0xdf,
	0x02, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x56, 0x67, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x76, 0x5f, 0x64, 0x65, 0x76, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x76, 0x44, 0x65, 0x76,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x64, 0x61, 0x74, 0x61, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x76, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x56, 0x67, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6c, 0x76,
	0x5f, 0x64, 0x65, 0x76, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x4c, 0x76, 0x44, 0x65, 0x76, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x22, 0xbc, 0x02, 0x0a, 0x02, 0x56, 0x47, 0x12, 0x13, 0x0a, 0x05, 0x76, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x74, 0x6f, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x67,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x76, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x76, 0x67, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x67, 0x46, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x2a, 0x0a, 0x07, 0x76, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x47, 0x5f,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x76, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x1c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x33, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x33, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22,
	0xff, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x5f, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74,
	0x6f, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x49, 0x70, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x74, 0x6f, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6d, 0x6e, 0x67, 0x5f, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x68, 0x6f, 0x73, 0x74, 0x4d,
	0x6e, 0x67, 0x49, 0x70, 0x12, 0x3f, 0x0a, 0x1c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x6c, 0x61, 0x73, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x75, 0x78, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x78,
	0x53, 0x74, 0x6f, 0x72, 0x49, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x33, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x33, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x22, 0x6c, 0x0a, 0x1f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x49, 0x63, 0x73,
	0x65, 0x5f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x54, 0x6f, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x5f,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x73, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x68, 0x0a, 0x04, 0x4e, 0x56, 0x4d, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x72, 0x73, 0x76, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x72, 0x73, 0x76, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x71, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x71, 0x6e, 0x22, 0xd2, 0x03, 0x0a, 0x18, 0x4f, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x33, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x43, 0x33, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x33,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x33, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6b, 0x64, 0x65, 0x76, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x50,
	0x65, 0x72, 0x42, 0x6c, 0x6b, 0x64, 0x65, 0x76, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x32, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x62, 0x6c, 0x6b, 0x64, 0x65, 0x76, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x32, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6c, 0x6b, 0x64, 0x65,
	0x76, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x76, 0x67, 0x5f, 0x63, 0x33, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x56, 0x67, 0x43, 0x33, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x67, 0x5f, 0x63, 0x33, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x56, 0x67, 0x43, 0x33, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x61, 0x63, 0x68, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x4b, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x43, 0x61, 0x63, 0x68, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x49, 0x6e, 0x4b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x56,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x43, 0x74, 0x72, 0x4d, 0x75,
	0x6c, 0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x04, 0x6f, 0x63, 0x6d, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64,
	0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76,
	0x52, 0x04, 0x6f, 0x63, 0x6d, 0x62, 0x22, 0xa6, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x6e, 0x65, 0x43, 0x74, 0x72, 0x4d, 0x75, 0x6c, 0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x73,
	0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x5f, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x08, 0x65, 0x78, 0x65, 0x63, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x69, 0x73,
	0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x56, 0x4d, 0x66, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22,
	0xa5, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x43, 0x74, 0x72,
	0x4d, 0x75, 0x6c, 0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x5f, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x56,
	0x4d, 0x66, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64,
	0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x07,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x6e, 0x65, 0x43, 0x74, 0x72, 0x4d, 0x75, 0x6c, 0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x2f, 0x0a, 0x07, 0x56, 0x47, 0x5f, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x46, 0x41, 0x53, 0x54, 0x10, 0x01, 0x32, 0xa6, 0x0a, 0x0a, 0x04, 0x44, 0x49,
	0x53, 0x45, 0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x1a, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x64, 0x69,
	0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x53, 0x65,
	0x74, 0x51, 0x6f, 0x53, 0x4f, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x64,
	0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x6f, 0x53, 0x4f, 0x66,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x6f, 0x53, 0x4f,
	0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x51, 0x6f, 0x53, 0x4f, 0x66, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x6f, 0x53, 0x4f, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x51, 0x6f, 0x53, 0x4f, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53,
	0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x69, 0x73, 0x65,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1e,
	0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x56, 0x47, 0x54, 0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x16,
	0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x47, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x47, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x47, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x47, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x56, 0x47, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x47, 0x73, 0x49, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x12,
	0x18, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x47, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x65,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x47, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56, 0x47, 0x46,
	0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x47, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x47,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x43, 0x74, 0x72, 0x4d, 0x75, 0x6c, 0x42, 0x6c, 0x6b,
	0x44, 0x65, 0x76, 0x12, 0x26, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x43, 0x74, 0x72, 0x4d, 0x75, 0x6c, 0x42, 0x6c,
	0x6b, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x69,
	0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65,
	0x43, 0x74, 0x72, 0x4d, 0x75, 0x6c, 0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x6e, 0x65, 0x43, 0x74, 0x72, 0x4d, 0x75, 0x6c, 0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76, 0x12,
	0x26, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x6e, 0x65, 0x43, 0x74, 0x72, 0x4d, 0x75, 0x6c, 0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x43, 0x74, 0x72, 0x4d,
	0x75, 0x6c, 0x42, 0x6c, 0x6b, 0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x64, 0x69, 0x73, 0x65, 0x67, 0x72, 0x70,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_disegrpc_proto_rawDescOnce sync.Once
	file_disegrpc_proto_rawDescData = file_disegrpc_proto_rawDesc
)

func file_disegrpc_proto_rawDescGZIP() []byte {
	file_disegrpc_proto_rawDescOnce.Do(func() {
		file_disegrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_disegrpc_proto_rawDescData)
	})
	return file_disegrpc_proto_rawDescData
}

var file_disegrpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_disegrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_disegrpc_proto_goTypes = []interface{}{
	(VG_Type)(0),                             // 0: disegrpc.VG_Type
	(*CreateVolumeRequest)(nil),              // 1: disegrpc.CreateVolumeRequest
	(*CreateVolumeResponse)(nil),             // 2: disegrpc.CreateVolumeResponse
	(*DeleteVolumeRequest)(nil),              // 3: disegrpc.DeleteVolumeRequest
	(*DeleteVolumeResponse)(nil),             // 4: disegrpc.DeleteVolumeResponse
	(*ListVolumesRequest)(nil),               // 5: disegrpc.ListVolumesRequest
	(*ListVolumesResponse)(nil),              // 6: disegrpc.ListVolumesResponse
	(*GetVolumeRequest)(nil),                 // 7: disegrpc.GetVolumeRequest
	(*GetVolumeResponse)(nil),                // 8: disegrpc.GetVolumeResponse
	(*SetQoSOfVolumeRequest)(nil),            // 9: disegrpc.SetQoSOfVolumeRequest
	(*SetQoSOfVolumeResponse)(nil),           // 10: disegrpc.SetQoSOfVolumeResponse
	(*GetQoSOfVolumeRequest)(nil),            // 11: disegrpc.GetQoSOfVolumeRequest
	(*GetQoSOfVolumeResponse)(nil),           // 12: disegrpc.GetQoSOfVolumeResponse
	(*AddStorHostRequest)(nil),               // 13: disegrpc.AddStorHostRequest
	(*AddStorHostResponse)(nil),              // 14: disegrpc.AddStorHostResponse
	(*RemoveStorHostRequest)(nil),            // 15: disegrpc.RemoveStorHostRequest
	(*RemoveStorHostResponse)(nil),           // 16: disegrpc.RemoveStorHostResponse
	(*ListStorHostsRequest)(nil),             // 17: disegrpc.ListStorHostsRequest
	(*ListStorHostsResponse)(nil),            // 18: disegrpc.ListStorHostsResponse
	(*GetStorHostRequest)(nil),               // 19: disegrpc.GetStorHostRequest
	(*GetStorHostResponse)(nil),              // 20: disegrpc.GetStorHostResponse
	(*AddVGRequest)(nil),                     // 21: disegrpc.AddVGRequest
	(*AddVGResponse)(nil),                    // 22: disegrpc.AddVGResponse
	(*RemoveVGRequest)(nil),                  // 23: disegrpc.RemoveVGRequest
	(*RemoveVGResponse)(nil),                 // 24: disegrpc.RemoveVGResponse
	(*ListVGsRequest)(nil),                   // 25: disegrpc.ListVGsRequest
	(*ListVGsResponse)(nil),                  // 26: disegrpc.ListVGsResponse
	(*GetVGRequest)(nil),                     // 27: disegrpc.GetVGRequest
	(*GetVGResponse)(nil),                    // 28: disegrpc.GetVGResponse
	(*Volume)(nil),                           // 29: disegrpc.Volume
	(*QoS)(nil),                              // 30: disegrpc.QoS
	(*BlockDevice)(nil),                      // 31: disegrpc.BlockDevice
	(*VG)(nil),                               // 32: disegrpc.VG
	(*Stor_Host)(nil),                        // 33: disegrpc.Stor_Host
	(*Install_Icse_Agent_To_Stor_Host)(nil),  // 34: disegrpc.Install_Icse_Agent_To_Stor_Host
	(*NVMf)(nil),                             // 35: disegrpc.NVMf
	(*OneControllerMultiBlkDev)(nil),         // 36: disegrpc.OneControllerMultiBlkDev
	(*CreateOneCtrMulBlkDevRequest)(nil),     // 37: disegrpc.CreateOneCtrMulBlkDevRequest
	(*CreateOneCtrMulBlkDevResponse)(nil),    // 38: disegrpc.CreateOneCtrMulBlkDevResponse
	(*DeleteOneCtrMulBlkDevRequest)(nil),     // 39: disegrpc.DeleteOneCtrMulBlkDevRequest
	(*DeleteOneCtrMulBlkDevResponse)(nil),    // 40: disegrpc.DeleteOneCtrMulBlkDevResponse
	nil,                                      // 41: disegrpc.CreateVolumeRequest.ParametersEntry
	(*Volume_Parameters)(nil),                // 42: disegrpc.Volume.Parameters
	(*Volume_Parameters_VGSelectPolicy)(nil), // 43: disegrpc.Volume.Parameters.VGSelectPolicy
}
var file_disegrpc_proto_depIdxs = []int32{
	41, // 0: disegrpc.CreateVolumeRequest.parameters:type_name -> disegrpc.CreateVolumeRequest.ParametersEntry
	29, // 1: disegrpc.CreateVolumeResponse.volume:type_name -> disegrpc.Volume
	29, // 2: disegrpc.ListVolumesResponse.volume_list:type_name -> disegrpc.Volume
	29, // 3: disegrpc.GetVolumeResponse.volume:type_name -> disegrpc.Volume
	30, // 4: disegrpc.SetQoSOfVolumeRequest.RWQoS:type_name -> disegrpc.QoS
	30, // 5: disegrpc.GetQoSOfVolumeResponse.RWQoS:type_name -> disegrpc.QoS
	33, // 6: disegrpc.AddStorHostRequest.stor_host:type_name -> disegrpc.Stor_Host
	34, // 7: disegrpc.AddStorHostRequest.icse_agent:type_name -> disegrpc.Install_Icse_Agent_To_Stor_Host
	33, // 8: disegrpc.ListStorHostsResponse.storhost_list:type_name -> disegrpc.Stor_Host
	33, // 9: disegrpc.GetStorHostResponse.stor_host:type_name -> disegrpc.Stor_Host
	32, // 10: disegrpc.AddVGRequest.vg:type_name -> disegrpc.VG
	32, // 11: disegrpc.ListVGsResponse.vg_list:type_name -> disegrpc.VG
	32, // 12: disegrpc.GetVGResponse.vg:type_name -> disegrpc.VG
	42, // 13: disegrpc.Volume.parameters:type_name -> disegrpc.Volume.Parameters
	31, // 14: disegrpc.Volume.blkdev:type_name -> disegrpc.BlockDevice
	35, // 15: disegrpc.Volume.nvmf_info:type_name -> disegrpc.NVMf
	0,  // 16: disegrpc.VG.vg_type:type_name -> disegrpc.VG_Type
	36, // 17: disegrpc.CreateOneCtrMulBlkDevRequest.ocmb:type_name -> disegrpc.OneControllerMultiBlkDev
	33, // 18: disegrpc.CreateOneCtrMulBlkDevResponse.exechost:type_name -> disegrpc.Stor_Host
	35, // 19: disegrpc.CreateOneCtrMulBlkDevResponse.targets:type_name -> disegrpc.NVMf
	29, // 20: disegrpc.CreateOneCtrMulBlkDevResponse.volumes:type_name -> disegrpc.Volume
	33, // 21: disegrpc.DeleteOneCtrMulBlkDevRequest.exechost:type_name -> disegrpc.Stor_Host
	35, // 22: disegrpc.DeleteOneCtrMulBlkDevRequest.targets:type_name -> disegrpc.NVMf
	29, // 23: disegrpc.DeleteOneCtrMulBlkDevRequest.volumes:type_name -> disegrpc.Volume
	43, // 24: disegrpc.Volume.Parameters.DatavgSelectPolicy:type_name -> disegrpc.Volume.Parameters.VGSelectPolicy
	43, // 25: disegrpc.Volume.Parameters.CachevgSelectPolicy:type_name -> disegrpc.Volume.Parameters.VGSelectPolicy
	30, // 26: disegrpc.Volume.Parameters.RWQoS:type_name -> disegrpc.QoS
	1,  // 27: disegrpc.DISE.CreateVolume:input_type -> disegrpc.CreateVolumeRequest
	3,  // 28: disegrpc.DISE.DeleteVolume:input_type -> disegrpc.DeleteVolumeRequest
	5,  // 29: disegrpc.DISE.ListVolumes:input_type -> disegrpc.ListVolumesRequest
	7,  // 30: disegrpc.DISE.GetVolume:input_type -> disegrpc.GetVolumeRequest
	9,  // 31: disegrpc.DISE.SetQoSOfVolume:input_type -> disegrpc.SetQoSOfVolumeRequest
	11, // 32: disegrpc.DISE.GetQoSOfVolume:input_type -> disegrpc.GetQoSOfVolumeRequest
	13, // 33: disegrpc.DISE.AddStorHost:input_type -> disegrpc.AddStorHostRequest
	15, // 34: disegrpc.DISE.RemoveStorHost:input_type -> disegrpc.RemoveStorHostRequest
	17, // 35: disegrpc.DISE.ListStorHosts:input_type -> disegrpc.ListStorHostsRequest
	19, // 36: disegrpc.DISE.GetStorHost:input_type -> disegrpc.GetStorHostRequest
	21, // 37: disegrpc.DISE.AddVGToPool:input_type -> disegrpc.AddVGRequest
	23, // 38: disegrpc.DISE.RemoveVGFromPool:input_type -> disegrpc.RemoveVGRequest
	25, // 39: disegrpc.DISE.ListVGsInPool:input_type -> disegrpc.ListVGsRequest
	27, // 40: disegrpc.DISE.GetVGFromPool:input_type -> disegrpc.GetVGRequest
	37, // 41: disegrpc.DISE.CreateOneCtrMulBlkDev:input_type -> disegrpc.CreateOneCtrMulBlkDevRequest
	39, // 42: disegrpc.DISE.DeleteOneCtrMulBlkDev:input_type -> disegrpc.DeleteOneCtrMulBlkDevRequest
	2,  // 43: disegrpc.DISE.CreateVolume:output_type -> disegrpc.CreateVolumeResponse
	4,  // 44: disegrpc.DISE.DeleteVolume:output_type -> disegrpc.DeleteVolumeResponse
	6,  // 45: disegrpc.DISE.ListVolumes:output_type -> disegrpc.ListVolumesResponse
	8,  // 46: disegrpc.DISE.GetVolume:output_type -> disegrpc.GetVolumeResponse
	10, // 47: disegrpc.DISE.SetQoSOfVolume:output_type -> disegrpc.SetQoSOfVolumeResponse
	12, // 48: disegrpc.DISE.GetQoSOfVolume:output_type -> disegrpc.GetQoSOfVolumeResponse
	14, // 49: disegrpc.DISE.AddStorHost:output_type -> disegrpc.AddStorHostResponse
	16, // 50: disegrpc.DISE.RemoveStorHost:output_type -> disegrpc.RemoveStorHostResponse
	18, // 51: disegrpc.DISE.ListStorHosts:output_type -> disegrpc.ListStorHostsResponse
	20, // 52: disegrpc.DISE.GetStorHost:output_type -> disegrpc.GetStorHostResponse
	22, // 53: disegrpc.DISE.AddVGToPool:output_type -> disegrpc.AddVGResponse
	24, // 54: disegrpc.DISE.RemoveVGFromPool:output_type -> disegrpc.RemoveVGResponse
	26, // 55: disegrpc.DISE.ListVGsInPool:output_type -> disegrpc.ListVGsResponse
	28, // 56: disegrpc.DISE.GetVGFromPool:output_type -> disegrpc.GetVGResponse
	38, // 57: disegrpc.DISE.CreateOneCtrMulBlkDev:output_type -> disegrpc.CreateOneCtrMulBlkDevResponse
	40, // 58: disegrpc.DISE.DeleteOneCtrMulBlkDev:output_type -> disegrpc.DeleteOneCtrMulBlkDevResponse
	43, // [43:59] is the sub-list for method output_type
	27, // [27:43] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_disegrpc_proto_init() }
func file_disegrpc_proto_init() {
	if File_disegrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_disegrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVolumesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVolumesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQoSOfVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQoSOfVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQoSOfVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQoSOfVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStorHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStorHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStorHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStorHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStorHostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStorHostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVGRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVGResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveVGRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveVGResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVGsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVGsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVGRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVGResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QoS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stor_Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Install_Icse_Agent_To_Stor_Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NVMf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneControllerMultiBlkDev); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOneCtrMulBlkDevRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOneCtrMulBlkDevResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOneCtrMulBlkDevRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOneCtrMulBlkDevResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume_Parameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disegrpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume_Parameters_VGSelectPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_disegrpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_disegrpc_proto_goTypes,
		DependencyIndexes: file_disegrpc_proto_depIdxs,
		EnumInfos:         file_disegrpc_proto_enumTypes,
		MessageInfos:      file_disegrpc_proto_msgTypes,
	}.Build()
	File_disegrpc_proto = out.File
	file_disegrpc_proto_rawDesc = nil
	file_disegrpc_proto_goTypes = nil
	file_disegrpc_proto_depIdxs = nil
}
