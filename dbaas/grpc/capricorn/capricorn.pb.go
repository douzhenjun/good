// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: capricorn.proto

package capricorn

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetRandomPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid       string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	OperUsername string `protobuf:"bytes,2,opt,name=operUsername,proto3" json:"operUsername,omitempty"`
}

func (x *GetRandomPasswordRequest) Reset() {
	*x = GetRandomPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandomPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandomPasswordRequest) ProtoMessage() {}

func (x *GetRandomPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandomPasswordRequest.ProtoReflect.Descriptor instead.
func (*GetRandomPasswordRequest) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{0}
}

func (x *GetRandomPasswordRequest) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *GetRandomPasswordRequest) GetOperUsername() string {
	if x != nil {
		return x.OperUsername
	}
	return ""
}

type GetRoleResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoleName string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
}

func (x *GetRoleResourcesRequest) Reset() {
	*x = GetRoleResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleResourcesRequest) ProtoMessage() {}

func (x *GetRoleResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleResourcesRequest.ProtoReflect.Descriptor instead.
func (*GetRoleResourcesRequest) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{1}
}

func (x *GetRoleResourcesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetRoleResourcesRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type OperateUserResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OperUsername string `protobuf:"bytes,2,opt,name=operUsername,proto3" json:"operUsername,omitempty"`
}

func (x *OperateUserResourcesRequest) Reset() {
	*x = OperateUserResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateUserResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateUserResourcesRequest) ProtoMessage() {}

func (x *OperateUserResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateUserResourcesRequest.ProtoReflect.Descriptor instead.
func (*OperateUserResourcesRequest) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{2}
}

func (x *OperateUserResourcesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OperateUserResourcesRequest) GetOperUsername() string {
	if x != nil {
		return x.OperUsername
	}
	return ""
}

type DeleteUserResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OperUsername string `protobuf:"bytes,2,opt,name=operUsername,proto3" json:"operUsername,omitempty"`
}

func (x *DeleteUserResourcesRequest) Reset() {
	*x = DeleteUserResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResourcesRequest) ProtoMessage() {}

func (x *DeleteUserResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResourcesRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserResourcesRequest) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteUserResourcesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteUserResourcesRequest) GetOperUsername() string {
	if x != nil {
		return x.OperUsername
	}
	return ""
}

type UpdateUserResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OperUsername   string `protobuf:"bytes,2,opt,name=operUsername,proto3" json:"operUsername,omitempty"`
	Username       string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password       string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	OrganizationId string `protobuf:"bytes,5,opt,name=organizationId,proto3" json:"organizationId,omitempty"`
	IsManager      string `protobuf:"bytes,6,opt,name=isManager,proto3" json:"isManager,omitempty"`
	RoleId         string `protobuf:"bytes,7,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *UpdateUserResourcesRequest) Reset() {
	*x = UpdateUserResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResourcesRequest) ProtoMessage() {}

func (x *UpdateUserResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResourcesRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserResourcesRequest) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserResourcesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUserResourcesRequest) GetOperUsername() string {
	if x != nil {
		return x.OperUsername
	}
	return ""
}

func (x *UpdateUserResourcesRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateUserResourcesRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateUserResourcesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateUserResourcesRequest) GetIsManager() string {
	if x != nil {
		return x.IsManager
	}
	return ""
}

func (x *UpdateUserResourcesRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type AddUserResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId         string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	OperUsername   string `protobuf:"bytes,2,opt,name=operUsername,proto3" json:"operUsername,omitempty"`
	Username       string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password       string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	OrganizationId string `protobuf:"bytes,5,opt,name=organizationId,proto3" json:"organizationId,omitempty"`
	IsManager      string `protobuf:"bytes,6,opt,name=isManager,proto3" json:"isManager,omitempty"`
}

func (x *AddUserResourcesRequest) Reset() {
	*x = AddUserResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserResourcesRequest) ProtoMessage() {}

func (x *AddUserResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserResourcesRequest.ProtoReflect.Descriptor instead.
func (*AddUserResourcesRequest) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{5}
}

func (x *AddUserResourcesRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AddUserResourcesRequest) GetOperUsername() string {
	if x != nil {
		return x.OperUsername
	}
	return ""
}

func (x *AddUserResourcesRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddUserResourcesRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserResourcesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AddUserResourcesRequest) GetIsManager() string {
	if x != nil {
		return x.IsManager
	}
	return ""
}

type GetUserResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Tag      string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *GetUserResourcesRequest) Reset() {
	*x = GetUserResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResourcesRequest) ProtoMessage() {}

func (x *GetUserResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResourcesRequest.ProtoReflect.Descriptor instead.
func (*GetUserResourcesRequest) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserResourcesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetUserResourcesRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserResourcesRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errorno    int32  `protobuf:"varint,1,opt,name=errorno,proto3" json:"errorno,omitempty"`
	ErrorMsgEn string `protobuf:"bytes,2,opt,name=error_msg_en,json=errorMsgEn,proto3" json:"error_msg_en,omitempty"`
	ErrorMsgZh string `protobuf:"bytes,3,opt,name=error_msg_zh,json=errorMsgZh,proto3" json:"error_msg_zh,omitempty"`
	Data       string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{7}
}

func (x *Response) GetErrorno() int32 {
	if x != nil {
		return x.Errorno
	}
	return 0
}

func (x *Response) GetErrorMsgEn() string {
	if x != nil {
		return x.ErrorMsgEn
	}
	return ""
}

func (x *Response) GetErrorMsgZh() string {
	if x != nil {
		return x.ErrorMsgZh
	}
	return ""
}

func (x *Response) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type MsgModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *MsgModule) Reset() {
	*x = MsgModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgModule) ProtoMessage() {}

func (x *MsgModule) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgModule.ProtoReflect.Descriptor instead.
func (*MsgModule) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{8}
}

func (x *MsgModule) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{9}
}

func (x *UserInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName string `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	Parameter  string `protobuf:"bytes,2,opt,name=parameter,proto3" json:"parameter,omitempty"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{10}
}

func (x *Msg) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *Msg) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

type Res struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Res) Reset() {
	*x = Res{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{11}
}

func (x *Res) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Res) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type UserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
}

func (x *UserId) Reset() {
	*x = UserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserId) ProtoMessage() {}

func (x *UserId) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserId.ProtoReflect.Descriptor instead.
func (*UserId) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{12}
}

func (x *UserId) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

type UserTagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usertag string `protobuf:"bytes,1,opt,name=usertag,proto3" json:"usertag,omitempty"`
}

func (x *UserTagInfo) Reset() {
	*x = UserTagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capricorn_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTagInfo) ProtoMessage() {}

func (x *UserTagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_capricorn_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTagInfo.ProtoReflect.Descriptor instead.
func (*UserTagInfo) Descriptor() ([]byte, []int) {
	return file_capricorn_proto_rawDescGZIP(), []int{13}
}

func (x *UserTagInfo) GetUsertag() string {
	if x != nil {
		return x.Usertag
	}
	return ""
}

var File_capricorn_proto protoreflect.FileDescriptor

var file_capricorn_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x22, 0x56, 0x0a, 0x18,
	0x67, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x1b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50,
	0x0a, 0x1a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xe6, 0x01, 0x0a, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x17, 0x61, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22,
	0x57, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x7c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x6e, 0x6f, 0x12, 0x20,
	0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x45, 0x6e,
	0x12, 0x20, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x7a, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x5a, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x1e, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x22, 0x35, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x20, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x74, 0x61, 0x67, 0x32, 0xf0, 0x05, 0x0a, 0x09, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72,
	0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x12, 0x0e,
	0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x6d, 0x73, 0x67, 0x1a, 0x0e,
	0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x6d, 0x73, 0x67, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x13, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72,
	0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x11, 0x2e, 0x63, 0x61, 0x70,
	0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x16, 0x2e,
	0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x61,
	0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x70,
	0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x63,
	0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x13, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x25, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x69,
	0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63,
	0x6f, 0x72, 0x6e, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x70,
	0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x70,
	0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_capricorn_proto_rawDescOnce sync.Once
	file_capricorn_proto_rawDescData = file_capricorn_proto_rawDesc
)

func file_capricorn_proto_rawDescGZIP() []byte {
	file_capricorn_proto_rawDescOnce.Do(func() {
		file_capricorn_proto_rawDescData = protoimpl.X.CompressGZIP(file_capricorn_proto_rawDescData)
	})
	return file_capricorn_proto_rawDescData
}

var file_capricorn_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_capricorn_proto_goTypes = []interface{}{
	(*GetRandomPasswordRequest)(nil),    // 0: capricorn.getRandomPasswordRequest
	(*GetRoleResourcesRequest)(nil),     // 1: capricorn.getRoleResourcesRequest
	(*OperateUserResourcesRequest)(nil), // 2: capricorn.operateUserResourcesRequest
	(*DeleteUserResourcesRequest)(nil),  // 3: capricorn.deleteUserResourcesRequest
	(*UpdateUserResourcesRequest)(nil),  // 4: capricorn.updateUserResourcesRequest
	(*AddUserResourcesRequest)(nil),     // 5: capricorn.addUserResourcesRequest
	(*GetUserResourcesRequest)(nil),     // 6: capricorn.getUserResourcesRequest
	(*Response)(nil),                    // 7: capricorn.response
	(*MsgModule)(nil),                   // 8: capricorn.msgModule
	(*UserInfo)(nil),                    // 9: capricorn.userInfo
	(*Msg)(nil),                         // 10: capricorn.msg
	(*Res)(nil),                         // 11: capricorn.res
	(*UserId)(nil),                      // 12: capricorn.userId
	(*UserTagInfo)(nil),                 // 13: capricorn.userTagInfo
}
var file_capricorn_proto_depIdxs = []int32{
	10, // 0: capricorn.capricorn.capricorn:input_type -> capricorn.msg
	8,  // 1: capricorn.capricorn.getUserInfo:input_type -> capricorn.msgModule
	12, // 2: capricorn.capricorn.getUserTag:input_type -> capricorn.userId
	6,  // 3: capricorn.capricorn.getUserResources:input_type -> capricorn.getUserResourcesRequest
	5,  // 4: capricorn.capricorn.addUserResources:input_type -> capricorn.addUserResourcesRequest
	4,  // 5: capricorn.capricorn.updateUserResources:input_type -> capricorn.updateUserResourcesRequest
	3,  // 6: capricorn.capricorn.deleteUserResources:input_type -> capricorn.deleteUserResourcesRequest
	2,  // 7: capricorn.capricorn.operateUserResources:input_type -> capricorn.operateUserResourcesRequest
	1,  // 8: capricorn.capricorn.getRoleResources:input_type -> capricorn.getRoleResourcesRequest
	0,  // 9: capricorn.capricorn.getRandomPassword:input_type -> capricorn.getRandomPasswordRequest
	11, // 10: capricorn.capricorn.capricorn:output_type -> capricorn.res
	9,  // 11: capricorn.capricorn.getUserInfo:output_type -> capricorn.userInfo
	13, // 12: capricorn.capricorn.getUserTag:output_type -> capricorn.userTagInfo
	7,  // 13: capricorn.capricorn.getUserResources:output_type -> capricorn.response
	7,  // 14: capricorn.capricorn.addUserResources:output_type -> capricorn.response
	7,  // 15: capricorn.capricorn.updateUserResources:output_type -> capricorn.response
	7,  // 16: capricorn.capricorn.deleteUserResources:output_type -> capricorn.response
	7,  // 17: capricorn.capricorn.operateUserResources:output_type -> capricorn.response
	7,  // 18: capricorn.capricorn.getRoleResources:output_type -> capricorn.response
	7,  // 19: capricorn.capricorn.getRandomPassword:output_type -> capricorn.response
	10, // [10:20] is the sub-list for method output_type
	0,  // [0:10] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_capricorn_proto_init() }
func file_capricorn_proto_init() {
	if File_capricorn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_capricorn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRandomPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateUserResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capricorn_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_capricorn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_capricorn_proto_goTypes,
		DependencyIndexes: file_capricorn_proto_depIdxs,
		MessageInfos:      file_capricorn_proto_msgTypes,
	}.Build()
	File_capricorn_proto = out.File
	file_capricorn_proto_rawDesc = nil
	file_capricorn_proto_goTypes = nil
	file_capricorn_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CapricornClient is the client API for Capricorn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CapricornClient interface {
	Capricorn(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Res, error)
	GetUserInfo(ctx context.Context, in *MsgModule, opts ...grpc.CallOption) (*UserInfo, error)
	GetUserTag(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserTagInfo, error)
	//获取用户信息
	GetUserResources(ctx context.Context, in *GetUserResourcesRequest, opts ...grpc.CallOption) (*Response, error)
	//新增用户信息
	AddUserResources(ctx context.Context, in *AddUserResourcesRequest, opts ...grpc.CallOption) (*Response, error)
	//修改用户信息
	UpdateUserResources(ctx context.Context, in *UpdateUserResourcesRequest, opts ...grpc.CallOption) (*Response, error)
	//删除用户信息
	DeleteUserResources(ctx context.Context, in *DeleteUserResourcesRequest, opts ...grpc.CallOption) (*Response, error)
	//启用/禁用用户信息
	OperateUserResources(ctx context.Context, in *OperateUserResourcesRequest, opts ...grpc.CallOption) (*Response, error)
	//获取角色信息
	GetRoleResources(ctx context.Context, in *GetRoleResourcesRequest, opts ...grpc.CallOption) (*Response, error)
	//重置用户密码
	GetRandomPassword(ctx context.Context, in *GetRandomPasswordRequest, opts ...grpc.CallOption) (*Response, error)
}

type capricornClient struct {
	cc grpc.ClientConnInterface
}

func NewCapricornClient(cc grpc.ClientConnInterface) CapricornClient {
	return &capricornClient{cc}
}

func (c *capricornClient) Capricorn(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/capricorn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *capricornClient) GetUserInfo(ctx context.Context, in *MsgModule, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/getUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *capricornClient) GetUserTag(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserTagInfo, error) {
	out := new(UserTagInfo)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/getUserTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *capricornClient) GetUserResources(ctx context.Context, in *GetUserResourcesRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/getUserResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *capricornClient) AddUserResources(ctx context.Context, in *AddUserResourcesRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/addUserResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *capricornClient) UpdateUserResources(ctx context.Context, in *UpdateUserResourcesRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/updateUserResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *capricornClient) DeleteUserResources(ctx context.Context, in *DeleteUserResourcesRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/deleteUserResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *capricornClient) OperateUserResources(ctx context.Context, in *OperateUserResourcesRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/operateUserResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *capricornClient) GetRoleResources(ctx context.Context, in *GetRoleResourcesRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/getRoleResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *capricornClient) GetRandomPassword(ctx context.Context, in *GetRandomPasswordRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/capricorn.capricorn/getRandomPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CapricornServer is the server API for Capricorn service.
type CapricornServer interface {
	Capricorn(context.Context, *Msg) (*Res, error)
	GetUserInfo(context.Context, *MsgModule) (*UserInfo, error)
	GetUserTag(context.Context, *UserId) (*UserTagInfo, error)
	//获取用户信息
	GetUserResources(context.Context, *GetUserResourcesRequest) (*Response, error)
	//新增用户信息
	AddUserResources(context.Context, *AddUserResourcesRequest) (*Response, error)
	//修改用户信息
	UpdateUserResources(context.Context, *UpdateUserResourcesRequest) (*Response, error)
	//删除用户信息
	DeleteUserResources(context.Context, *DeleteUserResourcesRequest) (*Response, error)
	//启用/禁用用户信息
	OperateUserResources(context.Context, *OperateUserResourcesRequest) (*Response, error)
	//获取角色信息
	GetRoleResources(context.Context, *GetRoleResourcesRequest) (*Response, error)
	//重置用户密码
	GetRandomPassword(context.Context, *GetRandomPasswordRequest) (*Response, error)
}

// UnimplementedCapricornServer can be embedded to have forward compatible implementations.
type UnimplementedCapricornServer struct {
}

func (*UnimplementedCapricornServer) Capricorn(context.Context, *Msg) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Capricorn not implemented")
}
func (*UnimplementedCapricornServer) GetUserInfo(context.Context, *MsgModule) (*UserInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedCapricornServer) GetUserTag(context.Context, *UserId) (*UserTagInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTag not implemented")
}
func (*UnimplementedCapricornServer) GetUserResources(context.Context, *GetUserResourcesRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserResources not implemented")
}
func (*UnimplementedCapricornServer) AddUserResources(context.Context, *AddUserResourcesRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserResources not implemented")
}
func (*UnimplementedCapricornServer) UpdateUserResources(context.Context, *UpdateUserResourcesRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserResources not implemented")
}
func (*UnimplementedCapricornServer) DeleteUserResources(context.Context, *DeleteUserResourcesRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserResources not implemented")
}
func (*UnimplementedCapricornServer) OperateUserResources(context.Context, *OperateUserResourcesRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OperateUserResources not implemented")
}
func (*UnimplementedCapricornServer) GetRoleResources(context.Context, *GetRoleResourcesRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoleResources not implemented")
}
func (*UnimplementedCapricornServer) GetRandomPassword(context.Context, *GetRandomPasswordRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomPassword not implemented")
}

func RegisterCapricornServer(s *grpc.Server, srv CapricornServer) {
	s.RegisterService(&_Capricorn_serviceDesc, srv)
}

func _Capricorn_Capricorn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).Capricorn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/Capricorn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).Capricorn(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Capricorn_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgModule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).GetUserInfo(ctx, req.(*MsgModule))
	}
	return interceptor(ctx, in, info, handler)
}

func _Capricorn_GetUserTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).GetUserTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/GetUserTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).GetUserTag(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Capricorn_GetUserResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).GetUserResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/GetUserResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).GetUserResources(ctx, req.(*GetUserResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Capricorn_AddUserResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).AddUserResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/AddUserResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).AddUserResources(ctx, req.(*AddUserResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Capricorn_UpdateUserResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).UpdateUserResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/UpdateUserResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).UpdateUserResources(ctx, req.(*UpdateUserResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Capricorn_DeleteUserResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).DeleteUserResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/DeleteUserResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).DeleteUserResources(ctx, req.(*DeleteUserResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Capricorn_OperateUserResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OperateUserResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).OperateUserResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/OperateUserResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).OperateUserResources(ctx, req.(*OperateUserResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Capricorn_GetRoleResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).GetRoleResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/GetRoleResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).GetRoleResources(ctx, req.(*GetRoleResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Capricorn_GetRandomPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRandomPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapricornServer).GetRandomPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/capricorn.capricorn/GetRandomPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapricornServer).GetRandomPassword(ctx, req.(*GetRandomPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Capricorn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "capricorn.capricorn",
	HandlerType: (*CapricornServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "capricorn",
			Handler:    _Capricorn_Capricorn_Handler,
		},
		{
			MethodName: "getUserInfo",
			Handler:    _Capricorn_GetUserInfo_Handler,
		},
		{
			MethodName: "getUserTag",
			Handler:    _Capricorn_GetUserTag_Handler,
		},
		{
			MethodName: "getUserResources",
			Handler:    _Capricorn_GetUserResources_Handler,
		},
		{
			MethodName: "addUserResources",
			Handler:    _Capricorn_AddUserResources_Handler,
		},
		{
			MethodName: "updateUserResources",
			Handler:    _Capricorn_UpdateUserResources_Handler,
		},
		{
			MethodName: "deleteUserResources",
			Handler:    _Capricorn_DeleteUserResources_Handler,
		},
		{
			MethodName: "operateUserResources",
			Handler:    _Capricorn_OperateUserResources_Handler,
		},
		{
			MethodName: "getRoleResources",
			Handler:    _Capricorn_GetRoleResources_Handler,
		},
		{
			MethodName: "getRandomPassword",
			Handler:    _Capricorn_GetRandomPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "capricorn.proto",
}
