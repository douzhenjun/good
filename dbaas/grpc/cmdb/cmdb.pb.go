// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: cmdb.proto

package cmdb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetCommonScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize int32  `protobuf:"varint,2,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	User     string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Module   string `protobuf:"bytes,4,opt,name=module,proto3" json:"module,omitempty"`
	ApiPath  string `protobuf:"bytes,5,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
}

func (x *GetCommonScriptRequest) Reset() {
	*x = GetCommonScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommonScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommonScriptRequest) ProtoMessage() {}

func (x *GetCommonScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommonScriptRequest.ProtoReflect.Descriptor instead.
func (*GetCommonScriptRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{0}
}

func (x *GetCommonScriptRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommonScriptRequest) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *GetCommonScriptRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *GetCommonScriptRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *GetCommonScriptRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

type AddCommonScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content     string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Desc        string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Module      string `protobuf:"bytes,4,opt,name=module,proto3" json:"module,omitempty"`
	ScriptType  string `protobuf:"bytes,5,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	InputParam  string `protobuf:"bytes,6,opt,name=input_param,json=inputParam,proto3" json:"input_param,omitempty"`
	OutputParam string `protobuf:"bytes,7,opt,name=output_param,json=outputParam,proto3" json:"output_param,omitempty"`
	OrgTag      string `protobuf:"bytes,8,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`
	UserTag     string `protobuf:"bytes,9,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	Method      string `protobuf:"bytes,10,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *AddCommonScriptRequest) Reset() {
	*x = AddCommonScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommonScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommonScriptRequest) ProtoMessage() {}

func (x *AddCommonScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommonScriptRequest.ProtoReflect.Descriptor instead.
func (*AddCommonScriptRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{1}
}

func (x *AddCommonScriptRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddCommonScriptRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddCommonScriptRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddCommonScriptRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *AddCommonScriptRequest) GetScriptType() string {
	if x != nil {
		return x.ScriptType
	}
	return ""
}

func (x *AddCommonScriptRequest) GetInputParam() string {
	if x != nil {
		return x.InputParam
	}
	return ""
}

func (x *AddCommonScriptRequest) GetOutputParam() string {
	if x != nil {
		return x.OutputParam
	}
	return ""
}

func (x *AddCommonScriptRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *AddCommonScriptRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *AddCommonScriptRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type UpdateCommonScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	CommonScriptId string `protobuf:"bytes,2,opt,name=common_script_id,json=commonScriptId,proto3" json:"common_script_id,omitempty"`
	Content        string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Desc           string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Module         string `protobuf:"bytes,5,opt,name=module,proto3" json:"module,omitempty"`
	ScriptType     string `protobuf:"bytes,6,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	InputParam     string `protobuf:"bytes,7,opt,name=input_param,json=inputParam,proto3" json:"input_param,omitempty"`
	OutputParam    string `protobuf:"bytes,8,opt,name=output_param,json=outputParam,proto3" json:"output_param,omitempty"`
	OrgTag         string `protobuf:"bytes,9,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`
	UserTag        string `protobuf:"bytes,10,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	Role           string `protobuf:"bytes,11,opt,name=role,proto3" json:"role,omitempty"`
	ApiPath        string `protobuf:"bytes,12,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
	Method         string `protobuf:"bytes,13,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *UpdateCommonScriptRequest) Reset() {
	*x = UpdateCommonScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommonScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommonScriptRequest) ProtoMessage() {}

func (x *UpdateCommonScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommonScriptRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommonScriptRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCommonScriptRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetCommonScriptId() string {
	if x != nil {
		return x.CommonScriptId
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetScriptType() string {
	if x != nil {
		return x.ScriptType
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetInputParam() string {
	if x != nil {
		return x.InputParam
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetOutputParam() string {
	if x != nil {
		return x.OutputParam
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *UpdateCommonScriptRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type DeleteCommonScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	CommonScriptId string `protobuf:"bytes,2,opt,name=common_script_id,json=commonScriptId,proto3" json:"common_script_id,omitempty"`
	OrgTag         string `protobuf:"bytes,3,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`
	UserTag        string `protobuf:"bytes,4,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	Role           string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	ApiPath        string `protobuf:"bytes,6,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
}

func (x *DeleteCommonScriptRequest) Reset() {
	*x = DeleteCommonScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommonScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommonScriptRequest) ProtoMessage() {}

func (x *DeleteCommonScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommonScriptRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommonScriptRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCommonScriptRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DeleteCommonScriptRequest) GetCommonScriptId() string {
	if x != nil {
		return x.CommonScriptId
	}
	return ""
}

func (x *DeleteCommonScriptRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *DeleteCommonScriptRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *DeleteCommonScriptRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *DeleteCommonScriptRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

type GetInstApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId int32  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Module  string `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	InstId  int32  `protobuf:"varint,3,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
}

func (x *GetInstApplyRequest) Reset() {
	*x = GetInstApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstApplyRequest) ProtoMessage() {}

func (x *GetInstApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstApplyRequest.ProtoReflect.Descriptor instead.
func (*GetInstApplyRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{4}
}

func (x *GetInstApplyRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetInstApplyRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *GetInstApplyRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

type AddInstApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId string `protobuf:"bytes,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`  // 模型id 可传空字符串  多个id可用逗号隔开如‘1,2,3’
	Module  string `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`                   // 应用cmdb资源的模块名称如'gemini' 必传
	InstId  string `protobuf:"bytes,3,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`     // cmdb 实例id  多个id可用逗号隔开如‘1,2,3’
	Type    string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                       // 模块具体应用cmdb资源的应用或项目名称
	ApplyId int32  `protobuf:"varint,5,opt,name=apply_id,json=applyId,proto3" json:"apply_id,omitempty"` // 模块具体应用cmdb资源的id  必传
	Desc    string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *AddInstApplyRequest) Reset() {
	*x = AddInstApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInstApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstApplyRequest) ProtoMessage() {}

func (x *AddInstApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstApplyRequest.ProtoReflect.Descriptor instead.
func (*AddInstApplyRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{5}
}

func (x *AddInstApplyRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *AddInstApplyRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *AddInstApplyRequest) GetInstId() string {
	if x != nil {
		return x.InstId
	}
	return ""
}

func (x *AddInstApplyRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AddInstApplyRequest) GetApplyId() int32 {
	if x != nil {
		return x.ApplyId
	}
	return 0
}

func (x *AddInstApplyRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// module+type+apply_id   为具体使用cmdb资源的唯一标识
type DeleteInstApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//  string model_id = 1;
	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"` //应用cmdb资源的模块名称如'gemini' 必传
	//  string inst_id= 3;
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                       // 模块具体应用cmdb资源的应用或项目名称
	ApplyId int32  `protobuf:"varint,3,opt,name=apply_id,json=applyId,proto3" json:"apply_id,omitempty"` // 模块具体应用cmdb资源的id  必传
}

func (x *DeleteInstApplyRequest) Reset() {
	*x = DeleteInstApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstApplyRequest) ProtoMessage() {}

func (x *DeleteInstApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstApplyRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstApplyRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteInstApplyRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *DeleteInstApplyRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeleteInstApplyRequest) GetApplyId() int32 {
	if x != nil {
		return x.ApplyId
	}
	return 0
}

type GetDeployHostinstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelCode       string `protobuf:"bytes,1,opt,name=model_code,json=modelCode,proto3" json:"model_code,omitempty"`
	HostIds         string `protobuf:"bytes,2,opt,name=host_ids,json=hostIds,proto3" json:"host_ids,omitempty"`
	Status          string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                          //status=all 时获取所有部署agent的主机信息，不传默认获取部署成功的主机信息
	FilterCondition string `protobuf:"bytes,4,opt,name=filter_condition,json=filterCondition,proto3" json:"filter_condition,omitempty"` //过滤条件
	User            int32  `protobuf:"varint,5,opt,name=user,proto3" json:"user,omitempty"`                                             //userid  cookies里获取
	Module          string `protobuf:"bytes,6,opt,name=module,proto3" json:"module,omitempty"`                                          //模块名称
}

func (x *GetDeployHostinstRequest) Reset() {
	*x = GetDeployHostinstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeployHostinstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployHostinstRequest) ProtoMessage() {}

func (x *GetDeployHostinstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployHostinstRequest.ProtoReflect.Descriptor instead.
func (*GetDeployHostinstRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{7}
}

func (x *GetDeployHostinstRequest) GetModelCode() string {
	if x != nil {
		return x.ModelCode
	}
	return ""
}

func (x *GetDeployHostinstRequest) GetHostIds() string {
	if x != nil {
		return x.HostIds
	}
	return ""
}

func (x *GetDeployHostinstRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDeployHostinstRequest) GetFilterCondition() string {
	if x != nil {
		return x.FilterCondition
	}
	return ""
}

func (x *GetDeployHostinstRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *GetDeployHostinstRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type GetResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            int32  `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`                                             //userid  查全部userid = 1
	ModelId         int32  `protobuf:"varint,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`                        //模型id
	Module          string `protobuf:"bytes,3,opt,name=module,proto3" json:"module,omitempty"`                                          //模块名称
	ApiPath         string `protobuf:"bytes,4,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`                         //请求路径，不填
	InstId          int32  `protobuf:"varint,5,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`                           //实例id
	Page            string `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`                                              //页数
	Pagesize        string `protobuf:"bytes,7,opt,name=pagesize,proto3" json:"pagesize,omitempty"`                                      //每页数量
	ModelCode       string `protobuf:"bytes,8,opt,name=model_code,json=modelCode,proto3" json:"model_code,omitempty"`                   //模型code
	FilterCondition string `protobuf:"bytes,9,opt,name=filter_condition,json=filterCondition,proto3" json:"filter_condition,omitempty"` //过滤条件
	AttrId          string `protobuf:"bytes,10,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`                           //模型字段id  多个可用,隔开
}

func (x *GetResourcesRequest) Reset() {
	*x = GetResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesRequest) ProtoMessage() {}

func (x *GetResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesRequest.ProtoReflect.Descriptor instead.
func (*GetResourcesRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{8}
}

func (x *GetResourcesRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *GetResourcesRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetResourcesRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *GetResourcesRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *GetResourcesRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *GetResourcesRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *GetResourcesRequest) GetPagesize() string {
	if x != nil {
		return x.Pagesize
	}
	return ""
}

func (x *GetResourcesRequest) GetModelCode() string {
	if x != nil {
		return x.ModelCode
	}
	return ""
}

func (x *GetResourcesRequest) GetFilterCondition() string {
	if x != nil {
		return x.FilterCondition
	}
	return ""
}

func (x *GetResourcesRequest) GetAttrId() string {
	if x != nil {
		return x.AttrId
	}
	return ""
}

type GetObjectInstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objectinst string `protobuf:"bytes,1,opt,name=objectinst,proto3" json:"objectinst,omitempty"`
}

func (x *GetObjectInstRequest) Reset() {
	*x = GetObjectInstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectInstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectInstRequest) ProtoMessage() {}

func (x *GetObjectInstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectInstRequest.ProtoReflect.Descriptor instead.
func (*GetObjectInstRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{9}
}

func (x *GetObjectInstRequest) GetObjectinst() string {
	if x != nil {
		return x.Objectinst
	}
	return ""
}

type GetModelFieldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId         int32  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`                        //模型id
	ModelCode       string `protobuf:"bytes,2,opt,name=model_code,json=modelCode,proto3" json:"model_code,omitempty"`                   //模型code
	InstId          int32  `protobuf:"varint,3,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`                           //实例id
	Type            string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                              //标准定义字段
	AttrId          int32  `protobuf:"varint,5,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`                           //模型字段id
	CollectionIndex string `protobuf:"bytes,6,opt,name=collection_index,json=collectionIndex,proto3" json:"collection_index,omitempty"` //采集指标类型：default:用户输入类、static:状态类、dynamic:图标类、action:动作类
	AttrName        string `protobuf:"bytes,7,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`                      //模型字段name
}

func (x *GetModelFieldRequest) Reset() {
	*x = GetModelFieldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelFieldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelFieldRequest) ProtoMessage() {}

func (x *GetModelFieldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelFieldRequest.ProtoReflect.Descriptor instead.
func (*GetModelFieldRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{10}
}

func (x *GetModelFieldRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetModelFieldRequest) GetModelCode() string {
	if x != nil {
		return x.ModelCode
	}
	return ""
}

func (x *GetModelFieldRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *GetModelFieldRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetModelFieldRequest) GetAttrId() int32 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *GetModelFieldRequest) GetCollectionIndex() string {
	if x != nil {
		return x.CollectionIndex
	}
	return ""
}

func (x *GetModelFieldRequest) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

type GetModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagesize int32 `protobuf:"varint,1,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Page     int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetModuleRequest) Reset() {
	*x = GetModuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModuleRequest) ProtoMessage() {}

func (x *GetModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModuleRequest.ProtoReflect.Descriptor instead.
func (*GetModuleRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{11}
}

func (x *GetModuleRequest) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *GetModuleRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagesize int32  `protobuf:"varint,1,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetModelRequest) Reset() {
	*x = GetModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelRequest) ProtoMessage() {}

func (x *GetModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelRequest.ProtoReflect.Descriptor instead.
func (*GetModelRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{12}
}

func (x *GetModelRequest) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *GetModelRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetModelRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetUsertagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstId int32 `protobuf:"varint,1,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
}

func (x *GetUsertagRequest) Reset() {
	*x = GetUsertagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsertagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsertagRequest) ProtoMessage() {}

func (x *GetUsertagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsertagRequest.ProtoReflect.Descriptor instead.
func (*GetUsertagRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{13}
}

func (x *GetUsertagRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

type GetUsertagInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTag string `protobuf:"bytes,1,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
}

func (x *GetUsertagInstanceRequest) Reset() {
	*x = GetUsertagInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsertagInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsertagInstanceRequest) ProtoMessage() {}

func (x *GetUsertagInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsertagInstanceRequest.ProtoReflect.Descriptor instead.
func (*GetUsertagInstanceRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{14}
}

func (x *GetUsertagInstanceRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

type Commonres struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Commonres) Reset() {
	*x = Commonres{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Commonres) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commonres) ProtoMessage() {}

func (x *Commonres) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commonres.ProtoReflect.Descriptor instead.
func (*Commonres) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{15}
}

func (x *Commonres) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetHostinstByModelinstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId int32 `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	InstId  int32 `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
}

func (x *GetHostinstByModelinstRequest) Reset() {
	*x = GetHostinstByModelinstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostinstByModelinstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostinstByModelinstRequest) ProtoMessage() {}

func (x *GetHostinstByModelinstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostinstByModelinstRequest.ProtoReflect.Descriptor instead.
func (*GetHostinstByModelinstRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{16}
}

func (x *GetHostinstByModelinstRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetHostinstByModelinstRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

type GetHostinstByModelinstResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetHostinstByModelinstResponse) Reset() {
	*x = GetHostinstByModelinstResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostinstByModelinstResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostinstByModelinstResponse) ProtoMessage() {}

func (x *GetHostinstByModelinstResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostinstByModelinstResponse.ProtoReflect.Descriptor instead.
func (*GetHostinstByModelinstResponse) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{17}
}

func (x *GetHostinstByModelinstResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetInstsByHostinstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostinstId int32 `protobuf:"varint,1,opt,name=hostinst_id,json=hostinstId,proto3" json:"hostinst_id,omitempty"`
}

func (x *GetInstsByHostinstRequest) Reset() {
	*x = GetInstsByHostinstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstsByHostinstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstsByHostinstRequest) ProtoMessage() {}

func (x *GetInstsByHostinstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstsByHostinstRequest.ProtoReflect.Descriptor instead.
func (*GetInstsByHostinstRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{18}
}

func (x *GetInstsByHostinstRequest) GetHostinstId() int32 {
	if x != nil {
		return x.HostinstId
	}
	return 0
}

type GetInstsByHostinstResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetInstsByHostinstResponse) Reset() {
	*x = GetInstsByHostinstResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstsByHostinstResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstsByHostinstResponse) ProtoMessage() {}

func (x *GetInstsByHostinstResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstsByHostinstResponse.ProtoReflect.Descriptor instead.
func (*GetInstsByHostinstResponse) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{19}
}

func (x *GetInstsByHostinstResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Res struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errorno    int32  `protobuf:"varint,1,opt,name=errorno,proto3" json:"errorno,omitempty"`
	ErrorMsgEn string `protobuf:"bytes,2,opt,name=error_msg_en,json=errorMsgEn,proto3" json:"error_msg_en,omitempty"`
	ErrorMsgZh string `protobuf:"bytes,3,opt,name=error_msg_zh,json=errorMsgZh,proto3" json:"error_msg_zh,omitempty"`
	Data       string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Res) Reset() {
	*x = Res{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{20}
}

func (x *Res) GetErrorno() int32 {
	if x != nil {
		return x.Errorno
	}
	return 0
}

func (x *Res) GetErrorMsgEn() string {
	if x != nil {
		return x.ErrorMsgEn
	}
	return ""
}

func (x *Res) GetErrorMsgZh() string {
	if x != nil {
		return x.ErrorMsgZh
	}
	return ""
}

func (x *Res) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetHostinstsnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId int32 `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	InstId  int32 `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
}

func (x *GetHostinstsnRequest) Reset() {
	*x = GetHostinstsnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostinstsnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostinstsnRequest) ProtoMessage() {}

func (x *GetHostinstsnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostinstsnRequest.ProtoReflect.Descriptor instead.
func (*GetHostinstsnRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{21}
}

func (x *GetHostinstsnRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetHostinstsnRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{22}
}

type GetUnitListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUnitListResponse) Reset() {
	*x = GetUnitListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnitListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnitListResponse) ProtoMessage() {}

func (x *GetUnitListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnitListResponse.ProtoReflect.Descriptor instead.
func (*GetUnitListResponse) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{23}
}

func (x *GetUnitListResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetIconListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetIconListResponse) Reset() {
	*x = GetIconListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIconListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIconListResponse) ProtoMessage() {}

func (x *GetIconListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIconListResponse.ProtoReflect.Descriptor instead.
func (*GetIconListResponse) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{24}
}

func (x *GetIconListResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetModelStandardFieldRelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId       int32  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Standardfield string `protobuf:"bytes,2,opt,name=standardfield,proto3" json:"standardfield,omitempty"`
}

func (x *GetModelStandardFieldRelRequest) Reset() {
	*x = GetModelStandardFieldRelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelStandardFieldRelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelStandardFieldRelRequest) ProtoMessage() {}

func (x *GetModelStandardFieldRelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelStandardFieldRelRequest.ProtoReflect.Descriptor instead.
func (*GetModelStandardFieldRelRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{25}
}

func (x *GetModelStandardFieldRelRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetModelStandardFieldRelRequest) GetStandardfield() string {
	if x != nil {
		return x.Standardfield
	}
	return ""
}

type GetModelStandardFieldRelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetModelStandardFieldRelResponse) Reset() {
	*x = GetModelStandardFieldRelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelStandardFieldRelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelStandardFieldRelResponse) ProtoMessage() {}

func (x *GetModelStandardFieldRelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelStandardFieldRelResponse.ProtoReflect.Descriptor instead.
func (*GetModelStandardFieldRelResponse) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{26}
}

func (x *GetModelStandardFieldRelResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetModelNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstId int32 `protobuf:"varint,1,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
}

func (x *GetModelNameRequest) Reset() {
	*x = GetModelNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelNameRequest) ProtoMessage() {}

func (x *GetModelNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelNameRequest.ProtoReflect.Descriptor instead.
func (*GetModelNameRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{27}
}

func (x *GetModelNameRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

type GetModelNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId   int32  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	ModelName string `protobuf:"bytes,2,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
}

func (x *GetModelNameResponse) Reset() {
	*x = GetModelNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelNameResponse) ProtoMessage() {}

func (x *GetModelNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelNameResponse.ProtoReflect.Descriptor instead.
func (*GetModelNameResponse) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{28}
}

func (x *GetModelNameResponse) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetModelNameResponse) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

type AddInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ModelId    int32  `protobuf:"varint,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	ModelCode  string `protobuf:"bytes,3,opt,name=model_code,json=modelCode,proto3" json:"model_code,omitempty"`
	ModuleName string `protobuf:"bytes,4,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	InstAreaId int32  `protobuf:"varint,5,opt,name=inst_area_id,json=instAreaId,proto3" json:"inst_area_id,omitempty"`
	Field      string `protobuf:"bytes,6,opt,name=field,proto3" json:"field,omitempty"`
	OrgTag     string `protobuf:"bytes,7,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`
	UserTag    string `protobuf:"bytes,8,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
}

func (x *AddInstanceRequest) Reset() {
	*x = AddInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstanceRequest) ProtoMessage() {}

func (x *AddInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstanceRequest.ProtoReflect.Descriptor instead.
func (*AddInstanceRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{29}
}

func (x *AddInstanceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddInstanceRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *AddInstanceRequest) GetModelCode() string {
	if x != nil {
		return x.ModelCode
	}
	return ""
}

func (x *AddInstanceRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *AddInstanceRequest) GetInstAreaId() int32 {
	if x != nil {
		return x.InstAreaId
	}
	return 0
}

func (x *AddInstanceRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *AddInstanceRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *AddInstanceRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

type UpdateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstId     int32  `protobuf:"varint,1,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ModelId    int32  `protobuf:"varint,3,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	ModelCode  string `protobuf:"bytes,4,opt,name=model_code,json=modelCode,proto3" json:"model_code,omitempty"`
	ModuleName string `protobuf:"bytes,5,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	InstAreaId int32  `protobuf:"varint,6,opt,name=inst_area_id,json=instAreaId,proto3" json:"inst_area_id,omitempty"`
	Field      string `protobuf:"bytes,7,opt,name=field,proto3" json:"field,omitempty"`
	OrgTag     string `protobuf:"bytes,8,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`
	UserTag    string `protobuf:"bytes,9,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	Userid     string `protobuf:"bytes,10,opt,name=userid,proto3" json:"userid,omitempty"`
	Role       string `protobuf:"bytes,11,opt,name=role,proto3" json:"role,omitempty"`
	ApiPath    string `protobuf:"bytes,12,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
}

func (x *UpdateInstanceRequest) Reset() {
	*x = UpdateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceRequest) ProtoMessage() {}

func (x *UpdateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateInstanceRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *UpdateInstanceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateInstanceRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *UpdateInstanceRequest) GetModelCode() string {
	if x != nil {
		return x.ModelCode
	}
	return ""
}

func (x *UpdateInstanceRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *UpdateInstanceRequest) GetInstAreaId() int32 {
	if x != nil {
		return x.InstAreaId
	}
	return 0
}

func (x *UpdateInstanceRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *UpdateInstanceRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *UpdateInstanceRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *UpdateInstanceRequest) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *UpdateInstanceRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UpdateInstanceRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

type DeleteInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid  string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	InstId  int32  `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	OrgTag  string `protobuf:"bytes,3,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`
	UserTag string `protobuf:"bytes,4,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	Role    string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	ApiPath string `protobuf:"bytes,6,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
}

func (x *DeleteInstanceRequest) Reset() {
	*x = DeleteInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceRequest) ProtoMessage() {}

func (x *DeleteInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstanceRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteInstanceRequest) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *DeleteInstanceRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *DeleteInstanceRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *DeleteInstanceRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *DeleteInstanceRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *DeleteInstanceRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

type RelateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid       string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	InstId       int32  `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	RalateInstId string `protobuf:"bytes,3,opt,name=ralate_inst_id,json=ralateInstId,proto3" json:"ralate_inst_id,omitempty"`
	Operation    string `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	OrgTag       string `protobuf:"bytes,5,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`
	UserTag      string `protobuf:"bytes,6,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	Role         string `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	ApiPath      string `protobuf:"bytes,8,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
}

func (x *RelateInstanceRequest) Reset() {
	*x = RelateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateInstanceRequest) ProtoMessage() {}

func (x *RelateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateInstanceRequest.ProtoReflect.Descriptor instead.
func (*RelateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{32}
}

func (x *RelateInstanceRequest) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *RelateInstanceRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *RelateInstanceRequest) GetRalateInstId() string {
	if x != nil {
		return x.RalateInstId
	}
	return ""
}

func (x *RelateInstanceRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *RelateInstanceRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *RelateInstanceRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *RelateInstanceRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RelateInstanceRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

type GetDynamicAttrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstId  int32  `protobuf:"varint,1,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	ModelId int32  `protobuf:"varint,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	AttrId  int32  `protobuf:"varint,3,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`
	UserTag string `protobuf:"bytes,4,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"` //采集项使用  root user_tag=AAAA  需转化为 user_tag=ALL
}

func (x *GetDynamicAttrRequest) Reset() {
	*x = GetDynamicAttrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDynamicAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDynamicAttrRequest) ProtoMessage() {}

func (x *GetDynamicAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDynamicAttrRequest.ProtoReflect.Descriptor instead.
func (*GetDynamicAttrRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{33}
}

func (x *GetDynamicAttrRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *GetDynamicAttrRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetDynamicAttrRequest) GetAttrId() int32 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *GetDynamicAttrRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

type GetRelatedInstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelCode       string `protobuf:"bytes,1,opt,name=model_code,json=modelCode,proto3" json:"model_code,omitempty"`
	InstId          int32  `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	FilterCondition string `protobuf:"bytes,3,opt,name=filter_condition,json=filterCondition,proto3" json:"filter_condition,omitempty"` //过滤条件
	User            int32  `protobuf:"varint,4,opt,name=user,proto3" json:"user,omitempty"`                                             //userid  cookies里获取
	Module          string `protobuf:"bytes,5,opt,name=module,proto3" json:"module,omitempty"`                                          //模块名称
	ModelId         int32  `protobuf:"varint,6,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`                        //model_id  查实例关联的模型id
	Type            string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                                              //all  查看所有与inst_id关联的model_id下模型实例，related 查看已关联实例信息
}

func (x *GetRelatedInstRequest) Reset() {
	*x = GetRelatedInstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelatedInstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelatedInstRequest) ProtoMessage() {}

func (x *GetRelatedInstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelatedInstRequest.ProtoReflect.Descriptor instead.
func (*GetRelatedInstRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{34}
}

func (x *GetRelatedInstRequest) GetModelCode() string {
	if x != nil {
		return x.ModelCode
	}
	return ""
}

func (x *GetRelatedInstRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *GetRelatedInstRequest) GetFilterCondition() string {
	if x != nil {
		return x.FilterCondition
	}
	return ""
}

func (x *GetRelatedInstRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *GetRelatedInstRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *GetRelatedInstRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetRelatedInstRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetRelatedInstBySourIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstId string `protobuf:"bytes,1,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"` //想要查询的实例id
}

func (x *GetRelatedInstBySourIdRequest) Reset() {
	*x = GetRelatedInstBySourIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelatedInstBySourIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelatedInstBySourIdRequest) ProtoMessage() {}

func (x *GetRelatedInstBySourIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelatedInstBySourIdRequest.ProtoReflect.Descriptor instead.
func (*GetRelatedInstBySourIdRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{35}
}

func (x *GetRelatedInstBySourIdRequest) GetInstId() string {
	if x != nil {
		return x.InstId
	}
	return ""
}

type GetRelatedFreeInstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelCode       string `protobuf:"bytes,1,opt,name=model_code,json=modelCode,proto3" json:"model_code,omitempty"`
	InstId          int32  `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	FilterCondition string `protobuf:"bytes,3,opt,name=filter_condition,json=filterCondition,proto3" json:"filter_condition,omitempty"` //过滤条件
	User            int32  `protobuf:"varint,4,opt,name=user,proto3" json:"user,omitempty"`                                             //userid  cookies里获取
	Module          string `protobuf:"bytes,5,opt,name=module,proto3" json:"module,omitempty"`                                          //模块名称
	ModelId         int32  `protobuf:"varint,6,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`                        //model_id  查实例关联的模型id
	RelateModelCode string `protobuf:"bytes,7,opt,name=relate_model_code,json=relateModelCode,proto3" json:"relate_model_code,omitempty"`
	RelateModelId   int32  `protobuf:"varint,8,opt,name=relate_model_id,json=relateModelId,proto3" json:"relate_model_id,omitempty"`
}

func (x *GetRelatedFreeInstRequest) Reset() {
	*x = GetRelatedFreeInstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelatedFreeInstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelatedFreeInstRequest) ProtoMessage() {}

func (x *GetRelatedFreeInstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelatedFreeInstRequest.ProtoReflect.Descriptor instead.
func (*GetRelatedFreeInstRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{36}
}

func (x *GetRelatedFreeInstRequest) GetModelCode() string {
	if x != nil {
		return x.ModelCode
	}
	return ""
}

func (x *GetRelatedFreeInstRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *GetRelatedFreeInstRequest) GetFilterCondition() string {
	if x != nil {
		return x.FilterCondition
	}
	return ""
}

func (x *GetRelatedFreeInstRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *GetRelatedFreeInstRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *GetRelatedFreeInstRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetRelatedFreeInstRequest) GetRelateModelCode() string {
	if x != nil {
		return x.RelateModelCode
	}
	return ""
}

func (x *GetRelatedFreeInstRequest) GetRelateModelId() int32 {
	if x != nil {
		return x.RelateModelId
	}
	return 0
}

type JudgeSameClusterdbInstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port    string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Hostids string `protobuf:"bytes,2,opt,name=hostids,proto3" json:"hostids,omitempty"`
}

func (x *JudgeSameClusterdbInstRequest) Reset() {
	*x = JudgeSameClusterdbInstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeSameClusterdbInstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeSameClusterdbInstRequest) ProtoMessage() {}

func (x *JudgeSameClusterdbInstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeSameClusterdbInstRequest.ProtoReflect.Descriptor instead.
func (*JudgeSameClusterdbInstRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{37}
}

func (x *JudgeSameClusterdbInstRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *JudgeSameClusterdbInstRequest) GetHostids() string {
	if x != nil {
		return x.Hostids
	}
	return ""
}

type JudgeSameClusterdbInstResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *JudgeSameClusterdbInstResponse) Reset() {
	*x = JudgeSameClusterdbInstResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeSameClusterdbInstResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeSameClusterdbInstResponse) ProtoMessage() {}

func (x *JudgeSameClusterdbInstResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeSameClusterdbInstResponse.ProtoReflect.Descriptor instead.
func (*JudgeSameClusterdbInstResponse) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{38}
}

func (x *JudgeSameClusterdbInstResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type WorkflowAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateInfo string `protobuf:"bytes,1,opt,name=createInfo,proto3" json:"createInfo,omitempty"`
	RelateInfo string `protobuf:"bytes,2,opt,name=relateInfo,proto3" json:"relateInfo,omitempty"`
}

func (x *WorkflowAddRequest) Reset() {
	*x = WorkflowAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAddRequest) ProtoMessage() {}

func (x *WorkflowAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAddRequest.ProtoReflect.Descriptor instead.
func (*WorkflowAddRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{39}
}

func (x *WorkflowAddRequest) GetCreateInfo() string {
	if x != nil {
		return x.CreateInfo
	}
	return ""
}

func (x *WorkflowAddRequest) GetRelateInfo() string {
	if x != nil {
		return x.RelateInfo
	}
	return ""
}

type WorkflowGetInstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelCode       string `protobuf:"bytes,1,opt,name=model_code,json=modelCode,proto3" json:"model_code,omitempty"`
	InstId          string `protobuf:"bytes,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`                            //基点实例id
	FilterCondition string `protobuf:"bytes,3,opt,name=filter_condition,json=filterCondition,proto3" json:"filter_condition,omitempty"` //过滤条件
	User            int32  `protobuf:"varint,4,opt,name=user,proto3" json:"user,omitempty"`                                             //userid  cookies里获取
	Module          string `protobuf:"bytes,5,opt,name=module,proto3" json:"module,omitempty"`                                          //模块名称
	ModelId         int32  `protobuf:"varint,6,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`                        //model_id  查实例的模型id
	InstRelInfo     string `protobuf:"bytes,7,opt,name=instRelInfo,proto3" json:"instRelInfo,omitempty"`                                //["OracleCluster->cDASComputeNode","OracleCluster->cDASStorageNode"] 模型code->模型code 第一个是基点实例的模型code 根据模型拓扑按层次填写
	AuthTag         string `protobuf:"bytes,8,opt,name=authTag,proto3" json:"authTag,omitempty"`                                        //authTag:"NOAUTH":不鉴权，"AUTH":鉴权
}

func (x *WorkflowGetInstRequest) Reset() {
	*x = WorkflowGetInstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowGetInstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowGetInstRequest) ProtoMessage() {}

func (x *WorkflowGetInstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowGetInstRequest.ProtoReflect.Descriptor instead.
func (*WorkflowGetInstRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{40}
}

func (x *WorkflowGetInstRequest) GetModelCode() string {
	if x != nil {
		return x.ModelCode
	}
	return ""
}

func (x *WorkflowGetInstRequest) GetInstId() string {
	if x != nil {
		return x.InstId
	}
	return ""
}

func (x *WorkflowGetInstRequest) GetFilterCondition() string {
	if x != nil {
		return x.FilterCondition
	}
	return ""
}

func (x *WorkflowGetInstRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *WorkflowGetInstRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *WorkflowGetInstRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *WorkflowGetInstRequest) GetInstRelInfo() string {
	if x != nil {
		return x.InstRelInfo
	}
	return ""
}

func (x *WorkflowGetInstRequest) GetAuthTag() string {
	if x != nil {
		return x.AuthTag
	}
	return ""
}

type WorkflowDeleteInstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid      string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`               //userid  cookies里获取
	InstId      string `protobuf:"bytes,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"` //基点实例id
	OrgTag      string `protobuf:"bytes,3,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`
	UserTag     string `protobuf:"bytes,4,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	Role        string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	ApiPath     string `protobuf:"bytes,6,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
	AuthTag     string `protobuf:"bytes,7,opt,name=authTag,proto3" json:"authTag,omitempty"`         //authTag:"NOAUTH":不鉴权，"AUTH":鉴权
	Module      string `protobuf:"bytes,8,opt,name=module,proto3" json:"module,omitempty"`           //模块名称
	DeleteModel string `protobuf:"bytes,9,opt,name=deleteModel,proto3" json:"deleteModel,omitempty"` //删除的关联模型名称 "cDASComputeNode,cDASStorageNode,cDASFusionNode,OracleDatabase,OracleInstance" 模型code,不包括基点实例模型code
}

func (x *WorkflowDeleteInstRequest) Reset() {
	*x = WorkflowDeleteInstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowDeleteInstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowDeleteInstRequest) ProtoMessage() {}

func (x *WorkflowDeleteInstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowDeleteInstRequest.ProtoReflect.Descriptor instead.
func (*WorkflowDeleteInstRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{41}
}

func (x *WorkflowDeleteInstRequest) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *WorkflowDeleteInstRequest) GetInstId() string {
	if x != nil {
		return x.InstId
	}
	return ""
}

func (x *WorkflowDeleteInstRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *WorkflowDeleteInstRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *WorkflowDeleteInstRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *WorkflowDeleteInstRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *WorkflowDeleteInstRequest) GetAuthTag() string {
	if x != nil {
		return x.AuthTag
	}
	return ""
}

func (x *WorkflowDeleteInstRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *WorkflowDeleteInstRequest) GetDeleteModel() string {
	if x != nil {
		return x.DeleteModel
	}
	return ""
}

type WorkflowGetInstRelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid      string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`               //userid  cookies里获取
	InstId      string `protobuf:"bytes,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"` //基点实例id
	AuthTag     string `protobuf:"bytes,3,opt,name=authTag,proto3" json:"authTag,omitempty"`             //authTag:"NOAUTH":不鉴权，"AUTH":鉴权
	Module      string `protobuf:"bytes,4,opt,name=module,proto3" json:"module,omitempty"`               //模块名称
	InstRelInfo string `protobuf:"bytes,5,opt,name=instRelInfo,proto3" json:"instRelInfo,omitempty"`     //["OracleCluster->cDASComputeNode","OracleCluster->cDASStorageNode"] 模型code->模型code 第一个是基点实例的模型code 根据模型拓扑按层次填写
}

func (x *WorkflowGetInstRelsRequest) Reset() {
	*x = WorkflowGetInstRelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowGetInstRelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowGetInstRelsRequest) ProtoMessage() {}

func (x *WorkflowGetInstRelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowGetInstRelsRequest.ProtoReflect.Descriptor instead.
func (*WorkflowGetInstRelsRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{42}
}

func (x *WorkflowGetInstRelsRequest) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *WorkflowGetInstRelsRequest) GetInstId() string {
	if x != nil {
		return x.InstId
	}
	return ""
}

func (x *WorkflowGetInstRelsRequest) GetAuthTag() string {
	if x != nil {
		return x.AuthTag
	}
	return ""
}

func (x *WorkflowGetInstRelsRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *WorkflowGetInstRelsRequest) GetInstRelInfo() string {
	if x != nil {
		return x.InstRelInfo
	}
	return ""
}

type GetInststocollectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid    int32  `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`                       //userid  查全部userid = 1
	ModelId   int32  `protobuf:"varint,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`      //模型id
	ModelCode string `protobuf:"bytes,3,opt,name=model_code,json=modelCode,proto3" json:"model_code,omitempty"` //模型code
	AuthTag   string `protobuf:"bytes,4,opt,name=authTag,proto3" json:"authTag,omitempty"`                      //authTag:"NOAUTH":不鉴权，"AUTH":鉴权
}

func (x *GetInststocollectRequest) Reset() {
	*x = GetInststocollectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInststocollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInststocollectRequest) ProtoMessage() {}

func (x *GetInststocollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInststocollectRequest.ProtoReflect.Descriptor instead.
func (*GetInststocollectRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{43}
}

func (x *GetInststocollectRequest) GetUserid() int32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *GetInststocollectRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetInststocollectRequest) GetModelCode() string {
	if x != nil {
		return x.ModelCode
	}
	return ""
}

func (x *GetInststocollectRequest) GetAuthTag() string {
	if x != nil {
		return x.AuthTag
	}
	return ""
}

type GetAreainfosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` //是否树状展示
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`   //模糊查询
}

func (x *GetAreainfosRequest) Reset() {
	*x = GetAreainfosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAreainfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAreainfosRequest) ProtoMessage() {}

func (x *GetAreainfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAreainfosRequest.ProtoReflect.Descriptor instead.
func (*GetAreainfosRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{44}
}

func (x *GetAreainfosRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetAreainfosRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type AddUpdateDeployHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId         string `protobuf:"bytes,1,opt,name=hostId,proto3" json:"hostId,omitempty"`                  //主机id
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                      //主机名称
	AreaId         string `protobuf:"bytes,3,opt,name=areaId,proto3" json:"areaId,omitempty"`                  //区域id
	OrgTag         string `protobuf:"bytes,4,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`    //组织tag
	UserTag        string `protobuf:"bytes,5,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"` //用户tag
	Module         string `protobuf:"bytes,6,opt,name=module,proto3" json:"module,omitempty"`                  //模块名称
	DeployUsername string `protobuf:"bytes,7,opt,name=deployUsername,proto3" json:"deployUsername,omitempty"`  //部署用户名
	DeployPassword string `protobuf:"bytes,8,opt,name=deployPassword,proto3" json:"deployPassword,omitempty"`  //部署密码
	DeployIp       string `protobuf:"bytes,9,opt,name=deployIp,proto3" json:"deployIp,omitempty"`              //部署IP
	DeployPort     string `protobuf:"bytes,10,opt,name=deployPort,proto3" json:"deployPort,omitempty"`         //部署端口
	Field          string `protobuf:"bytes,11,opt,name=field,proto3" json:"field,omitempty"`                   //主机模型字段信息
	Operation      string `protobuf:"bytes,12,opt,name=operation,proto3" json:"operation,omitempty"`           //操作选项add:新增,update:修改
	DeployStatus   string `protobuf:"bytes,13,opt,name=deployStatus,proto3" json:"deployStatus,omitempty"`     //agent状态
	InitValue      string `protobuf:"bytes,14,opt,name=initValue,proto3" json:"initValue,omitempty"`           //主机初始化自动扫描数据
	UserId         string `protobuf:"bytes,15,opt,name=userId,proto3" json:"userId,omitempty"`                 //用户id
	AuthTag        string `protobuf:"bytes,16,opt,name=authTag,proto3" json:"authTag,omitempty"`               //authTag:"NOAUTH":不鉴权，"AUTH":鉴权
}

func (x *AddUpdateDeployHostRequest) Reset() {
	*x = AddUpdateDeployHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmdb_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUpdateDeployHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUpdateDeployHostRequest) ProtoMessage() {}

func (x *AddUpdateDeployHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmdb_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUpdateDeployHostRequest.ProtoReflect.Descriptor instead.
func (*AddUpdateDeployHostRequest) Descriptor() ([]byte, []int) {
	return file_cmdb_proto_rawDescGZIP(), []int{45}
}

func (x *AddUpdateDeployHostRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetDeployUsername() string {
	if x != nil {
		return x.DeployUsername
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetDeployPassword() string {
	if x != nil {
		return x.DeployPassword
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetDeployIp() string {
	if x != nil {
		return x.DeployIp
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetDeployPort() string {
	if x != nil {
		return x.DeployPort
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetDeployStatus() string {
	if x != nil {
		return x.DeployStatus
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetInitValue() string {
	if x != nil {
		return x.InitValue
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUpdateDeployHostRequest) GetAuthTag() string {
	if x != nil {
		return x.AuthTag
	}
	return ""
}

var File_cmdb_proto protoreflect.FileDescriptor

var file_cmdb_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6d,
	0x64, 0x62, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69,
	0x50, 0x61, 0x74, 0x68, 0x22, 0xa3, 0x02, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x72, 0x67, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xff, 0x02, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xbc, 0x01, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f,
	0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x54, 0x61,
	0x67, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x22, 0x61, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x22, 0xa4,
	0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x5f, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xa3, 0x02, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72,
	0x49, 0x64, 0x22, 0x36, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74,
	0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x74, 0x74,
	0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x74,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x36, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x74, 0x61, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x22, 0x1f, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x34, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x42,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x6e,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x73,
	0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x6e, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x45, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x7a, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x5a, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x73, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x36,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x54, 0x61, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x22, 0xd2, 0x02, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x22,
	0xab, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72,
	0x67, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67,
	0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x22, 0xef, 0x01,
	0x0a, 0x15, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x61, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x61, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x6f, 0x72, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x67, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x22,
	0x7f, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x22, 0xd5, 0x01, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x1d, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x42, 0x79, 0x53, 0x6f, 0x75, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x99, 0x02, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x46, 0x72, 0x65, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x4d,
	0x0a, 0x1d, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x64, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x73, 0x22, 0x38, 0x0a,
	0x1e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x64, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x54, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfe, 0x01,
	0x0a, 0x16, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54, 0x61, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54, 0x61, 0x67, 0x22, 0x83,
	0x02, 0x0a, 0x19, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x72, 0x67, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54, 0x61, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x73, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54, 0x61,
	0x67, 0x22, 0x3b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xe0,
	0x03, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65,
	0x61, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x61, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x54, 0x61,
	0x67, 0x32, 0x90, 0x14, 0x0a, 0x04, 0x43, 0x6d, 0x64, 0x62, 0x12, 0x3c, 0x0a, 0x0f, 0x67, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1c, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d,
	0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6d,
	0x64, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1f, 0x2e, 0x63,
	0x6d, 0x64, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x12, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x12, 0x1f, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x10, 0x67, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x11, 0x67, 0x65,
	0x74, 0x43, 0x6d, 0x64, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x1a, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d,
	0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x43,
	0x6d, 0x64, 0x62, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x0c, 0x67, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x15,
	0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x62, 0x55, 0x73, 0x65,
	0x72, 0x74, 0x61, 0x67, 0x12, 0x17, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x74, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x12, 0x67, 0x65,
	0x74, 0x43, 0x6d, 0x64, 0x62, 0x55, 0x73, 0x65, 0x72, 0x74, 0x61, 0x67, 0x49, 0x6e, 0x73, 0x74,
	0x12, 0x1f, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x74,
	0x61, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x72,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x62, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0b, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19,
	0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x16, 0x67,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x69, 0x6e, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x69,
	0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6d, 0x64,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x42, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x59, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x42, 0x79,
	0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x69,
	0x6e, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x0d, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x73, 0x6e, 0x12, 0x1a,
	0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73,
	0x74, 0x73, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64,
	0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x55, 0x6e,
	0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0b, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x75, 0x0a, 0x22, 0x67, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x65, 0x6c, 0x12, 0x25, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2f, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x69,
	0x64, 0x12, 0x0b, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f,
	0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x72, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x36, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63,
	0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0c, 0x61, 0x64, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x3c, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x69, 0x6e, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x67, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64,
	0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09,
	0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41, 0x74, 0x74, 0x72, 0x12, 0x1b, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x67, 0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64,
	0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x73, 0x74, 0x42, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x23, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x73, 0x74, 0x42, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x65,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x65, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x16, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x64, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x23, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x64, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53,
	0x61, 0x6d, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x64, 0x62, 0x49, 0x6e, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x12, 0x18, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x13, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x52, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d,
	0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x73, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x65, 0x61, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x6d, 0x64,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x20, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72,
	0x65, 0x73, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmdb_proto_rawDescOnce sync.Once
	file_cmdb_proto_rawDescData = file_cmdb_proto_rawDesc
)

func file_cmdb_proto_rawDescGZIP() []byte {
	file_cmdb_proto_rawDescOnce.Do(func() {
		file_cmdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmdb_proto_rawDescData)
	})
	return file_cmdb_proto_rawDescData
}

var file_cmdb_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_cmdb_proto_goTypes = []interface{}{
	(*GetCommonScriptRequest)(nil),           // 0: cmdb.GetCommonScriptRequest
	(*AddCommonScriptRequest)(nil),           // 1: cmdb.AddCommonScriptRequest
	(*UpdateCommonScriptRequest)(nil),        // 2: cmdb.UpdateCommonScriptRequest
	(*DeleteCommonScriptRequest)(nil),        // 3: cmdb.DeleteCommonScriptRequest
	(*GetInstApplyRequest)(nil),              // 4: cmdb.GetInstApplyRequest
	(*AddInstApplyRequest)(nil),              // 5: cmdb.AddInstApplyRequest
	(*DeleteInstApplyRequest)(nil),           // 6: cmdb.DeleteInstApplyRequest
	(*GetDeployHostinstRequest)(nil),         // 7: cmdb.getDeployHostinstRequest
	(*GetResourcesRequest)(nil),              // 8: cmdb.GetResourcesRequest
	(*GetObjectInstRequest)(nil),             // 9: cmdb.GetObjectInstRequest
	(*GetModelFieldRequest)(nil),             // 10: cmdb.GetModelFieldRequest
	(*GetModuleRequest)(nil),                 // 11: cmdb.GetModuleRequest
	(*GetModelRequest)(nil),                  // 12: cmdb.GetModelRequest
	(*GetUsertagRequest)(nil),                // 13: cmdb.GetUsertagRequest
	(*GetUsertagInstanceRequest)(nil),        // 14: cmdb.GetUsertagInstanceRequest
	(*Commonres)(nil),                        // 15: cmdb.commonres
	(*GetHostinstByModelinstRequest)(nil),    // 16: cmdb.GetHostinstByModelinstRequest
	(*GetHostinstByModelinstResponse)(nil),   // 17: cmdb.GetHostinstByModelinstResponse
	(*GetInstsByHostinstRequest)(nil),        // 18: cmdb.GetInstsByHostinstRequest
	(*GetInstsByHostinstResponse)(nil),       // 19: cmdb.GetInstsByHostinstResponse
	(*Res)(nil),                              // 20: cmdb.res
	(*GetHostinstsnRequest)(nil),             // 21: cmdb.GetHostinstsnRequest
	(*Empty)(nil),                            // 22: cmdb.Empty
	(*GetUnitListResponse)(nil),              // 23: cmdb.GetUnitListResponse
	(*GetIconListResponse)(nil),              // 24: cmdb.GetIconListResponse
	(*GetModelStandardFieldRelRequest)(nil),  // 25: cmdb.GetModelStandardFieldRelRequest
	(*GetModelStandardFieldRelResponse)(nil), // 26: cmdb.GetModelStandardFieldRelResponse
	(*GetModelNameRequest)(nil),              // 27: cmdb.GetModelNameRequest
	(*GetModelNameResponse)(nil),             // 28: cmdb.GetModelNameResponse
	(*AddInstanceRequest)(nil),               // 29: cmdb.AddInstanceRequest
	(*UpdateInstanceRequest)(nil),            // 30: cmdb.UpdateInstanceRequest
	(*DeleteInstanceRequest)(nil),            // 31: cmdb.DeleteInstanceRequest
	(*RelateInstanceRequest)(nil),            // 32: cmdb.RelateInstanceRequest
	(*GetDynamicAttrRequest)(nil),            // 33: cmdb.getDynamicAttrRequest
	(*GetRelatedInstRequest)(nil),            // 34: cmdb.getRelatedInstRequest
	(*GetRelatedInstBySourIdRequest)(nil),    // 35: cmdb.getRelatedInstBySourIdRequest
	(*GetRelatedFreeInstRequest)(nil),        // 36: cmdb.getRelatedFreeInstRequest
	(*JudgeSameClusterdbInstRequest)(nil),    // 37: cmdb.judgeSameClusterdbInstRequest
	(*JudgeSameClusterdbInstResponse)(nil),   // 38: cmdb.judgeSameClusterdbInstResponse
	(*WorkflowAddRequest)(nil),               // 39: cmdb.workflowAddRequest
	(*WorkflowGetInstRequest)(nil),           // 40: cmdb.workflowGetInstRequest
	(*WorkflowDeleteInstRequest)(nil),        // 41: cmdb.workflowDeleteInstRequest
	(*WorkflowGetInstRelsRequest)(nil),       // 42: cmdb.workflowGetInstRelsRequest
	(*GetInststocollectRequest)(nil),         // 43: cmdb.GetInststocollectRequest
	(*GetAreainfosRequest)(nil),              // 44: cmdb.GetAreainfosRequest
	(*AddUpdateDeployHostRequest)(nil),       // 45: cmdb.AddUpdateDeployHostRequest
}
var file_cmdb_proto_depIdxs = []int32{
	0,  // 0: cmdb.Cmdb.getCommonScript:input_type -> cmdb.GetCommonScriptRequest
	1,  // 1: cmdb.Cmdb.addCommonScript:input_type -> cmdb.AddCommonScriptRequest
	2,  // 2: cmdb.Cmdb.updateCommonScript:input_type -> cmdb.UpdateCommonScriptRequest
	3,  // 3: cmdb.Cmdb.deleteCommonScript:input_type -> cmdb.DeleteCommonScriptRequest
	8,  // 4: cmdb.Cmdb.getCmdbResources:input_type -> cmdb.GetResourcesRequest
	10, // 5: cmdb.Cmdb.getCmdbModelField:input_type -> cmdb.GetModelFieldRequest
	11, // 6: cmdb.Cmdb.getCmdbModule:input_type -> cmdb.GetModuleRequest
	12, // 7: cmdb.Cmdb.getCmdbModel:input_type -> cmdb.GetModelRequest
	13, // 8: cmdb.Cmdb.getCmdbUsertag:input_type -> cmdb.GetUsertagRequest
	14, // 9: cmdb.Cmdb.getCmdbUsertagInst:input_type -> cmdb.GetUsertagInstanceRequest
	9,  // 10: cmdb.Cmdb.getCmdbObjectInst:input_type -> cmdb.GetObjectInstRequest
	22, // 11: cmdb.Cmdb.getIconList:input_type -> cmdb.Empty
	16, // 12: cmdb.Cmdb.getHostinstByModelinst:input_type -> cmdb.GetHostinstByModelinstRequest
	18, // 13: cmdb.Cmdb.getInstsByHostinst:input_type -> cmdb.GetInstsByHostinstRequest
	21, // 14: cmdb.Cmdb.getHostinstsn:input_type -> cmdb.GetHostinstsnRequest
	22, // 15: cmdb.Cmdb.getUnitList:input_type -> cmdb.Empty
	25, // 16: cmdb.Cmdb.getModelObjectAttrStandardFieldRel:input_type -> cmdb.GetModelStandardFieldRelRequest
	27, // 17: cmdb.Cmdb.getModelName:input_type -> cmdb.GetModelNameRequest
	22, // 18: cmdb.Cmdb.getHostinstid:input_type -> cmdb.Empty
	4,  // 19: cmdb.Cmdb.getInstApply:input_type -> cmdb.GetInstApplyRequest
	5,  // 20: cmdb.Cmdb.addInstApply:input_type -> cmdb.AddInstApplyRequest
	6,  // 21: cmdb.Cmdb.deleteInstApply:input_type -> cmdb.DeleteInstApplyRequest
	7,  // 22: cmdb.Cmdb.getDeployHostinst:input_type -> cmdb.getDeployHostinstRequest
	29, // 23: cmdb.Cmdb.addInstance:input_type -> cmdb.AddInstanceRequest
	30, // 24: cmdb.Cmdb.updateInstance:input_type -> cmdb.UpdateInstanceRequest
	31, // 25: cmdb.Cmdb.deleteInstance:input_type -> cmdb.DeleteInstanceRequest
	32, // 26: cmdb.Cmdb.relateInstance:input_type -> cmdb.RelateInstanceRequest
	33, // 27: cmdb.Cmdb.getDynamicAttr:input_type -> cmdb.getDynamicAttrRequest
	34, // 28: cmdb.Cmdb.getRelatedInst:input_type -> cmdb.getRelatedInstRequest
	35, // 29: cmdb.Cmdb.getRelatedInstBySourId:input_type -> cmdb.getRelatedInstBySourIdRequest
	36, // 30: cmdb.Cmdb.getRelatedFreeInst:input_type -> cmdb.getRelatedFreeInstRequest
	37, // 31: cmdb.Cmdb.judgeSameClusterdbInst:input_type -> cmdb.judgeSameClusterdbInstRequest
	39, // 32: cmdb.Cmdb.workflowAdd:input_type -> cmdb.workflowAddRequest
	40, // 33: cmdb.Cmdb.workflowGetInst:input_type -> cmdb.workflowGetInstRequest
	41, // 34: cmdb.Cmdb.workflowDeleteInst:input_type -> cmdb.workflowDeleteInstRequest
	42, // 35: cmdb.Cmdb.workflowGetInstRels:input_type -> cmdb.workflowGetInstRelsRequest
	43, // 36: cmdb.Cmdb.GetInststocollect:input_type -> cmdb.GetInststocollectRequest
	44, // 37: cmdb.Cmdb.GetAreainfos:input_type -> cmdb.GetAreainfosRequest
	45, // 38: cmdb.Cmdb.AddUpdateDeploy:input_type -> cmdb.AddUpdateDeployHostRequest
	20, // 39: cmdb.Cmdb.getCommonScript:output_type -> cmdb.res
	20, // 40: cmdb.Cmdb.addCommonScript:output_type -> cmdb.res
	20, // 41: cmdb.Cmdb.updateCommonScript:output_type -> cmdb.res
	20, // 42: cmdb.Cmdb.deleteCommonScript:output_type -> cmdb.res
	20, // 43: cmdb.Cmdb.getCmdbResources:output_type -> cmdb.res
	20, // 44: cmdb.Cmdb.getCmdbModelField:output_type -> cmdb.res
	20, // 45: cmdb.Cmdb.getCmdbModule:output_type -> cmdb.res
	20, // 46: cmdb.Cmdb.getCmdbModel:output_type -> cmdb.res
	20, // 47: cmdb.Cmdb.getCmdbUsertag:output_type -> cmdb.res
	15, // 48: cmdb.Cmdb.getCmdbUsertagInst:output_type -> cmdb.commonres
	20, // 49: cmdb.Cmdb.getCmdbObjectInst:output_type -> cmdb.res
	24, // 50: cmdb.Cmdb.getIconList:output_type -> cmdb.GetIconListResponse
	17, // 51: cmdb.Cmdb.getHostinstByModelinst:output_type -> cmdb.GetHostinstByModelinstResponse
	19, // 52: cmdb.Cmdb.getInstsByHostinst:output_type -> cmdb.GetInstsByHostinstResponse
	20, // 53: cmdb.Cmdb.getHostinstsn:output_type -> cmdb.res
	23, // 54: cmdb.Cmdb.getUnitList:output_type -> cmdb.GetUnitListResponse
	26, // 55: cmdb.Cmdb.getModelObjectAttrStandardFieldRel:output_type -> cmdb.GetModelStandardFieldRelResponse
	28, // 56: cmdb.Cmdb.getModelName:output_type -> cmdb.GetModelNameResponse
	15, // 57: cmdb.Cmdb.getHostinstid:output_type -> cmdb.commonres
	20, // 58: cmdb.Cmdb.getInstApply:output_type -> cmdb.res
	20, // 59: cmdb.Cmdb.addInstApply:output_type -> cmdb.res
	20, // 60: cmdb.Cmdb.deleteInstApply:output_type -> cmdb.res
	20, // 61: cmdb.Cmdb.getDeployHostinst:output_type -> cmdb.res
	20, // 62: cmdb.Cmdb.addInstance:output_type -> cmdb.res
	20, // 63: cmdb.Cmdb.updateInstance:output_type -> cmdb.res
	20, // 64: cmdb.Cmdb.deleteInstance:output_type -> cmdb.res
	20, // 65: cmdb.Cmdb.relateInstance:output_type -> cmdb.res
	20, // 66: cmdb.Cmdb.getDynamicAttr:output_type -> cmdb.res
	20, // 67: cmdb.Cmdb.getRelatedInst:output_type -> cmdb.res
	20, // 68: cmdb.Cmdb.getRelatedInstBySourId:output_type -> cmdb.res
	20, // 69: cmdb.Cmdb.getRelatedFreeInst:output_type -> cmdb.res
	38, // 70: cmdb.Cmdb.judgeSameClusterdbInst:output_type -> cmdb.judgeSameClusterdbInstResponse
	20, // 71: cmdb.Cmdb.workflowAdd:output_type -> cmdb.res
	20, // 72: cmdb.Cmdb.workflowGetInst:output_type -> cmdb.res
	20, // 73: cmdb.Cmdb.workflowDeleteInst:output_type -> cmdb.res
	20, // 74: cmdb.Cmdb.workflowGetInstRels:output_type -> cmdb.res
	20, // 75: cmdb.Cmdb.GetInststocollect:output_type -> cmdb.res
	20, // 76: cmdb.Cmdb.GetAreainfos:output_type -> cmdb.res
	20, // 77: cmdb.Cmdb.AddUpdateDeploy:output_type -> cmdb.res
	39, // [39:78] is the sub-list for method output_type
	0,  // [0:39] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_cmdb_proto_init() }
func file_cmdb_proto_init() {
	if File_cmdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommonScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommonScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommonScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommonScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInstApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeployHostinstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectInstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelFieldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsertagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsertagInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Commonres); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostinstByModelinstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostinstByModelinstResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstsByHostinstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstsByHostinstResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostinstsnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnitListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIconListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelStandardFieldRelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelStandardFieldRelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDynamicAttrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelatedInstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelatedInstBySourIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelatedFreeInstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeSameClusterdbInstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeSameClusterdbInstResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowGetInstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowDeleteInstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowGetInstRelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInststocollectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAreainfosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmdb_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUpdateDeployHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmdb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cmdb_proto_goTypes,
		DependencyIndexes: file_cmdb_proto_depIdxs,
		MessageInfos:      file_cmdb_proto_msgTypes,
	}.Build()
	File_cmdb_proto = out.File
	file_cmdb_proto_rawDesc = nil
	file_cmdb_proto_goTypes = nil
	file_cmdb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CmdbClient is the client API for Cmdb service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CmdbClient interface {
	GetCommonScript(ctx context.Context, in *GetCommonScriptRequest, opts ...grpc.CallOption) (*Res, error)
	AddCommonScript(ctx context.Context, in *AddCommonScriptRequest, opts ...grpc.CallOption) (*Res, error)
	UpdateCommonScript(ctx context.Context, in *UpdateCommonScriptRequest, opts ...grpc.CallOption) (*Res, error)
	DeleteCommonScript(ctx context.Context, in *DeleteCommonScriptRequest, opts ...grpc.CallOption) (*Res, error)
	//获取模型下实例信息
	GetCmdbResources(ctx context.Context, in *GetResourcesRequest, opts ...grpc.CallOption) (*Res, error)
	//获取模型字段所有信息
	GetCmdbModelField(ctx context.Context, in *GetModelFieldRequest, opts ...grpc.CallOption) (*Res, error)
	//获取模块信息
	GetCmdbModule(ctx context.Context, in *GetModuleRequest, opts ...grpc.CallOption) (*Res, error)
	//获取模型信息
	GetCmdbModel(ctx context.Context, in *GetModelRequest, opts ...grpc.CallOption) (*Res, error)
	//获取用户tag信息
	GetCmdbUsertag(ctx context.Context, in *GetUsertagRequest, opts ...grpc.CallOption) (*Res, error)
	//获取实例用户tag信息
	GetCmdbUsertagInst(ctx context.Context, in *GetUsertagInstanceRequest, opts ...grpc.CallOption) (*Commonres, error)
	//获取多个实例信息
	GetCmdbObjectInst(ctx context.Context, in *GetObjectInstRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取Icon图标
	GetIconList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetIconListResponse, error)
	// 根据model_id+inst_id, 获取主机inst的列表
	GetHostinstByModelinst(ctx context.Context, in *GetHostinstByModelinstRequest, opts ...grpc.CallOption) (*GetHostinstByModelinstResponse, error)
	// 根据主机inst, 获取主机inst上的所有inst
	GetInstsByHostinst(ctx context.Context, in *GetInstsByHostinstRequest, opts ...grpc.CallOption) (*GetInstsByHostinstResponse, error)
	// 根据主机inst sn, 获取主机inst上的所有告警模块所需信息
	GetHostinstsn(ctx context.Context, in *GetHostinstsnRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取单位列表
	GetUnitList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetUnitListResponse, error)
	//获取模型字段与标准定义字段关联关系
	GetModelObjectAttrStandardFieldRel(ctx context.Context, in *GetModelStandardFieldRelRequest, opts ...grpc.CallOption) (*GetModelStandardFieldRelResponse, error)
	// 获取资源对应的模型
	GetModelName(ctx context.Context, in *GetModelNameRequest, opts ...grpc.CallOption) (*GetModelNameResponse, error)
	// 根据主机inst id, 获取主机inst上的所有告警模块所需信息
	GetHostinstid(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Commonres, error)
	//查看各模块应用cmdb资源信息
	GetInstApply(ctx context.Context, in *GetInstApplyRequest, opts ...grpc.CallOption) (*Res, error)
	//添加各模块应用cmdb资源信息
	AddInstApply(ctx context.Context, in *AddInstApplyRequest, opts ...grpc.CallOption) (*Res, error)
	//删除各模块应用cmdb资源信息
	DeleteInstApply(ctx context.Context, in *DeleteInstApplyRequest, opts ...grpc.CallOption) (*Res, error)
	//获取已部署主机信息
	GetDeployHostinst(ctx context.Context, in *GetDeployHostinstRequest, opts ...grpc.CallOption) (*Res, error)
	// 新建对象实例接口
	AddInstance(ctx context.Context, in *AddInstanceRequest, opts ...grpc.CallOption) (*Res, error)
	// 编辑对象实例接口
	UpdateInstance(ctx context.Context, in *UpdateInstanceRequest, opts ...grpc.CallOption) (*Res, error)
	// 删除对象实例接口
	DeleteInstance(ctx context.Context, in *DeleteInstanceRequest, opts ...grpc.CallOption) (*Res, error)
	// 关联对象实例接口
	RelateInstance(ctx context.Context, in *RelateInstanceRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取图表类模型字段接口
	GetDynamicAttr(ctx context.Context, in *GetDynamicAttrRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取实例关联实例接口
	GetRelatedInst(ctx context.Context, in *GetRelatedInstRequest, opts ...grpc.CallOption) (*Res, error)
	//根据实例id获取与其关联的所有实例id(告警)
	GetRelatedInstBySourId(ctx context.Context, in *GetRelatedInstBySourIdRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取关联模型下空闲实例接口
	GetRelatedFreeInst(ctx context.Context, in *GetRelatedFreeInstRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取关联模型下空闲实例接口
	JudgeSameClusterdbInst(ctx context.Context, in *JudgeSameClusterdbInstRequest, opts ...grpc.CallOption) (*JudgeSameClusterdbInstResponse, error)
	// 新建对象实例、关联实例、添加各模块应用cmdb资源信息接口
	WorkflowAdd(ctx context.Context, in *WorkflowAddRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取实例关联模型实例资源信息接口
	WorkflowGetInst(ctx context.Context, in *WorkflowGetInstRequest, opts ...grpc.CallOption) (*Res, error)
	// 删除实例及其关联实例接口
	WorkflowDeleteInst(ctx context.Context, in *WorkflowDeleteInstRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取实例所有关联实例接口
	WorkflowGetInstRels(ctx context.Context, in *WorkflowGetInstRelsRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取采集所需的模型下所有实例、采集用户、关联主机信息
	GetInststocollect(ctx context.Context, in *GetInststocollectRequest, opts ...grpc.CallOption) (*Res, error)
	// 获取区域列表信息
	GetAreainfos(ctx context.Context, in *GetAreainfosRequest, opts ...grpc.CallOption) (*Res, error)
	// 新增、修改部署主机
	AddUpdateDeploy(ctx context.Context, in *AddUpdateDeployHostRequest, opts ...grpc.CallOption) (*Res, error)
}

type cmdbClient struct {
	cc grpc.ClientConnInterface
}

func NewCmdbClient(cc grpc.ClientConnInterface) CmdbClient {
	return &cmdbClient{cc}
}

func (c *cmdbClient) GetCommonScript(ctx context.Context, in *GetCommonScriptRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getCommonScript", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) AddCommonScript(ctx context.Context, in *AddCommonScriptRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/addCommonScript", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) UpdateCommonScript(ctx context.Context, in *UpdateCommonScriptRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/updateCommonScript", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) DeleteCommonScript(ctx context.Context, in *DeleteCommonScriptRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/deleteCommonScript", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetCmdbResources(ctx context.Context, in *GetResourcesRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getCmdbResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetCmdbModelField(ctx context.Context, in *GetModelFieldRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getCmdbModelField", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetCmdbModule(ctx context.Context, in *GetModuleRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getCmdbModule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetCmdbModel(ctx context.Context, in *GetModelRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getCmdbModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetCmdbUsertag(ctx context.Context, in *GetUsertagRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getCmdbUsertag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetCmdbUsertagInst(ctx context.Context, in *GetUsertagInstanceRequest, opts ...grpc.CallOption) (*Commonres, error) {
	out := new(Commonres)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getCmdbUsertagInst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetCmdbObjectInst(ctx context.Context, in *GetObjectInstRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getCmdbObjectInst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetIconList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetIconListResponse, error) {
	out := new(GetIconListResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getIconList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetHostinstByModelinst(ctx context.Context, in *GetHostinstByModelinstRequest, opts ...grpc.CallOption) (*GetHostinstByModelinstResponse, error) {
	out := new(GetHostinstByModelinstResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getHostinstByModelinst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetInstsByHostinst(ctx context.Context, in *GetInstsByHostinstRequest, opts ...grpc.CallOption) (*GetInstsByHostinstResponse, error) {
	out := new(GetInstsByHostinstResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getInstsByHostinst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetHostinstsn(ctx context.Context, in *GetHostinstsnRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getHostinstsn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetUnitList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetUnitListResponse, error) {
	out := new(GetUnitListResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getUnitList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetModelObjectAttrStandardFieldRel(ctx context.Context, in *GetModelStandardFieldRelRequest, opts ...grpc.CallOption) (*GetModelStandardFieldRelResponse, error) {
	out := new(GetModelStandardFieldRelResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getModelObjectAttrStandardFieldRel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetModelName(ctx context.Context, in *GetModelNameRequest, opts ...grpc.CallOption) (*GetModelNameResponse, error) {
	out := new(GetModelNameResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getModelName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetHostinstid(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Commonres, error) {
	out := new(Commonres)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getHostinstid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetInstApply(ctx context.Context, in *GetInstApplyRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getInstApply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) AddInstApply(ctx context.Context, in *AddInstApplyRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/addInstApply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) DeleteInstApply(ctx context.Context, in *DeleteInstApplyRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/deleteInstApply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetDeployHostinst(ctx context.Context, in *GetDeployHostinstRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getDeployHostinst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) AddInstance(ctx context.Context, in *AddInstanceRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/addInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) UpdateInstance(ctx context.Context, in *UpdateInstanceRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/updateInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) DeleteInstance(ctx context.Context, in *DeleteInstanceRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/deleteInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) RelateInstance(ctx context.Context, in *RelateInstanceRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/relateInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetDynamicAttr(ctx context.Context, in *GetDynamicAttrRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getDynamicAttr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetRelatedInst(ctx context.Context, in *GetRelatedInstRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getRelatedInst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetRelatedInstBySourId(ctx context.Context, in *GetRelatedInstBySourIdRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getRelatedInstBySourId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetRelatedFreeInst(ctx context.Context, in *GetRelatedFreeInstRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/getRelatedFreeInst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) JudgeSameClusterdbInst(ctx context.Context, in *JudgeSameClusterdbInstRequest, opts ...grpc.CallOption) (*JudgeSameClusterdbInstResponse, error) {
	out := new(JudgeSameClusterdbInstResponse)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/judgeSameClusterdbInst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) WorkflowAdd(ctx context.Context, in *WorkflowAddRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/workflowAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) WorkflowGetInst(ctx context.Context, in *WorkflowGetInstRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/workflowGetInst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) WorkflowDeleteInst(ctx context.Context, in *WorkflowDeleteInstRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/workflowDeleteInst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) WorkflowGetInstRels(ctx context.Context, in *WorkflowGetInstRelsRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/workflowGetInstRels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetInststocollect(ctx context.Context, in *GetInststocollectRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/GetInststocollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) GetAreainfos(ctx context.Context, in *GetAreainfosRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/GetAreainfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdbClient) AddUpdateDeploy(ctx context.Context, in *AddUpdateDeployHostRequest, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/cmdb.Cmdb/AddUpdateDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CmdbServer is the server API for Cmdb service.
type CmdbServer interface {
	GetCommonScript(context.Context, *GetCommonScriptRequest) (*Res, error)
	AddCommonScript(context.Context, *AddCommonScriptRequest) (*Res, error)
	UpdateCommonScript(context.Context, *UpdateCommonScriptRequest) (*Res, error)
	DeleteCommonScript(context.Context, *DeleteCommonScriptRequest) (*Res, error)
	//获取模型下实例信息
	GetCmdbResources(context.Context, *GetResourcesRequest) (*Res, error)
	//获取模型字段所有信息
	GetCmdbModelField(context.Context, *GetModelFieldRequest) (*Res, error)
	//获取模块信息
	GetCmdbModule(context.Context, *GetModuleRequest) (*Res, error)
	//获取模型信息
	GetCmdbModel(context.Context, *GetModelRequest) (*Res, error)
	//获取用户tag信息
	GetCmdbUsertag(context.Context, *GetUsertagRequest) (*Res, error)
	//获取实例用户tag信息
	GetCmdbUsertagInst(context.Context, *GetUsertagInstanceRequest) (*Commonres, error)
	//获取多个实例信息
	GetCmdbObjectInst(context.Context, *GetObjectInstRequest) (*Res, error)
	// 获取Icon图标
	GetIconList(context.Context, *Empty) (*GetIconListResponse, error)
	// 根据model_id+inst_id, 获取主机inst的列表
	GetHostinstByModelinst(context.Context, *GetHostinstByModelinstRequest) (*GetHostinstByModelinstResponse, error)
	// 根据主机inst, 获取主机inst上的所有inst
	GetInstsByHostinst(context.Context, *GetInstsByHostinstRequest) (*GetInstsByHostinstResponse, error)
	// 根据主机inst sn, 获取主机inst上的所有告警模块所需信息
	GetHostinstsn(context.Context, *GetHostinstsnRequest) (*Res, error)
	// 获取单位列表
	GetUnitList(context.Context, *Empty) (*GetUnitListResponse, error)
	//获取模型字段与标准定义字段关联关系
	GetModelObjectAttrStandardFieldRel(context.Context, *GetModelStandardFieldRelRequest) (*GetModelStandardFieldRelResponse, error)
	// 获取资源对应的模型
	GetModelName(context.Context, *GetModelNameRequest) (*GetModelNameResponse, error)
	// 根据主机inst id, 获取主机inst上的所有告警模块所需信息
	GetHostinstid(context.Context, *Empty) (*Commonres, error)
	//查看各模块应用cmdb资源信息
	GetInstApply(context.Context, *GetInstApplyRequest) (*Res, error)
	//添加各模块应用cmdb资源信息
	AddInstApply(context.Context, *AddInstApplyRequest) (*Res, error)
	//删除各模块应用cmdb资源信息
	DeleteInstApply(context.Context, *DeleteInstApplyRequest) (*Res, error)
	//获取已部署主机信息
	GetDeployHostinst(context.Context, *GetDeployHostinstRequest) (*Res, error)
	// 新建对象实例接口
	AddInstance(context.Context, *AddInstanceRequest) (*Res, error)
	// 编辑对象实例接口
	UpdateInstance(context.Context, *UpdateInstanceRequest) (*Res, error)
	// 删除对象实例接口
	DeleteInstance(context.Context, *DeleteInstanceRequest) (*Res, error)
	// 关联对象实例接口
	RelateInstance(context.Context, *RelateInstanceRequest) (*Res, error)
	// 获取图表类模型字段接口
	GetDynamicAttr(context.Context, *GetDynamicAttrRequest) (*Res, error)
	// 获取实例关联实例接口
	GetRelatedInst(context.Context, *GetRelatedInstRequest) (*Res, error)
	//根据实例id获取与其关联的所有实例id(告警)
	GetRelatedInstBySourId(context.Context, *GetRelatedInstBySourIdRequest) (*Res, error)
	// 获取关联模型下空闲实例接口
	GetRelatedFreeInst(context.Context, *GetRelatedFreeInstRequest) (*Res, error)
	// 获取关联模型下空闲实例接口
	JudgeSameClusterdbInst(context.Context, *JudgeSameClusterdbInstRequest) (*JudgeSameClusterdbInstResponse, error)
	// 新建对象实例、关联实例、添加各模块应用cmdb资源信息接口
	WorkflowAdd(context.Context, *WorkflowAddRequest) (*Res, error)
	// 获取实例关联模型实例资源信息接口
	WorkflowGetInst(context.Context, *WorkflowGetInstRequest) (*Res, error)
	// 删除实例及其关联实例接口
	WorkflowDeleteInst(context.Context, *WorkflowDeleteInstRequest) (*Res, error)
	// 获取实例所有关联实例接口
	WorkflowGetInstRels(context.Context, *WorkflowGetInstRelsRequest) (*Res, error)
	// 获取采集所需的模型下所有实例、采集用户、关联主机信息
	GetInststocollect(context.Context, *GetInststocollectRequest) (*Res, error)
	// 获取区域列表信息
	GetAreainfos(context.Context, *GetAreainfosRequest) (*Res, error)
	// 新增、修改部署主机
	AddUpdateDeploy(context.Context, *AddUpdateDeployHostRequest) (*Res, error)
}

// UnimplementedCmdbServer can be embedded to have forward compatible implementations.
type UnimplementedCmdbServer struct {
}

func (*UnimplementedCmdbServer) GetCommonScript(context.Context, *GetCommonScriptRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommonScript not implemented")
}
func (*UnimplementedCmdbServer) AddCommonScript(context.Context, *AddCommonScriptRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCommonScript not implemented")
}
func (*UnimplementedCmdbServer) UpdateCommonScript(context.Context, *UpdateCommonScriptRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCommonScript not implemented")
}
func (*UnimplementedCmdbServer) DeleteCommonScript(context.Context, *DeleteCommonScriptRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCommonScript not implemented")
}
func (*UnimplementedCmdbServer) GetCmdbResources(context.Context, *GetResourcesRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCmdbResources not implemented")
}
func (*UnimplementedCmdbServer) GetCmdbModelField(context.Context, *GetModelFieldRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCmdbModelField not implemented")
}
func (*UnimplementedCmdbServer) GetCmdbModule(context.Context, *GetModuleRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCmdbModule not implemented")
}
func (*UnimplementedCmdbServer) GetCmdbModel(context.Context, *GetModelRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCmdbModel not implemented")
}
func (*UnimplementedCmdbServer) GetCmdbUsertag(context.Context, *GetUsertagRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCmdbUsertag not implemented")
}
func (*UnimplementedCmdbServer) GetCmdbUsertagInst(context.Context, *GetUsertagInstanceRequest) (*Commonres, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCmdbUsertagInst not implemented")
}
func (*UnimplementedCmdbServer) GetCmdbObjectInst(context.Context, *GetObjectInstRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCmdbObjectInst not implemented")
}
func (*UnimplementedCmdbServer) GetIconList(context.Context, *Empty) (*GetIconListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIconList not implemented")
}
func (*UnimplementedCmdbServer) GetHostinstByModelinst(context.Context, *GetHostinstByModelinstRequest) (*GetHostinstByModelinstResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostinstByModelinst not implemented")
}
func (*UnimplementedCmdbServer) GetInstsByHostinst(context.Context, *GetInstsByHostinstRequest) (*GetInstsByHostinstResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstsByHostinst not implemented")
}
func (*UnimplementedCmdbServer) GetHostinstsn(context.Context, *GetHostinstsnRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostinstsn not implemented")
}
func (*UnimplementedCmdbServer) GetUnitList(context.Context, *Empty) (*GetUnitListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUnitList not implemented")
}
func (*UnimplementedCmdbServer) GetModelObjectAttrStandardFieldRel(context.Context, *GetModelStandardFieldRelRequest) (*GetModelStandardFieldRelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelObjectAttrStandardFieldRel not implemented")
}
func (*UnimplementedCmdbServer) GetModelName(context.Context, *GetModelNameRequest) (*GetModelNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelName not implemented")
}
func (*UnimplementedCmdbServer) GetHostinstid(context.Context, *Empty) (*Commonres, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostinstid not implemented")
}
func (*UnimplementedCmdbServer) GetInstApply(context.Context, *GetInstApplyRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstApply not implemented")
}
func (*UnimplementedCmdbServer) AddInstApply(context.Context, *AddInstApplyRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInstApply not implemented")
}
func (*UnimplementedCmdbServer) DeleteInstApply(context.Context, *DeleteInstApplyRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInstApply not implemented")
}
func (*UnimplementedCmdbServer) GetDeployHostinst(context.Context, *GetDeployHostinstRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeployHostinst not implemented")
}
func (*UnimplementedCmdbServer) AddInstance(context.Context, *AddInstanceRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInstance not implemented")
}
func (*UnimplementedCmdbServer) UpdateInstance(context.Context, *UpdateInstanceRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInstance not implemented")
}
func (*UnimplementedCmdbServer) DeleteInstance(context.Context, *DeleteInstanceRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInstance not implemented")
}
func (*UnimplementedCmdbServer) RelateInstance(context.Context, *RelateInstanceRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RelateInstance not implemented")
}
func (*UnimplementedCmdbServer) GetDynamicAttr(context.Context, *GetDynamicAttrRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDynamicAttr not implemented")
}
func (*UnimplementedCmdbServer) GetRelatedInst(context.Context, *GetRelatedInstRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelatedInst not implemented")
}
func (*UnimplementedCmdbServer) GetRelatedInstBySourId(context.Context, *GetRelatedInstBySourIdRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelatedInstBySourId not implemented")
}
func (*UnimplementedCmdbServer) GetRelatedFreeInst(context.Context, *GetRelatedFreeInstRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelatedFreeInst not implemented")
}
func (*UnimplementedCmdbServer) JudgeSameClusterdbInst(context.Context, *JudgeSameClusterdbInstRequest) (*JudgeSameClusterdbInstResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JudgeSameClusterdbInst not implemented")
}
func (*UnimplementedCmdbServer) WorkflowAdd(context.Context, *WorkflowAddRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkflowAdd not implemented")
}
func (*UnimplementedCmdbServer) WorkflowGetInst(context.Context, *WorkflowGetInstRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkflowGetInst not implemented")
}
func (*UnimplementedCmdbServer) WorkflowDeleteInst(context.Context, *WorkflowDeleteInstRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkflowDeleteInst not implemented")
}
func (*UnimplementedCmdbServer) WorkflowGetInstRels(context.Context, *WorkflowGetInstRelsRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkflowGetInstRels not implemented")
}
func (*UnimplementedCmdbServer) GetInststocollect(context.Context, *GetInststocollectRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInststocollect not implemented")
}
func (*UnimplementedCmdbServer) GetAreainfos(context.Context, *GetAreainfosRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAreainfos not implemented")
}
func (*UnimplementedCmdbServer) AddUpdateDeploy(context.Context, *AddUpdateDeployHostRequest) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUpdateDeploy not implemented")
}

func RegisterCmdbServer(s *grpc.Server, srv CmdbServer) {
	s.RegisterService(&_Cmdb_serviceDesc, srv)
}

func _Cmdb_GetCommonScript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommonScriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetCommonScript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetCommonScript",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetCommonScript(ctx, req.(*GetCommonScriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_AddCommonScript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCommonScriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).AddCommonScript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/AddCommonScript",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).AddCommonScript(ctx, req.(*AddCommonScriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_UpdateCommonScript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommonScriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).UpdateCommonScript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/UpdateCommonScript",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).UpdateCommonScript(ctx, req.(*UpdateCommonScriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_DeleteCommonScript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommonScriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).DeleteCommonScript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/DeleteCommonScript",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).DeleteCommonScript(ctx, req.(*DeleteCommonScriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetCmdbResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetCmdbResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetCmdbResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetCmdbResources(ctx, req.(*GetResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetCmdbModelField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModelFieldRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetCmdbModelField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetCmdbModelField",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetCmdbModelField(ctx, req.(*GetModelFieldRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetCmdbModule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetCmdbModule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetCmdbModule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetCmdbModule(ctx, req.(*GetModuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetCmdbModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetCmdbModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetCmdbModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetCmdbModel(ctx, req.(*GetModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetCmdbUsertag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsertagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetCmdbUsertag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetCmdbUsertag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetCmdbUsertag(ctx, req.(*GetUsertagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetCmdbUsertagInst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsertagInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetCmdbUsertagInst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetCmdbUsertagInst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetCmdbUsertagInst(ctx, req.(*GetUsertagInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetCmdbObjectInst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObjectInstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetCmdbObjectInst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetCmdbObjectInst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetCmdbObjectInst(ctx, req.(*GetObjectInstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetIconList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetIconList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetIconList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetIconList(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetHostinstByModelinst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostinstByModelinstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetHostinstByModelinst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetHostinstByModelinst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetHostinstByModelinst(ctx, req.(*GetHostinstByModelinstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetInstsByHostinst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstsByHostinstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetInstsByHostinst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetInstsByHostinst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetInstsByHostinst(ctx, req.(*GetInstsByHostinstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetHostinstsn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostinstsnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetHostinstsn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetHostinstsn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetHostinstsn(ctx, req.(*GetHostinstsnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetUnitList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetUnitList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetUnitList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetUnitList(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetModelObjectAttrStandardFieldRel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModelStandardFieldRelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetModelObjectAttrStandardFieldRel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetModelObjectAttrStandardFieldRel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetModelObjectAttrStandardFieldRel(ctx, req.(*GetModelStandardFieldRelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetModelName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModelNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetModelName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetModelName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetModelName(ctx, req.(*GetModelNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetHostinstid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetHostinstid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetHostinstid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetHostinstid(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetInstApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetInstApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetInstApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetInstApply(ctx, req.(*GetInstApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_AddInstApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).AddInstApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/AddInstApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).AddInstApply(ctx, req.(*AddInstApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_DeleteInstApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInstApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).DeleteInstApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/DeleteInstApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).DeleteInstApply(ctx, req.(*DeleteInstApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetDeployHostinst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeployHostinstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetDeployHostinst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetDeployHostinst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetDeployHostinst(ctx, req.(*GetDeployHostinstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_AddInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).AddInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/AddInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).AddInstance(ctx, req.(*AddInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_UpdateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).UpdateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/UpdateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).UpdateInstance(ctx, req.(*UpdateInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_DeleteInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).DeleteInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/DeleteInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).DeleteInstance(ctx, req.(*DeleteInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_RelateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RelateInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).RelateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/RelateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).RelateInstance(ctx, req.(*RelateInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetDynamicAttr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDynamicAttrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetDynamicAttr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetDynamicAttr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetDynamicAttr(ctx, req.(*GetDynamicAttrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetRelatedInst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelatedInstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetRelatedInst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetRelatedInst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetRelatedInst(ctx, req.(*GetRelatedInstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetRelatedInstBySourId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelatedInstBySourIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetRelatedInstBySourId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetRelatedInstBySourId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetRelatedInstBySourId(ctx, req.(*GetRelatedInstBySourIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetRelatedFreeInst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelatedFreeInstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetRelatedFreeInst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetRelatedFreeInst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetRelatedFreeInst(ctx, req.(*GetRelatedFreeInstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_JudgeSameClusterdbInst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JudgeSameClusterdbInstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).JudgeSameClusterdbInst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/JudgeSameClusterdbInst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).JudgeSameClusterdbInst(ctx, req.(*JudgeSameClusterdbInstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_WorkflowAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).WorkflowAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/WorkflowAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).WorkflowAdd(ctx, req.(*WorkflowAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_WorkflowGetInst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowGetInstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).WorkflowGetInst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/WorkflowGetInst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).WorkflowGetInst(ctx, req.(*WorkflowGetInstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_WorkflowDeleteInst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowDeleteInstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).WorkflowDeleteInst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/WorkflowDeleteInst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).WorkflowDeleteInst(ctx, req.(*WorkflowDeleteInstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_WorkflowGetInstRels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowGetInstRelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).WorkflowGetInstRels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/WorkflowGetInstRels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).WorkflowGetInstRels(ctx, req.(*WorkflowGetInstRelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetInststocollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInststocollectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetInststocollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetInststocollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetInststocollect(ctx, req.(*GetInststocollectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_GetAreainfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAreainfosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).GetAreainfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/GetAreainfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).GetAreainfos(ctx, req.(*GetAreainfosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmdb_AddUpdateDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUpdateDeployHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdbServer).AddUpdateDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmdb.Cmdb/AddUpdateDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdbServer).AddUpdateDeploy(ctx, req.(*AddUpdateDeployHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cmdb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cmdb.Cmdb",
	HandlerType: (*CmdbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getCommonScript",
			Handler:    _Cmdb_GetCommonScript_Handler,
		},
		{
			MethodName: "addCommonScript",
			Handler:    _Cmdb_AddCommonScript_Handler,
		},
		{
			MethodName: "updateCommonScript",
			Handler:    _Cmdb_UpdateCommonScript_Handler,
		},
		{
			MethodName: "deleteCommonScript",
			Handler:    _Cmdb_DeleteCommonScript_Handler,
		},
		{
			MethodName: "getCmdbResources",
			Handler:    _Cmdb_GetCmdbResources_Handler,
		},
		{
			MethodName: "getCmdbModelField",
			Handler:    _Cmdb_GetCmdbModelField_Handler,
		},
		{
			MethodName: "getCmdbModule",
			Handler:    _Cmdb_GetCmdbModule_Handler,
		},
		{
			MethodName: "getCmdbModel",
			Handler:    _Cmdb_GetCmdbModel_Handler,
		},
		{
			MethodName: "getCmdbUsertag",
			Handler:    _Cmdb_GetCmdbUsertag_Handler,
		},
		{
			MethodName: "getCmdbUsertagInst",
			Handler:    _Cmdb_GetCmdbUsertagInst_Handler,
		},
		{
			MethodName: "getCmdbObjectInst",
			Handler:    _Cmdb_GetCmdbObjectInst_Handler,
		},
		{
			MethodName: "getIconList",
			Handler:    _Cmdb_GetIconList_Handler,
		},
		{
			MethodName: "getHostinstByModelinst",
			Handler:    _Cmdb_GetHostinstByModelinst_Handler,
		},
		{
			MethodName: "getInstsByHostinst",
			Handler:    _Cmdb_GetInstsByHostinst_Handler,
		},
		{
			MethodName: "getHostinstsn",
			Handler:    _Cmdb_GetHostinstsn_Handler,
		},
		{
			MethodName: "getUnitList",
			Handler:    _Cmdb_GetUnitList_Handler,
		},
		{
			MethodName: "getModelObjectAttrStandardFieldRel",
			Handler:    _Cmdb_GetModelObjectAttrStandardFieldRel_Handler,
		},
		{
			MethodName: "getModelName",
			Handler:    _Cmdb_GetModelName_Handler,
		},
		{
			MethodName: "getHostinstid",
			Handler:    _Cmdb_GetHostinstid_Handler,
		},
		{
			MethodName: "getInstApply",
			Handler:    _Cmdb_GetInstApply_Handler,
		},
		{
			MethodName: "addInstApply",
			Handler:    _Cmdb_AddInstApply_Handler,
		},
		{
			MethodName: "deleteInstApply",
			Handler:    _Cmdb_DeleteInstApply_Handler,
		},
		{
			MethodName: "getDeployHostinst",
			Handler:    _Cmdb_GetDeployHostinst_Handler,
		},
		{
			MethodName: "addInstance",
			Handler:    _Cmdb_AddInstance_Handler,
		},
		{
			MethodName: "updateInstance",
			Handler:    _Cmdb_UpdateInstance_Handler,
		},
		{
			MethodName: "deleteInstance",
			Handler:    _Cmdb_DeleteInstance_Handler,
		},
		{
			MethodName: "relateInstance",
			Handler:    _Cmdb_RelateInstance_Handler,
		},
		{
			MethodName: "getDynamicAttr",
			Handler:    _Cmdb_GetDynamicAttr_Handler,
		},
		{
			MethodName: "getRelatedInst",
			Handler:    _Cmdb_GetRelatedInst_Handler,
		},
		{
			MethodName: "getRelatedInstBySourId",
			Handler:    _Cmdb_GetRelatedInstBySourId_Handler,
		},
		{
			MethodName: "getRelatedFreeInst",
			Handler:    _Cmdb_GetRelatedFreeInst_Handler,
		},
		{
			MethodName: "judgeSameClusterdbInst",
			Handler:    _Cmdb_JudgeSameClusterdbInst_Handler,
		},
		{
			MethodName: "workflowAdd",
			Handler:    _Cmdb_WorkflowAdd_Handler,
		},
		{
			MethodName: "workflowGetInst",
			Handler:    _Cmdb_WorkflowGetInst_Handler,
		},
		{
			MethodName: "workflowDeleteInst",
			Handler:    _Cmdb_WorkflowDeleteInst_Handler,
		},
		{
			MethodName: "workflowGetInstRels",
			Handler:    _Cmdb_WorkflowGetInstRels_Handler,
		},
		{
			MethodName: "GetInststocollect",
			Handler:    _Cmdb_GetInststocollect_Handler,
		},
		{
			MethodName: "GetAreainfos",
			Handler:    _Cmdb_GetAreainfos_Handler,
		},
		{
			MethodName: "AddUpdateDeploy",
			Handler:    _Cmdb_AddUpdateDeploy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cmdb.proto",
}
