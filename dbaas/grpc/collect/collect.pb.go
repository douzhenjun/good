// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: collect.proto

package collect

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type STATE int32

const (
	STATE_UNKNOWN     STATE = 0
	STATE_PENDING     STATE = 1
	STATE_RUNNING     STATE = 2
	STATE_COMPLETE    STATE = 3
	STATE_STOPPED     STATE = 4
	STATE_TIMEOUT     STATE = 6
	STATE_SSHNETFAIL  STATE = 7
	STATE_TASKFAIL    STATE = 8
	STATE_TASKNOEXIST STATE = 9
)

// Enum value maps for STATE.
var (
	STATE_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETE",
		4: "STOPPED",
		6: "TIMEOUT",
		7: "SSHNETFAIL",
		8: "TASKFAIL",
		9: "TASKNOEXIST",
	}
	STATE_value = map[string]int32{
		"UNKNOWN":     0,
		"PENDING":     1,
		"RUNNING":     2,
		"COMPLETE":    3,
		"STOPPED":     4,
		"TIMEOUT":     6,
		"SSHNETFAIL":  7,
		"TASKFAIL":    8,
		"TASKNOEXIST": 9,
	}
)

func (x STATE) Enum() *STATE {
	p := new(STATE)
	*p = x
	return p
}

func (x STATE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STATE) Descriptor() protoreflect.EnumDescriptor {
	return file_collect_proto_enumTypes[0].Descriptor()
}

func (STATE) Type() protoreflect.EnumType {
	return &file_collect_proto_enumTypes[0]
}

func (x STATE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STATE.Descriptor instead.
func (STATE) EnumDescriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{0}
}

// 一、collect
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{0}
}

type GetModelItemListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTag string `protobuf:"bytes,1,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	ModelId int32  `protobuf:"varint,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
}

func (x *GetModelItemListRequest) Reset() {
	*x = GetModelItemListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelItemListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelItemListRequest) ProtoMessage() {}

func (x *GetModelItemListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelItemListRequest.ProtoReflect.Descriptor instead.
func (*GetModelItemListRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{1}
}

func (x *GetModelItemListRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *GetModelItemListRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

type AddItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgTag         string `protobuf:"bytes,1,opt,name=org_tag,json=orgTag,proto3" json:"org_tag,omitempty"`
	UserTag        string `protobuf:"bytes,2,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	Method         string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Name           string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type           string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	ScriptContent  string `protobuf:"bytes,6,opt,name=script_content,json=scriptContent,proto3" json:"script_content,omitempty"`
	OfficialItemId int32  `protobuf:"varint,7,opt,name=official_item_id,json=officialItemId,proto3" json:"official_item_id,omitempty"`
	HttpUrl        string `protobuf:"bytes,8,opt,name=http_url,json=httpUrl,proto3" json:"http_url,omitempty"`
	HttpHeader     string `protobuf:"bytes,9,opt,name=http_header,json=httpHeader,proto3" json:"http_header,omitempty"`
	ScriptParams   string `protobuf:"bytes,10,opt,name=script_params,json=scriptParams,proto3" json:"script_params,omitempty"`
	ResultType     string `protobuf:"bytes,11,opt,name=result_type,json=resultType,proto3" json:"result_type,omitempty"`
	Interval       string `protobuf:"bytes,12,opt,name=interval,proto3" json:"interval,omitempty"`
	Measurement    string `protobuf:"bytes,13,opt,name=measurement,proto3" json:"measurement,omitempty"`
	Tag            string `protobuf:"bytes,14,opt,name=tag,proto3" json:"tag,omitempty"`
	Field          string `protobuf:"bytes,15,opt,name=field,proto3" json:"field,omitempty"`
	DisplayFields  string `protobuf:"bytes,16,opt,name=display_fields,json=displayFields,proto3" json:"display_fields,omitempty"`
	ModelobjectId  int32  `protobuf:"varint,17,opt,name=modelobject_id,json=modelobjectId,proto3" json:"modelobject_id,omitempty"`
	AttrId         int32  `protobuf:"varint,18,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`
	Desc           string `protobuf:"bytes,19,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *AddItemRequest) Reset() {
	*x = AddItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemRequest) ProtoMessage() {}

func (x *AddItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemRequest.ProtoReflect.Descriptor instead.
func (*AddItemRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{2}
}

func (x *AddItemRequest) GetOrgTag() string {
	if x != nil {
		return x.OrgTag
	}
	return ""
}

func (x *AddItemRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *AddItemRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *AddItemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddItemRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AddItemRequest) GetScriptContent() string {
	if x != nil {
		return x.ScriptContent
	}
	return ""
}

func (x *AddItemRequest) GetOfficialItemId() int32 {
	if x != nil {
		return x.OfficialItemId
	}
	return 0
}

func (x *AddItemRequest) GetHttpUrl() string {
	if x != nil {
		return x.HttpUrl
	}
	return ""
}

func (x *AddItemRequest) GetHttpHeader() string {
	if x != nil {
		return x.HttpHeader
	}
	return ""
}

func (x *AddItemRequest) GetScriptParams() string {
	if x != nil {
		return x.ScriptParams
	}
	return ""
}

func (x *AddItemRequest) GetResultType() string {
	if x != nil {
		return x.ResultType
	}
	return ""
}

func (x *AddItemRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *AddItemRequest) GetMeasurement() string {
	if x != nil {
		return x.Measurement
	}
	return ""
}

func (x *AddItemRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AddItemRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *AddItemRequest) GetDisplayFields() string {
	if x != nil {
		return x.DisplayFields
	}
	return ""
}

func (x *AddItemRequest) GetModelobjectId() int32 {
	if x != nil {
		return x.ModelobjectId
	}
	return 0
}

func (x *AddItemRequest) GetAttrId() int32 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *AddItemRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type GetInstItemListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTag string `protobuf:"bytes,1,opt,name=user_tag,json=userTag,proto3" json:"user_tag,omitempty"`
	ModelId int32  `protobuf:"varint,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	InstId  int32  `protobuf:"varint,3,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
}

func (x *GetInstItemListRequest) Reset() {
	*x = GetInstItemListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstItemListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstItemListRequest) ProtoMessage() {}

func (x *GetInstItemListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstItemListRequest.ProtoReflect.Descriptor instead.
func (*GetInstItemListRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{3}
}

func (x *GetInstItemListRequest) GetUserTag() string {
	if x != nil {
		return x.UserTag
	}
	return ""
}

func (x *GetInstItemListRequest) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *GetInstItemListRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

type SetBlackWhiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstId        int32  `protobuf:"varint,1,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	OperationList string `protobuf:"bytes,2,opt,name=operation_list,json=operationList,proto3" json:"operation_list,omitempty"`
}

func (x *SetBlackWhiteRequest) Reset() {
	*x = SetBlackWhiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBlackWhiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBlackWhiteRequest) ProtoMessage() {}

func (x *SetBlackWhiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBlackWhiteRequest.ProtoReflect.Descriptor instead.
func (*SetBlackWhiteRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{4}
}

func (x *SetBlackWhiteRequest) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *SetBlackWhiteRequest) GetOperationList() string {
	if x != nil {
		return x.OperationList
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errorno    int32  `protobuf:"varint,1,opt,name=errorno,proto3" json:"errorno,omitempty"`
	ErrorMsgEn string `protobuf:"bytes,2,opt,name=error_msg_en,json=errorMsgEn,proto3" json:"error_msg_en,omitempty"`
	ErrorMsgZh string `protobuf:"bytes,3,opt,name=error_msg_zh,json=errorMsgZh,proto3" json:"error_msg_zh,omitempty"`
	Data       string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetErrorno() int32 {
	if x != nil {
		return x.Errorno
	}
	return 0
}

func (x *Response) GetErrorMsgEn() string {
	if x != nil {
		return x.ErrorMsgEn
	}
	return ""
}

func (x *Response) GetErrorMsgZh() string {
	if x != nil {
		return x.ErrorMsgZh
	}
	return ""
}

func (x *Response) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type UpdateTelegrafRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *UpdateTelegrafRequest) Reset() {
	*x = UpdateTelegrafRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTelegrafRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelegrafRequest) ProtoMessage() {}

func (x *UpdateTelegrafRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelegrafRequest.ProtoReflect.Descriptor instead.
func (*UpdateTelegrafRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTelegrafRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type UpdateTelegrafResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateTelegrafResponse) Reset() {
	*x = UpdateTelegrafResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTelegrafResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelegrafResponse) ProtoMessage() {}

func (x *UpdateTelegrafResponse) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelegrafResponse.ProtoReflect.Descriptor instead.
func (*UpdateTelegrafResponse) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTelegrafResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type AddInstsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inst []*Inst `protobuf:"bytes,1,rep,name=inst,proto3" json:"inst,omitempty"`
}

func (x *AddInstsRequest) Reset() {
	*x = AddInstsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInstsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstsRequest) ProtoMessage() {}

func (x *AddInstsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstsRequest.ProtoReflect.Descriptor instead.
func (*AddInstsRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{8}
}

func (x *AddInstsRequest) GetInst() []*Inst {
	if x != nil {
		return x.Inst
	}
	return nil
}

type UpdateInstsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inst []*Inst `protobuf:"bytes,1,rep,name=inst,proto3" json:"inst,omitempty"`
}

func (x *UpdateInstsRequest) Reset() {
	*x = UpdateInstsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstsRequest) ProtoMessage() {}

func (x *UpdateInstsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstsRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstsRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateInstsRequest) GetInst() []*Inst {
	if x != nil {
		return x.Inst
	}
	return nil
}

type DeleteInstsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstIds string `protobuf:"bytes,1,opt,name=inst_ids,json=instIds,proto3" json:"inst_ids,omitempty"`
}

func (x *DeleteInstsRequest) Reset() {
	*x = DeleteInstsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstsRequest) ProtoMessage() {}

func (x *DeleteInstsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstsRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstsRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteInstsRequest) GetInstIds() string {
	if x != nil {
		return x.InstIds
	}
	return ""
}

type Inst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId     int32  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	InstId      int32  `protobuf:"varint,2,opt,name=inst_id,json=instId,proto3" json:"inst_id,omitempty"`
	CollectUser string `protobuf:"bytes,3,opt,name=collect_user,json=collectUser,proto3" json:"collect_user,omitempty"`
	IsHost      bool   `protobuf:"varint,4,opt,name=is_host,json=isHost,proto3" json:"is_host,omitempty"` // 是否是主机
	HostIp      string `protobuf:"bytes,5,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`  // 如果是主机实例
	HostSn      string `protobuf:"bytes,6,opt,name=host_sn,json=hostSn,proto3" json:"host_sn,omitempty"`  // 如果是主机实例
}

func (x *Inst) Reset() {
	*x = Inst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inst) ProtoMessage() {}

func (x *Inst) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inst.ProtoReflect.Descriptor instead.
func (*Inst) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{11}
}

func (x *Inst) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *Inst) GetInstId() int32 {
	if x != nil {
		return x.InstId
	}
	return 0
}

func (x *Inst) GetCollectUser() string {
	if x != nil {
		return x.CollectUser
	}
	return ""
}

func (x *Inst) GetIsHost() bool {
	if x != nil {
		return x.IsHost
	}
	return false
}

func (x *Inst) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *Inst) GetHostSn() string {
	if x != nil {
		return x.HostSn
	}
	return ""
}

type AddInstRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterInstId int32 `protobuf:"varint,1,opt,name=master_inst_id,json=masterInstId,proto3" json:"master_inst_id,omitempty"` // salve_inst的采集项会归属于master_inst
	SlaveInstId  int32 `protobuf:"varint,2,opt,name=slave_inst_id,json=slaveInstId,proto3" json:"slave_inst_id,omitempty"`
}

func (x *AddInstRelationRequest) Reset() {
	*x = AddInstRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInstRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstRelationRequest) ProtoMessage() {}

func (x *AddInstRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstRelationRequest.ProtoReflect.Descriptor instead.
func (*AddInstRelationRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{12}
}

func (x *AddInstRelationRequest) GetMasterInstId() int32 {
	if x != nil {
		return x.MasterInstId
	}
	return 0
}

func (x *AddInstRelationRequest) GetSlaveInstId() int32 {
	if x != nil {
		return x.SlaveInstId
	}
	return 0
}

type DeleteInstRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterInstId int32 `protobuf:"varint,1,opt,name=master_inst_id,json=masterInstId,proto3" json:"master_inst_id,omitempty"` // salve_inst的采集项会归属于master_inst
	SlaveInstId  int32 `protobuf:"varint,2,opt,name=slave_inst_id,json=slaveInstId,proto3" json:"slave_inst_id,omitempty"`
}

func (x *DeleteInstRelationRequest) Reset() {
	*x = DeleteInstRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstRelationRequest) ProtoMessage() {}

func (x *DeleteInstRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstRelationRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstRelationRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteInstRelationRequest) GetMasterInstId() int32 {
	if x != nil {
		return x.MasterInstId
	}
	return 0
}

func (x *DeleteInstRelationRequest) GetSlaveInstId() int32 {
	if x != nil {
		return x.SlaveInstId
	}
	return 0
}

type ChangeHostStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId        int32  `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	HostIp        string `protobuf:"bytes,2,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	HostSn        string `protobuf:"bytes,3,opt,name=host_sn,json=hostSn,proto3" json:"host_sn,omitempty"`
	ChangedStatus string `protobuf:"bytes,4,opt,name=changed_status,json=changedStatus,proto3" json:"changed_status,omitempty"`
}

func (x *ChangeHostStatusRequest) Reset() {
	*x = ChangeHostStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeHostStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeHostStatusRequest) ProtoMessage() {}

func (x *ChangeHostStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeHostStatusRequest.ProtoReflect.Descriptor instead.
func (*ChangeHostStatusRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{14}
}

func (x *ChangeHostStatusRequest) GetHostId() int32 {
	if x != nil {
		return x.HostId
	}
	return 0
}

func (x *ChangeHostStatusRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *ChangeHostStatusRequest) GetHostSn() string {
	if x != nil {
		return x.HostSn
	}
	return ""
}

func (x *ChangeHostStatusRequest) GetChangedStatus() string {
	if x != nil {
		return x.ChangedStatus
	}
	return ""
}

type BoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BoolResponse) Reset() {
	*x = BoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolResponse) ProtoMessage() {}

func (x *BoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolResponse.ProtoReflect.Descriptor instead.
func (*BoolResponse) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{15}
}

func (x *BoolResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *BoolResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 二、icse
type TaskDeployAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IPorHostName string   `protobuf:"bytes,1,opt,name=IPorHostName,proto3" json:"IPorHostName,omitempty"` //hostname or ip
	User         string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Password     string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Tags         []string `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
}

func (x *TaskDeployAgent) Reset() {
	*x = TaskDeployAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDeployAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDeployAgent) ProtoMessage() {}

func (x *TaskDeployAgent) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDeployAgent.ProtoReflect.Descriptor instead.
func (*TaskDeployAgent) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{16}
}

func (x *TaskDeployAgent) GetIPorHostName() string {
	if x != nil {
		return x.IPorHostName
	}
	return ""
}

func (x *TaskDeployAgent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *TaskDeployAgent) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *TaskDeployAgent) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type TaskCommandLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecHost string   `protobuf:"bytes,1,opt,name=ExecHost,proto3" json:"ExecHost,omitempty"`
	CmdLine  string   `protobuf:"bytes,2,opt,name=CmdLine,proto3" json:"CmdLine,omitempty"`
	Timeout  int64    `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Tags     []string `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
}

func (x *TaskCommandLine) Reset() {
	*x = TaskCommandLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCommandLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCommandLine) ProtoMessage() {}

func (x *TaskCommandLine) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCommandLine.ProtoReflect.Descriptor instead.
func (*TaskCommandLine) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{17}
}

func (x *TaskCommandLine) GetExecHost() string {
	if x != nil {
		return x.ExecHost
	}
	return ""
}

func (x *TaskCommandLine) GetCmdLine() string {
	if x != nil {
		return x.CmdLine
	}
	return ""
}

func (x *TaskCommandLine) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *TaskCommandLine) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type TaskScpFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteHost string   `protobuf:"bytes,1,opt,name=RemoteHost,proto3" json:"RemoteHost,omitempty"`
	SrcFile    string   `protobuf:"bytes,2,opt,name=SrcFile,proto3" json:"SrcFile,omitempty"`
	DstFile    string   `protobuf:"bytes,3,opt,name=DstFile,proto3" json:"DstFile,omitempty"`
	Timeout    int64    `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Tags       []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TaskScpFile) Reset() {
	*x = TaskScpFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskScpFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskScpFile) ProtoMessage() {}

func (x *TaskScpFile) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskScpFile.ProtoReflect.Descriptor instead.
func (*TaskScpFile) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{18}
}

func (x *TaskScpFile) GetRemoteHost() string {
	if x != nil {
		return x.RemoteHost
	}
	return ""
}

func (x *TaskScpFile) GetSrcFile() string {
	if x != nil {
		return x.SrcFile
	}
	return ""
}

func (x *TaskScpFile) GetDstFile() string {
	if x != nil {
		return x.DstFile
	}
	return ""
}

func (x *TaskScpFile) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *TaskScpFile) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{19}
}

func (x *ID) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	State     string `protobuf:"bytes,2,opt,name=State,proto3" json:"State,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	StopTime  int64  `protobuf:"varint,4,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	Stdout    string `protobuf:"bytes,5,opt,name=Stdout,proto3" json:"Stdout,omitempty"`
	Stderr    string `protobuf:"bytes,6,opt,name=Stderr,proto3" json:"Stderr,omitempty"`
	ExitCode  int32  `protobuf:"varint,7,opt,name=ExitCode,proto3" json:"ExitCode,omitempty"` //repeated string TaskErr = 8;
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{20}
}

func (x *Status) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Status) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Status) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Status) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *Status) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *Status) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *Status) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

// 三、influxdb
type GetInfluxdbDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql   string `protobuf:"bytes,1,opt,name=Sql,proto3" json:"Sql,omitempty"`
	Epoch string `protobuf:"bytes,2,opt,name=Epoch,proto3" json:"Epoch,omitempty"`
}

func (x *GetInfluxdbDataRequest) Reset() {
	*x = GetInfluxdbDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfluxdbDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfluxdbDataRequest) ProtoMessage() {}

func (x *GetInfluxdbDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfluxdbDataRequest.ProtoReflect.Descriptor instead.
func (*GetInfluxdbDataRequest) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{21}
}

func (x *GetInfluxdbDataRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *GetInfluxdbDataRequest) GetEpoch() string {
	if x != nil {
		return x.Epoch
	}
	return ""
}

type GetInfluxdbDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *GetInfluxdbDataResponse) Reset() {
	*x = GetInfluxdbDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfluxdbDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfluxdbDataResponse) ProtoMessage() {}

func (x *GetInfluxdbDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfluxdbDataResponse.ProtoReflect.Descriptor instead.
func (*GetInfluxdbDataResponse) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{22}
}

func (x *GetInfluxdbDataResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_collect_proto protoreflect.FileDescriptor

var file_collect_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x4f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x64, 0x22, 0xb8, 0x04, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x54, 0x61, 0x67, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x74,
	0x74, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74,
	0x74, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x67, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x57, 0x68, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7c,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x6e, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x73, 0x67, 0x45, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x7a, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x5a, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x30, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04,
	0x69, 0x6e, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x04, 0x69, 0x6e, 0x73, 0x74, 0x22,
	0x37, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x52, 0x04, 0x69, 0x6e, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x04, 0x49, 0x6e,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f,
	0x73, 0x74, 0x53, 0x6e, 0x22, 0x62, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x6c, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x8b, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x53, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a,
	0x0c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x79, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x50,
	0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x49, 0x50, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61,
	0x67, 0x73, 0x22, 0x75, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x48, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x78, 0x65, 0x63, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6d, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6d, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x0b, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x63, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x72, 0x63,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x72, 0x63, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x14, 0x0a, 0x02, 0x49,
	0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0xb4, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74,
	0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x45, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x45, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x40, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x53, 0x71, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x85, 0x01,
	0x0a, 0x05, 0x53, 0x54, 0x41, 0x54, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d,
	0x45, 0x4f, 0x55, 0x54, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x53, 0x48, 0x4e, 0x45, 0x54,
	0x46, 0x41, 0x49, 0x4c, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x41, 0x53, 0x4b, 0x46, 0x41,
	0x49, 0x4c, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x41, 0x53, 0x4b, 0x4e, 0x4f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x10, 0x09, 0x32, 0x84, 0x09, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x3a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x57, 0x68, 0x69, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x66, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x73,
	0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x10,
	0x52, 0x75, 0x6e, 0x43, 0x6d, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x57, 0x61, 0x69, 0x74,
	0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x1a, 0x0b, 0x2e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x44, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0d, 0x53, 0x63, 0x70,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x63, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x1a, 0x0b, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x44, 0x22, 0x00, 0x12,
	0x2b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x2e, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x04,
	0x57, 0x61, 0x69, 0x74, 0x12, 0x0b, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x49,
	0x44, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6c, 0x75,
	0x78, 0x64, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_collect_proto_rawDescOnce sync.Once
	file_collect_proto_rawDescData = file_collect_proto_rawDesc
)

func file_collect_proto_rawDescGZIP() []byte {
	file_collect_proto_rawDescOnce.Do(func() {
		file_collect_proto_rawDescData = protoimpl.X.CompressGZIP(file_collect_proto_rawDescData)
	})
	return file_collect_proto_rawDescData
}

var file_collect_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_collect_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_collect_proto_goTypes = []interface{}{
	(STATE)(0),                        // 0: collect.STATE
	(*Empty)(nil),                     // 1: collect.Empty
	(*GetModelItemListRequest)(nil),   // 2: collect.GetModelItemListRequest
	(*AddItemRequest)(nil),            // 3: collect.AddItemRequest
	(*GetInstItemListRequest)(nil),    // 4: collect.GetInstItemListRequest
	(*SetBlackWhiteRequest)(nil),      // 5: collect.SetBlackWhiteRequest
	(*Response)(nil),                  // 6: collect.Response
	(*UpdateTelegrafRequest)(nil),     // 7: collect.UpdateTelegrafRequest
	(*UpdateTelegrafResponse)(nil),    // 8: collect.UpdateTelegrafResponse
	(*AddInstsRequest)(nil),           // 9: collect.AddInstsRequest
	(*UpdateInstsRequest)(nil),        // 10: collect.UpdateInstsRequest
	(*DeleteInstsRequest)(nil),        // 11: collect.DeleteInstsRequest
	(*Inst)(nil),                      // 12: collect.Inst
	(*AddInstRelationRequest)(nil),    // 13: collect.AddInstRelationRequest
	(*DeleteInstRelationRequest)(nil), // 14: collect.DeleteInstRelationRequest
	(*ChangeHostStatusRequest)(nil),   // 15: collect.ChangeHostStatusRequest
	(*BoolResponse)(nil),              // 16: collect.BoolResponse
	(*TaskDeployAgent)(nil),           // 17: collect.TaskDeployAgent
	(*TaskCommandLine)(nil),           // 18: collect.TaskCommandLine
	(*TaskScpFile)(nil),               // 19: collect.TaskScpFile
	(*ID)(nil),                        // 20: collect.ID
	(*Status)(nil),                    // 21: collect.Status
	(*GetInfluxdbDataRequest)(nil),    // 22: collect.GetInfluxdbDataRequest
	(*GetInfluxdbDataResponse)(nil),   // 23: collect.GetInfluxdbDataResponse
}
var file_collect_proto_depIdxs = []int32{
	12, // 0: collect.AddInstsRequest.inst:type_name -> collect.Inst
	12, // 1: collect.UpdateInstsRequest.inst:type_name -> collect.Inst
	1,  // 2: collect.Collect.GetOfficialItemList:input_type -> collect.Empty
	2,  // 3: collect.Collect.GetModelItemList:input_type -> collect.GetModelItemListRequest
	3,  // 4: collect.Collect.AddItem:input_type -> collect.AddItemRequest
	4,  // 5: collect.Collect.GetInstItemList:input_type -> collect.GetInstItemListRequest
	5,  // 6: collect.Collect.SetBlackWhite:input_type -> collect.SetBlackWhiteRequest
	7,  // 7: collect.Collect.UpdateTelegraf:input_type -> collect.UpdateTelegrafRequest
	9,  // 8: collect.Collect.AddInsts:input_type -> collect.AddInstsRequest
	10, // 9: collect.Collect.UpdateInsts:input_type -> collect.UpdateInstsRequest
	11, // 10: collect.Collect.DeleteInsts:input_type -> collect.DeleteInstsRequest
	13, // 11: collect.Collect.AddInstRelation:input_type -> collect.AddInstRelationRequest
	14, // 12: collect.Collect.DeleteInstRelation:input_type -> collect.DeleteInstRelationRequest
	15, // 13: collect.Collect.ChangeHostStatus:input_type -> collect.ChangeHostStatusRequest
	18, // 14: collect.Collect.RunCmdLineNoWait:input_type -> collect.TaskCommandLine
	19, // 15: collect.Collect.ScpFileNoWait:input_type -> collect.TaskScpFile
	20, // 16: collect.Collect.GetStatus:input_type -> collect.ID
	20, // 17: collect.Collect.Wait:input_type -> collect.ID
	22, // 18: collect.Collect.GetInfluxdbData:input_type -> collect.GetInfluxdbDataRequest
	6,  // 19: collect.Collect.GetOfficialItemList:output_type -> collect.Response
	6,  // 20: collect.Collect.GetModelItemList:output_type -> collect.Response
	6,  // 21: collect.Collect.AddItem:output_type -> collect.Response
	6,  // 22: collect.Collect.GetInstItemList:output_type -> collect.Response
	6,  // 23: collect.Collect.SetBlackWhite:output_type -> collect.Response
	8,  // 24: collect.Collect.UpdateTelegraf:output_type -> collect.UpdateTelegrafResponse
	16, // 25: collect.Collect.AddInsts:output_type -> collect.BoolResponse
	16, // 26: collect.Collect.UpdateInsts:output_type -> collect.BoolResponse
	16, // 27: collect.Collect.DeleteInsts:output_type -> collect.BoolResponse
	16, // 28: collect.Collect.AddInstRelation:output_type -> collect.BoolResponse
	16, // 29: collect.Collect.DeleteInstRelation:output_type -> collect.BoolResponse
	16, // 30: collect.Collect.ChangeHostStatus:output_type -> collect.BoolResponse
	20, // 31: collect.Collect.RunCmdLineNoWait:output_type -> collect.ID
	20, // 32: collect.Collect.ScpFileNoWait:output_type -> collect.ID
	21, // 33: collect.Collect.GetStatus:output_type -> collect.Status
	21, // 34: collect.Collect.Wait:output_type -> collect.Status
	23, // 35: collect.Collect.GetInfluxdbData:output_type -> collect.GetInfluxdbDataResponse
	19, // [19:36] is the sub-list for method output_type
	2,  // [2:19] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_collect_proto_init() }
func file_collect_proto_init() {
	if File_collect_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_collect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelItemListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstItemListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBlackWhiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTelegrafRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTelegrafResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInstsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInstRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeHostStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDeployAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCommandLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskScpFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfluxdbDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfluxdbDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_collect_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_collect_proto_goTypes,
		DependencyIndexes: file_collect_proto_depIdxs,
		EnumInfos:         file_collect_proto_enumTypes,
		MessageInfos:      file_collect_proto_msgTypes,
	}.Build()
	File_collect_proto = out.File
	file_collect_proto_rawDesc = nil
	file_collect_proto_goTypes = nil
	file_collect_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CollectClient is the client API for Collect service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectClient interface {
	// 一、collect
	// 1、官方内置采集项列表
	GetOfficialItemList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Response, error)
	// 2、模型对象下的采集项列表
	GetModelItemList(ctx context.Context, in *GetModelItemListRequest, opts ...grpc.CallOption) (*Response, error)
	// 3、新增采集项接口
	AddItem(ctx context.Context, in *AddItemRequest, opts ...grpc.CallOption) (*Response, error)
	// 4、实例下的采集项列表
	GetInstItemList(ctx context.Context, in *GetInstItemListRequest, opts ...grpc.CallOption) (*Response, error)
	// 5、模型实例维度的采集项的黑白名单设置接口
	SetBlackWhite(ctx context.Context, in *SetBlackWhiteRequest, opts ...grpc.CallOption) (*Response, error)
	// 6、针对主机实例,更新telegraf
	UpdateTelegraf(ctx context.Context, in *UpdateTelegrafRequest, opts ...grpc.CallOption) (*UpdateTelegrafResponse, error)
	// 7、新增实例,支持批量新增
	AddInsts(ctx context.Context, in *AddInstsRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// 8、修改实例,支持批量修改(使用场景:修改实例的collect_user,正常一次只会修改单个实例的collect_user)
	UpdateInsts(ctx context.Context, in *UpdateInstsRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// 9、删除实例,支持批量删除
	DeleteInsts(ctx context.Context, in *DeleteInstsRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// 10、新增实例间关联关系,不支持批量
	AddInstRelation(ctx context.Context, in *AddInstRelationRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// 11、删除实例间关联关系,不支持批量
	DeleteInstRelation(ctx context.Context, in *DeleteInstRelationRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// 12、修改主机的ip、sn、status(主机重新部署时或检查icse_agent时调用),不支持批量
	ChangeHostStatus(ctx context.Context, in *ChangeHostStatusRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	// 2、执行单行命令
	RunCmdLineNoWait(ctx context.Context, in *TaskCommandLine, opts ...grpc.CallOption) (*ID, error)
	// 3、拷贝文件
	ScpFileNoWait(ctx context.Context, in *TaskScpFile, opts ...grpc.CallOption) (*ID, error)
	// 4、查看任务执行状态
	GetStatus(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Status, error)
	// 5、等待
	Wait(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Status, error)
	// 三、influxdb
	// 1、获取influxdb的数据
	GetInfluxdbData(ctx context.Context, in *GetInfluxdbDataRequest, opts ...grpc.CallOption) (*GetInfluxdbDataResponse, error)
}

type collectClient struct {
	cc grpc.ClientConnInterface
}

func NewCollectClient(cc grpc.ClientConnInterface) CollectClient {
	return &collectClient{cc}
}

func (c *collectClient) GetOfficialItemList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/collect.Collect/GetOfficialItemList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) GetModelItemList(ctx context.Context, in *GetModelItemListRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/collect.Collect/GetModelItemList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) AddItem(ctx context.Context, in *AddItemRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/collect.Collect/AddItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) GetInstItemList(ctx context.Context, in *GetInstItemListRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/collect.Collect/GetInstItemList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) SetBlackWhite(ctx context.Context, in *SetBlackWhiteRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/collect.Collect/SetBlackWhite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) UpdateTelegraf(ctx context.Context, in *UpdateTelegrafRequest, opts ...grpc.CallOption) (*UpdateTelegrafResponse, error) {
	out := new(UpdateTelegrafResponse)
	err := c.cc.Invoke(ctx, "/collect.Collect/UpdateTelegraf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) AddInsts(ctx context.Context, in *AddInstsRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/collect.Collect/AddInsts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) UpdateInsts(ctx context.Context, in *UpdateInstsRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/collect.Collect/UpdateInsts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) DeleteInsts(ctx context.Context, in *DeleteInstsRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/collect.Collect/DeleteInsts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) AddInstRelation(ctx context.Context, in *AddInstRelationRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/collect.Collect/AddInstRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) DeleteInstRelation(ctx context.Context, in *DeleteInstRelationRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/collect.Collect/DeleteInstRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) ChangeHostStatus(ctx context.Context, in *ChangeHostStatusRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/collect.Collect/ChangeHostStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) RunCmdLineNoWait(ctx context.Context, in *TaskCommandLine, opts ...grpc.CallOption) (*ID, error) {
	out := new(ID)
	err := c.cc.Invoke(ctx, "/collect.Collect/RunCmdLineNoWait", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) ScpFileNoWait(ctx context.Context, in *TaskScpFile, opts ...grpc.CallOption) (*ID, error) {
	out := new(ID)
	err := c.cc.Invoke(ctx, "/collect.Collect/ScpFileNoWait", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) GetStatus(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/collect.Collect/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) Wait(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/collect.Collect/Wait", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectClient) GetInfluxdbData(ctx context.Context, in *GetInfluxdbDataRequest, opts ...grpc.CallOption) (*GetInfluxdbDataResponse, error) {
	out := new(GetInfluxdbDataResponse)
	err := c.cc.Invoke(ctx, "/collect.Collect/GetInfluxdbData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectServer is the server API for Collect service.
type CollectServer interface {
	// 一、collect
	// 1、官方内置采集项列表
	GetOfficialItemList(context.Context, *Empty) (*Response, error)
	// 2、模型对象下的采集项列表
	GetModelItemList(context.Context, *GetModelItemListRequest) (*Response, error)
	// 3、新增采集项接口
	AddItem(context.Context, *AddItemRequest) (*Response, error)
	// 4、实例下的采集项列表
	GetInstItemList(context.Context, *GetInstItemListRequest) (*Response, error)
	// 5、模型实例维度的采集项的黑白名单设置接口
	SetBlackWhite(context.Context, *SetBlackWhiteRequest) (*Response, error)
	// 6、针对主机实例,更新telegraf
	UpdateTelegraf(context.Context, *UpdateTelegrafRequest) (*UpdateTelegrafResponse, error)
	// 7、新增实例,支持批量新增
	AddInsts(context.Context, *AddInstsRequest) (*BoolResponse, error)
	// 8、修改实例,支持批量修改(使用场景:修改实例的collect_user,正常一次只会修改单个实例的collect_user)
	UpdateInsts(context.Context, *UpdateInstsRequest) (*BoolResponse, error)
	// 9、删除实例,支持批量删除
	DeleteInsts(context.Context, *DeleteInstsRequest) (*BoolResponse, error)
	// 10、新增实例间关联关系,不支持批量
	AddInstRelation(context.Context, *AddInstRelationRequest) (*BoolResponse, error)
	// 11、删除实例间关联关系,不支持批量
	DeleteInstRelation(context.Context, *DeleteInstRelationRequest) (*BoolResponse, error)
	// 12、修改主机的ip、sn、status(主机重新部署时或检查icse_agent时调用),不支持批量
	ChangeHostStatus(context.Context, *ChangeHostStatusRequest) (*BoolResponse, error)
	// 2、执行单行命令
	RunCmdLineNoWait(context.Context, *TaskCommandLine) (*ID, error)
	// 3、拷贝文件
	ScpFileNoWait(context.Context, *TaskScpFile) (*ID, error)
	// 4、查看任务执行状态
	GetStatus(context.Context, *ID) (*Status, error)
	// 5、等待
	Wait(context.Context, *ID) (*Status, error)
	// 三、influxdb
	// 1、获取influxdb的数据
	GetInfluxdbData(context.Context, *GetInfluxdbDataRequest) (*GetInfluxdbDataResponse, error)
}

// UnimplementedCollectServer can be embedded to have forward compatible implementations.
type UnimplementedCollectServer struct {
}

func (*UnimplementedCollectServer) GetOfficialItemList(context.Context, *Empty) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOfficialItemList not implemented")
}
func (*UnimplementedCollectServer) GetModelItemList(context.Context, *GetModelItemListRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelItemList not implemented")
}
func (*UnimplementedCollectServer) AddItem(context.Context, *AddItemRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddItem not implemented")
}
func (*UnimplementedCollectServer) GetInstItemList(context.Context, *GetInstItemListRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstItemList not implemented")
}
func (*UnimplementedCollectServer) SetBlackWhite(context.Context, *SetBlackWhiteRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBlackWhite not implemented")
}
func (*UnimplementedCollectServer) UpdateTelegraf(context.Context, *UpdateTelegrafRequest) (*UpdateTelegrafResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTelegraf not implemented")
}
func (*UnimplementedCollectServer) AddInsts(context.Context, *AddInstsRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInsts not implemented")
}
func (*UnimplementedCollectServer) UpdateInsts(context.Context, *UpdateInstsRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInsts not implemented")
}
func (*UnimplementedCollectServer) DeleteInsts(context.Context, *DeleteInstsRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInsts not implemented")
}
func (*UnimplementedCollectServer) AddInstRelation(context.Context, *AddInstRelationRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInstRelation not implemented")
}
func (*UnimplementedCollectServer) DeleteInstRelation(context.Context, *DeleteInstRelationRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInstRelation not implemented")
}
func (*UnimplementedCollectServer) ChangeHostStatus(context.Context, *ChangeHostStatusRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeHostStatus not implemented")
}
func (*UnimplementedCollectServer) RunCmdLineNoWait(context.Context, *TaskCommandLine) (*ID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunCmdLineNoWait not implemented")
}
func (*UnimplementedCollectServer) ScpFileNoWait(context.Context, *TaskScpFile) (*ID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScpFileNoWait not implemented")
}
func (*UnimplementedCollectServer) GetStatus(context.Context, *ID) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedCollectServer) Wait(context.Context, *ID) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Wait not implemented")
}
func (*UnimplementedCollectServer) GetInfluxdbData(context.Context, *GetInfluxdbDataRequest) (*GetInfluxdbDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfluxdbData not implemented")
}

func RegisterCollectServer(s *grpc.Server, srv CollectServer) {
	s.RegisterService(&_Collect_serviceDesc, srv)
}

func _Collect_GetOfficialItemList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).GetOfficialItemList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/GetOfficialItemList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).GetOfficialItemList(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_GetModelItemList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModelItemListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).GetModelItemList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/GetModelItemList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).GetModelItemList(ctx, req.(*GetModelItemListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_AddItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).AddItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/AddItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).AddItem(ctx, req.(*AddItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_GetInstItemList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstItemListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).GetInstItemList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/GetInstItemList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).GetInstItemList(ctx, req.(*GetInstItemListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_SetBlackWhite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBlackWhiteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).SetBlackWhite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/SetBlackWhite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).SetBlackWhite(ctx, req.(*SetBlackWhiteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_UpdateTelegraf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTelegrafRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).UpdateTelegraf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/UpdateTelegraf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).UpdateTelegraf(ctx, req.(*UpdateTelegrafRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_AddInsts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).AddInsts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/AddInsts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).AddInsts(ctx, req.(*AddInstsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_UpdateInsts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInstsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).UpdateInsts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/UpdateInsts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).UpdateInsts(ctx, req.(*UpdateInstsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_DeleteInsts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInstsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).DeleteInsts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/DeleteInsts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).DeleteInsts(ctx, req.(*DeleteInstsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_AddInstRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).AddInstRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/AddInstRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).AddInstRelation(ctx, req.(*AddInstRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_DeleteInstRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInstRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).DeleteInstRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/DeleteInstRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).DeleteInstRelation(ctx, req.(*DeleteInstRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_ChangeHostStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeHostStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).ChangeHostStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/ChangeHostStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).ChangeHostStatus(ctx, req.(*ChangeHostStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_RunCmdLineNoWait_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskCommandLine)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).RunCmdLineNoWait(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/RunCmdLineNoWait",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).RunCmdLineNoWait(ctx, req.(*TaskCommandLine))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_ScpFileNoWait_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskScpFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).ScpFileNoWait(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/ScpFileNoWait",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).ScpFileNoWait(ctx, req.(*TaskScpFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).GetStatus(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_Wait_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).Wait(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/Wait",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).Wait(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collect_GetInfluxdbData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfluxdbDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).GetInfluxdbData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/GetInfluxdbData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).GetInfluxdbData(ctx, req.(*GetInfluxdbDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Collect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "collect.Collect",
	HandlerType: (*CollectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOfficialItemList",
			Handler:    _Collect_GetOfficialItemList_Handler,
		},
		{
			MethodName: "GetModelItemList",
			Handler:    _Collect_GetModelItemList_Handler,
		},
		{
			MethodName: "AddItem",
			Handler:    _Collect_AddItem_Handler,
		},
		{
			MethodName: "GetInstItemList",
			Handler:    _Collect_GetInstItemList_Handler,
		},
		{
			MethodName: "SetBlackWhite",
			Handler:    _Collect_SetBlackWhite_Handler,
		},
		{
			MethodName: "UpdateTelegraf",
			Handler:    _Collect_UpdateTelegraf_Handler,
		},
		{
			MethodName: "AddInsts",
			Handler:    _Collect_AddInsts_Handler,
		},
		{
			MethodName: "UpdateInsts",
			Handler:    _Collect_UpdateInsts_Handler,
		},
		{
			MethodName: "DeleteInsts",
			Handler:    _Collect_DeleteInsts_Handler,
		},
		{
			MethodName: "AddInstRelation",
			Handler:    _Collect_AddInstRelation_Handler,
		},
		{
			MethodName: "DeleteInstRelation",
			Handler:    _Collect_DeleteInstRelation_Handler,
		},
		{
			MethodName: "ChangeHostStatus",
			Handler:    _Collect_ChangeHostStatus_Handler,
		},
		{
			MethodName: "RunCmdLineNoWait",
			Handler:    _Collect_RunCmdLineNoWait_Handler,
		},
		{
			MethodName: "ScpFileNoWait",
			Handler:    _Collect_ScpFileNoWait_Handler,
		},
		{
			MethodName: "GetStatus",
			Handler:    _Collect_GetStatus_Handler,
		},
		{
			MethodName: "Wait",
			Handler:    _Collect_Wait_Handler,
		},
		{
			MethodName: "GetInfluxdbData",
			Handler:    _Collect_GetInfluxdbData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "collect.proto",
}
